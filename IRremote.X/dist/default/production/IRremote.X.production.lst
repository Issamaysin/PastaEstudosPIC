

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Oct 26 16:59:06 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	12F1822
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.20
    15                           ; Generated 12/02/2020 GMT
    16                           ; 
    17                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC12F1822 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  0011                     	;# 
    62  0012                     	;# 
    63  0015                     	;# 
    64  0016                     	;# 
    65  0016                     	;# 
    66  0017                     	;# 
    67  0018                     	;# 
    68  0019                     	;# 
    69  001A                     	;# 
    70  001B                     	;# 
    71  001C                     	;# 
    72  001E                     	;# 
    73  001F                     	;# 
    74  008C                     	;# 
    75  0091                     	;# 
    76  0092                     	;# 
    77  0095                     	;# 
    78  0096                     	;# 
    79  0097                     	;# 
    80  0098                     	;# 
    81  0099                     	;# 
    82  009A                     	;# 
    83  009B                     	;# 
    84  009B                     	;# 
    85  009C                     	;# 
    86  009D                     	;# 
    87  009E                     	;# 
    88  010C                     	;# 
    89  0111                     	;# 
    90  0112                     	;# 
    91  0115                     	;# 
    92  0116                     	;# 
    93  0117                     	;# 
    94  0118                     	;# 
    95  0119                     	;# 
    96  011A                     	;# 
    97  011B                     	;# 
    98  011D                     	;# 
    99  011D                     	;# 
   100  018C                     	;# 
   101  0191                     	;# 
   102  0191                     	;# 
   103  0192                     	;# 
   104  0193                     	;# 
   105  0193                     	;# 
   106  0193                     	;# 
   107  0194                     	;# 
   108  0195                     	;# 
   109  0196                     	;# 
   110  0199                     	;# 
   111  019A                     	;# 
   112  019B                     	;# 
   113  019B                     	;# 
   114  019B                     	;# 
   115  019B                     	;# 
   116  019C                     	;# 
   117  019C                     	;# 
   118  019D                     	;# 
   119  019E                     	;# 
   120  019F                     	;# 
   121  020C                     	;# 
   122  0211                     	;# 
   123  0211                     	;# 
   124  0212                     	;# 
   125  0212                     	;# 
   126  0213                     	;# 
   127  0213                     	;# 
   128  0214                     	;# 
   129  0214                     	;# 
   130  0215                     	;# 
   131  0215                     	;# 
   132  0215                     	;# 
   133  0216                     	;# 
   134  0216                     	;# 
   135  0217                     	;# 
   136  0217                     	;# 
   137  0291                     	;# 
   138  0291                     	;# 
   139  0292                     	;# 
   140  0293                     	;# 
   141  0294                     	;# 
   142  0295                     	;# 
   143  0295                     	;# 
   144  0296                     	;# 
   145  0391                     	;# 
   146  0392                     	;# 
   147  0393                     	;# 
   148  039A                     	;# 
   149  039C                     	;# 
   150  039D                     	;# 
   151  039E                     	;# 
   152  039F                     	;# 
   153  0FE4                     	;# 
   154  0FE5                     	;# 
   155  0FE6                     	;# 
   156  0FE7                     	;# 
   157  0FE8                     	;# 
   158  0FE9                     	;# 
   159  0FEA                     	;# 
   160  0FEB                     	;# 
   161  0FED                     	;# 
   162  0FEE                     	;# 
   163  0FEF                     	;# 
   164  0000                     	;# 
   165  0001                     	;# 
   166  0002                     	;# 
   167  0003                     	;# 
   168  0004                     	;# 
   169  0005                     	;# 
   170  0006                     	;# 
   171  0007                     	;# 
   172  0008                     	;# 
   173  0009                     	;# 
   174  000A                     	;# 
   175  000B                     	;# 
   176  000C                     	;# 
   177  0011                     	;# 
   178  0012                     	;# 
   179  0015                     	;# 
   180  0016                     	;# 
   181  0016                     	;# 
   182  0017                     	;# 
   183  0018                     	;# 
   184  0019                     	;# 
   185  001A                     	;# 
   186  001B                     	;# 
   187  001C                     	;# 
   188  001E                     	;# 
   189  001F                     	;# 
   190  008C                     	;# 
   191  0091                     	;# 
   192  0092                     	;# 
   193  0095                     	;# 
   194  0096                     	;# 
   195  0097                     	;# 
   196  0098                     	;# 
   197  0099                     	;# 
   198  009A                     	;# 
   199  009B                     	;# 
   200  009B                     	;# 
   201  009C                     	;# 
   202  009D                     	;# 
   203  009E                     	;# 
   204  010C                     	;# 
   205  0111                     	;# 
   206  0112                     	;# 
   207  0115                     	;# 
   208  0116                     	;# 
   209  0117                     	;# 
   210  0118                     	;# 
   211  0119                     	;# 
   212  011A                     	;# 
   213  011B                     	;# 
   214  011D                     	;# 
   215  011D                     	;# 
   216  018C                     	;# 
   217  0191                     	;# 
   218  0191                     	;# 
   219  0192                     	;# 
   220  0193                     	;# 
   221  0193                     	;# 
   222  0193                     	;# 
   223  0194                     	;# 
   224  0195                     	;# 
   225  0196                     	;# 
   226  0199                     	;# 
   227  019A                     	;# 
   228  019B                     	;# 
   229  019B                     	;# 
   230  019B                     	;# 
   231  019B                     	;# 
   232  019C                     	;# 
   233  019C                     	;# 
   234  019D                     	;# 
   235  019E                     	;# 
   236  019F                     	;# 
   237  020C                     	;# 
   238  0211                     	;# 
   239  0211                     	;# 
   240  0212                     	;# 
   241  0212                     	;# 
   242  0213                     	;# 
   243  0213                     	;# 
   244  0214                     	;# 
   245  0214                     	;# 
   246  0215                     	;# 
   247  0215                     	;# 
   248  0215                     	;# 
   249  0216                     	;# 
   250  0216                     	;# 
   251  0217                     	;# 
   252  0217                     	;# 
   253  0291                     	;# 
   254  0291                     	;# 
   255  0292                     	;# 
   256  0293                     	;# 
   257  0294                     	;# 
   258  0295                     	;# 
   259  0295                     	;# 
   260  0296                     	;# 
   261  0391                     	;# 
   262  0392                     	;# 
   263  0393                     	;# 
   264  039A                     	;# 
   265  039C                     	;# 
   266  039D                     	;# 
   267  039E                     	;# 
   268  039F                     	;# 
   269  0FE4                     	;# 
   270  0FE5                     	;# 
   271  0FE6                     	;# 
   272  0FE7                     	;# 
   273  0FE8                     	;# 
   274  0FE9                     	;# 
   275  0FEA                     	;# 
   276  0FEB                     	;# 
   277  0FED                     	;# 
   278  0FEE                     	;# 
   279  0FEF                     	;# 
   280  0000                     	;# 
   281  0001                     	;# 
   282  0002                     	;# 
   283  0003                     	;# 
   284  0004                     	;# 
   285  0005                     	;# 
   286  0006                     	;# 
   287  0007                     	;# 
   288  0008                     	;# 
   289  0009                     	;# 
   290  000A                     	;# 
   291  000B                     	;# 
   292  000C                     	;# 
   293  0011                     	;# 
   294  0012                     	;# 
   295  0015                     	;# 
   296  0016                     	;# 
   297  0016                     	;# 
   298  0017                     	;# 
   299  0018                     	;# 
   300  0019                     	;# 
   301  001A                     	;# 
   302  001B                     	;# 
   303  001C                     	;# 
   304  001E                     	;# 
   305  001F                     	;# 
   306  008C                     	;# 
   307  0091                     	;# 
   308  0092                     	;# 
   309  0095                     	;# 
   310  0096                     	;# 
   311  0097                     	;# 
   312  0098                     	;# 
   313  0099                     	;# 
   314  009A                     	;# 
   315  009B                     	;# 
   316  009B                     	;# 
   317  009C                     	;# 
   318  009D                     	;# 
   319  009E                     	;# 
   320  010C                     	;# 
   321  0111                     	;# 
   322  0112                     	;# 
   323  0115                     	;# 
   324  0116                     	;# 
   325  0117                     	;# 
   326  0118                     	;# 
   327  0119                     	;# 
   328  011A                     	;# 
   329  011B                     	;# 
   330  011D                     	;# 
   331  011D                     	;# 
   332  018C                     	;# 
   333  0191                     	;# 
   334  0191                     	;# 
   335  0192                     	;# 
   336  0193                     	;# 
   337  0193                     	;# 
   338  0193                     	;# 
   339  0194                     	;# 
   340  0195                     	;# 
   341  0196                     	;# 
   342  0199                     	;# 
   343  019A                     	;# 
   344  019B                     	;# 
   345  019B                     	;# 
   346  019B                     	;# 
   347  019B                     	;# 
   348  019C                     	;# 
   349  019C                     	;# 
   350  019D                     	;# 
   351  019E                     	;# 
   352  019F                     	;# 
   353  020C                     	;# 
   354  0211                     	;# 
   355  0211                     	;# 
   356  0212                     	;# 
   357  0212                     	;# 
   358  0213                     	;# 
   359  0213                     	;# 
   360  0214                     	;# 
   361  0214                     	;# 
   362  0215                     	;# 
   363  0215                     	;# 
   364  0215                     	;# 
   365  0216                     	;# 
   366  0216                     	;# 
   367  0217                     	;# 
   368  0217                     	;# 
   369  0291                     	;# 
   370  0291                     	;# 
   371  0292                     	;# 
   372  0293                     	;# 
   373  0294                     	;# 
   374  0295                     	;# 
   375  0295                     	;# 
   376  0296                     	;# 
   377  0391                     	;# 
   378  0392                     	;# 
   379  0393                     	;# 
   380  039A                     	;# 
   381  039C                     	;# 
   382  039D                     	;# 
   383  039E                     	;# 
   384  039F                     	;# 
   385  0FE4                     	;# 
   386  0FE5                     	;# 
   387  0FE6                     	;# 
   388  0FE7                     	;# 
   389  0FE8                     	;# 
   390  0FE9                     	;# 
   391  0FEA                     	;# 
   392  0FEB                     	;# 
   393  0FED                     	;# 
   394  0FEE                     	;# 
   395  0FEF                     	;# 
   396  000C                     _PORTA	set	12
   397  001B                     _PR2	set	27
   398  001C                     _T2CON	set	28
   399  0015                     _TMR0	set	21
   400  005D                     _TMR0IE	set	93
   401  005E                     _PEIE	set	94
   402  005F                     _GIE	set	95
   403  0089                     _TMR2IF	set	137
   404  005A                     _TMR0IF	set	90
   405  008C                     _TRISA	set	140
   406  0095                     _OPTION_REG	set	149
   407  0099                     _OSCCON	set	153
   408  0489                     _TMR2IE	set	1161
   409  018C                     _ANSELA	set	396
   410                           
   411                           	psect	cinit
   412  0027                     start_initialization:	
   413                           ; #config settings
   414                           
   415  0027                     __initialization:
   416                           
   417                           ; Clear objects allocated to BANK0
   418  0027  0020               	movlb	0	; select bank0
   419  0028  01A0               	clrf	__pbssBANK0& (0+127)
   420  0029  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   421  002A  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   422  002B  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   423  002C  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   424  002D  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   425  002E  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   426  002F  01A7               	clrf	(__pbssBANK0+7)& (0+127)
   427  0030                     end_of_initialization:	
   428                           ;End of C runtime variable initialization code
   429                           
   430  0030                     __end_of__initialization:
   431  0030  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   432  0031  0020               	movlb	0
   433  0032  2833               	ljmp	_main	;jump to C main() function
   434                           
   435                           	psect	bssBANK0
   436  0020                     __pbssBANK0:
   437  0020                     _uiCountermsTimer2:
   438  0020                     	ds	4
   439  0024                     _uiCounterms:
   440  0024                     	ds	4
   441                           
   442                           	psect	cstackCOMMON
   443  0070                     __pcstackCOMMON:
   444  0070                     ?_togglePin:
   445  0070                     ?_my_isr_routine:	
   446                           ; 1 bytes @ 0x0
   447                           
   448  0070                     ??_my_isr_routine:	
   449                           ; 1 bytes @ 0x0
   450                           
   451  0070                     ?_main:	
   452                           ; 1 bytes @ 0x0
   453                           
   454  0070                     togglePin@iPin:	
   455                           ; 1 bytes @ 0x0
   456                           
   457                           
   458                           ; 2 bytes @ 0x0
   459  0070                     	ds	2
   460  0072                     ??_togglePin:
   461                           
   462                           ; 1 bytes @ 0x2
   463  0072                     	ds	2
   464  0074                     ??_main:
   465                           
   466                           ; 1 bytes @ 0x4
   467  0074                     	ds	4
   468                           
   469                           	psect	cstackBANK0
   470  0028                     __pcstackBANK0:
   471  0028                     main@uiContadorTempo:
   472                           
   473                           ; 4 bytes @ 0x0
   474  0028                     	ds	4
   475  002C                     main@uiContadorTempo2:
   476                           
   477                           ; 4 bytes @ 0x4
   478  002C                     	ds	4
   479                           
   480                           	psect	maintext
   481  0033                     __pmaintext:	
   482 ;;
   483 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   484 ;;
   485 ;; *************** function _main *****************
   486 ;; Defined at:
   487 ;;		line 44 in file "main.c"
   488 ;; Parameters:    Size  Location     Type
   489 ;;		None
   490 ;; Auto vars:     Size  Location     Type
   491 ;;  uiContadorTe    4    4[BANK0 ] unsigned long 
   492 ;;  uiContadorTe    4    0[BANK0 ] unsigned long 
   493 ;; Return value:  Size  Location     Type
   494 ;;                  1    wreg      void 
   495 ;; Registers used:
   496 ;;		wreg, status,2, status,0, pclath, cstack
   497 ;; Tracked objects:
   498 ;;		On entry : B1F/0
   499 ;;		On exit  : 0/0
   500 ;;		Unchanged: 0/0
   501 ;; Data sizes:     COMMON   BANK0   BANK1
   502 ;;      Params:         0       0       0
   503 ;;      Locals:         0       8       0
   504 ;;      Temps:          4       0       0
   505 ;;      Totals:         4       8       0
   506 ;;Total ram usage:       12 bytes
   507 ;; Hardware stack levels required when called: 2
   508 ;; This function calls:
   509 ;;		_togglePin
   510 ;; This function is called by:
   511 ;;		Startup code after reset
   512 ;; This function uses a non-reentrant model
   513 ;;
   514                           
   515                           
   516                           ;psect for function _main
   517  0033                     _main:
   518  0033                     l751:	
   519                           ;incstack = 0
   520                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   521                           
   522                           
   523                           ;main.c: 49:     OSCCON = 0b1111100;
   524  0033  307C               	movlw	124
   525  0034  0021               	movlb	1	; select bank1
   526  0035  0099               	movwf	25	;volatile
   527                           
   528                           ;main.c: 52:     OPTION_REG = 0b0000100;
   529  0036  3004               	movlw	4
   530  0037  0095               	movwf	21	;volatile
   531                           
   532                           ;main.c: 53:     TMR0=131;
   533  0038  3083               	movlw	131
   534  0039  0020               	movlb	0	; select bank0
   535  003A  0095               	movwf	21	;volatile
   536  003B                     l753:
   537                           
   538                           ;main.c: 54:     GIE=1;
   539  003B  178B               	bsf	11,7	;volatile
   540  003C                     l755:
   541                           
   542                           ;main.c: 55:     PEIE=1;
   543  003C  170B               	bsf	11,6	;volatile
   544  003D                     l757:
   545                           
   546                           ;main.c: 56:     TMR0IE=1;
   547  003D  168B               	bsf	11,5	;volatile
   548  003E                     l759:
   549                           
   550                           ;main.c: 60:     TMR2IE = 1;
   551  003E  0021               	movlb	1	; select bank1
   552  003F  1491               	bsf	17,1	;volatile
   553                           
   554                           ;main.c: 61:     T2CON = 0b00111101;
   555  0040  303D               	movlw	61
   556  0041  0020               	movlb	0	; select bank0
   557  0042  009C               	movwf	28	;volatile
   558                           
   559                           ;main.c: 62:     PR2 = 125;
   560  0043  307D               	movlw	125
   561  0044  009B               	movwf	27	;volatile
   562  0045                     l761:
   563                           
   564                           ;main.c: 69:     ANSELA = 0x00;
   565  0045  0023               	movlb	3	; select bank3
   566  0046  018C               	clrf	12	;volatile
   567  0047                     l763:
   568                           
   569                           ;main.c: 70:     TRISA = 0b1111010;
   570  0047  307A               	movlw	122
   571  0048  0021               	movlb	1	; select bank1
   572  0049  008C               	movwf	12	;volatile
   573                           
   574                           ;main.c: 71:     PORTA = 0x00;
   575  004A  0020               	movlb	0	; select bank0
   576  004B  018C               	clrf	12	;volatile
   577  004C                     l765:
   578                           
   579                           ;main.c: 74:     unsigned long uiContadorTempo = 0;
   580  004C  3000               	movlw	0
   581  004D  00AB               	movwf	main@uiContadorTempo+3
   582  004E  3000               	movlw	0
   583  004F  00AA               	movwf	main@uiContadorTempo+2
   584  0050  3000               	movlw	0
   585  0051  00A9               	movwf	main@uiContadorTempo+1
   586  0052  3000               	movlw	0
   587  0053  00A8               	movwf	main@uiContadorTempo
   588  0054                     l767:
   589                           
   590                           ;main.c: 75:     unsigned long uiContadorTempo2 = 0;
   591  0054  3000               	movlw	0
   592  0055  00AF               	movwf	main@uiContadorTempo2+3
   593  0056  3000               	movlw	0
   594  0057  00AE               	movwf	main@uiContadorTempo2+2
   595  0058  3000               	movlw	0
   596  0059  00AD               	movwf	main@uiContadorTempo2+1
   597  005A  3000               	movlw	0
   598  005B  00AC               	movwf	main@uiContadorTempo2
   599  005C                     l769:
   600                           
   601                           ;main.c: 80:         if((uiCounterms - uiContadorTempo) > 1000){
   602  005C  0020               	movlb	0	; select bank0
   603  005D  0828               	movf	main@uiContadorTempo,w
   604  005E  0224               	subwf	_uiCounterms,w
   605  005F  00F4               	movwf	??_main
   606  0060  0829               	movf	main@uiContadorTempo+1,w
   607  0061  3B25               	subwfb	_uiCounterms+1,w
   608  0062  00F5               	movwf	??_main+1
   609  0063  082A               	movf	main@uiContadorTempo+2,w
   610  0064  3B26               	subwfb	_uiCounterms+2,w
   611  0065  00F6               	movwf	??_main+2
   612  0066  082B               	movf	main@uiContadorTempo+3,w
   613  0067  3B27               	subwfb	_uiCounterms+3,w
   614  0068  00F7               	movwf	??_main+3
   615  0069  0877               	movf	??_main+3,w
   616  006A  1D03               	btfss	3,2
   617  006B  2877               	goto	u190
   618  006C  0876               	movf	??_main+2,w
   619  006D  1D03               	btfss	3,2
   620  006E  2877               	goto	u190
   621  006F  30E9               	movlw	233
   622  0070  0274               	subwf	??_main,w
   623  0071  3003               	movlw	3
   624  0072  3B75               	subwfb	??_main+1,w
   625  0073  1C03               	btfss	3,0
   626  0074  2876               	goto	u191
   627  0075  2877               	goto	u190
   628  0076                     u191:
   629  0076  2887               	goto	l775
   630  0077                     u190:
   631  0077                     l771:
   632                           
   633                           ;main.c: 81:             togglePin(2);
   634  0077  3002               	movlw	2
   635  0078  00F0               	movwf	togglePin@iPin
   636  0079  3000               	movlw	0
   637  007A  00F1               	movwf	togglePin@iPin+1
   638  007B  3180  20B3  3180   	fcall	_togglePin
   639  007E                     l773:
   640                           
   641                           ;main.c: 84:             uiContadorTempo = uiCounterms;
   642  007E  0020               	movlb	0	; select bank0
   643  007F  0827               	movf	_uiCounterms+3,w
   644  0080  00AB               	movwf	main@uiContadorTempo+3
   645  0081  0826               	movf	_uiCounterms+2,w
   646  0082  00AA               	movwf	main@uiContadorTempo+2
   647  0083  0825               	movf	_uiCounterms+1,w
   648  0084  00A9               	movwf	main@uiContadorTempo+1
   649  0085  0824               	movf	_uiCounterms,w
   650  0086  00A8               	movwf	main@uiContadorTempo
   651  0087                     l775:
   652                           
   653                           ;main.c: 88:         if((uiCountermsTimer2 - uiContadorTempo2) > 1000){
   654  0087  0020               	movlb	0	; select bank0
   655  0088  082C               	movf	main@uiContadorTempo2,w
   656  0089  0220               	subwf	_uiCountermsTimer2,w
   657  008A  00F4               	movwf	??_main
   658  008B  082D               	movf	main@uiContadorTempo2+1,w
   659  008C  3B21               	subwfb	_uiCountermsTimer2+1,w
   660  008D  00F5               	movwf	??_main+1
   661  008E  082E               	movf	main@uiContadorTempo2+2,w
   662  008F  3B22               	subwfb	_uiCountermsTimer2+2,w
   663  0090  00F6               	movwf	??_main+2
   664  0091  082F               	movf	main@uiContadorTempo2+3,w
   665  0092  3B23               	subwfb	_uiCountermsTimer2+3,w
   666  0093  00F7               	movwf	??_main+3
   667  0094  0877               	movf	??_main+3,w
   668  0095  1D03               	btfss	3,2
   669  0096  28A2               	goto	u200
   670  0097  0876               	movf	??_main+2,w
   671  0098  1D03               	btfss	3,2
   672  0099  28A2               	goto	u200
   673  009A  30E9               	movlw	233
   674  009B  0274               	subwf	??_main,w
   675  009C  3003               	movlw	3
   676  009D  3B75               	subwfb	??_main+1,w
   677  009E  1C03               	btfss	3,0
   678  009F  28A1               	goto	u201
   679  00A0  28A2               	goto	u200
   680  00A1                     u201:
   681  00A1  285C               	goto	l769
   682  00A2                     u200:
   683  00A2                     l777:
   684                           
   685                           ;main.c: 89:             togglePin(0);
   686  00A2  3000               	movlw	0
   687  00A3  00F0               	movwf	togglePin@iPin
   688  00A4  00F1               	movwf	togglePin@iPin+1
   689  00A5  3180  20B3  3180   	fcall	_togglePin
   690  00A8                     l779:
   691                           
   692                           ;main.c: 92:             uiContadorTempo2 = uiCountermsTimer2;
   693  00A8  0020               	movlb	0	; select bank0
   694  00A9  0823               	movf	_uiCountermsTimer2+3,w
   695  00AA  00AF               	movwf	main@uiContadorTempo2+3
   696  00AB  0822               	movf	_uiCountermsTimer2+2,w
   697  00AC  00AE               	movwf	main@uiContadorTempo2+2
   698  00AD  0821               	movf	_uiCountermsTimer2+1,w
   699  00AE  00AD               	movwf	main@uiContadorTempo2+1
   700  00AF  0820               	movf	_uiCountermsTimer2,w
   701  00B0  00AC               	movwf	main@uiContadorTempo2
   702  00B1  285C               	goto	l769
   703  00B2  2826               	ljmp	start
   704  00B3                     __end_of_main:
   705                           
   706                           	psect	text1
   707  00B3                     __ptext1:	
   708 ;; *************** function _togglePin *****************
   709 ;; Defined at:
   710 ;;		line 18 in file "utils.c"
   711 ;; Parameters:    Size  Location     Type
   712 ;;  iPin            2    0[COMMON] int 
   713 ;; Auto vars:     Size  Location     Type
   714 ;;		None
   715 ;; Return value:  Size  Location     Type
   716 ;;                  1    wreg      void 
   717 ;; Registers used:
   718 ;;		wreg, status,2, status,0
   719 ;; Tracked objects:
   720 ;;		On entry : 0/0
   721 ;;		On exit  : 0/0
   722 ;;		Unchanged: 0/0
   723 ;; Data sizes:     COMMON   BANK0   BANK1
   724 ;;      Params:         2       0       0
   725 ;;      Locals:         0       0       0
   726 ;;      Temps:          2       0       0
   727 ;;      Totals:         4       0       0
   728 ;;Total ram usage:        4 bytes
   729 ;; Hardware stack levels used: 1
   730 ;; Hardware stack levels required when called: 1
   731 ;; This function calls:
   732 ;;		Nothing
   733 ;; This function is called by:
   734 ;;		_main
   735 ;; This function uses a non-reentrant model
   736 ;;
   737                           
   738                           
   739                           ;psect for function _togglePin
   740  00B3                     _togglePin:
   741  00B3                     l733:	
   742                           ;incstack = 0
   743                           ; Regs used in _togglePin: [wreg+status,2+status,0]
   744                           
   745                           
   746                           ;utils.c: 19:     if(0 <= iPin && 5 >= iPin){
   747  00B3  1BF1               	btfsc	togglePin@iPin+1,7
   748  00B4  28B6               	goto	u141
   749  00B5  28B7               	goto	u140
   750  00B6                     u141:
   751  00B6  28D0               	goto	l65
   752  00B7                     u140:
   753  00B7                     l735:
   754  00B7  0871               	movf	togglePin@iPin+1,w
   755  00B8  3A80               	xorlw	128
   756  00B9  00F2               	movwf	??_togglePin
   757  00BA  3080               	movlw	128
   758  00BB  0272               	subwf	??_togglePin,w
   759  00BC  1D03               	skipz
   760  00BD  28C0               	goto	u155
   761  00BE  3006               	movlw	6
   762  00BF  0270               	subwf	togglePin@iPin,w
   763  00C0                     u155:
   764  00C0  1803               	skipnc
   765  00C1  28C3               	goto	u151
   766  00C2  28C4               	goto	u150
   767  00C3                     u151:
   768  00C3  28D0               	goto	l65
   769  00C4                     u150:
   770  00C4                     l737:
   771                           
   772                           ;utils.c: 20:         PORTA ^= (1<<iPin);
   773  00C4  3001               	movlw	1
   774  00C5  00F2               	movwf	??_togglePin
   775  00C6  0A70               	incf	togglePin@iPin,w
   776  00C7  28C9               	goto	u164
   777  00C8                     u165:
   778  00C8  35F2               	lslf	??_togglePin,f
   779  00C9                     u164:
   780  00C9  0B89               	decfsz	9,f
   781  00CA  28C8               	goto	u165
   782  00CB  0872               	movf	??_togglePin,w
   783  00CC  00F3               	movwf	??_togglePin+1
   784  00CD  0873               	movf	??_togglePin+1,w
   785  00CE  0020               	movlb	0	; select bank0
   786  00CF  068C               	xorwf	12,f	;volatile
   787  00D0                     l65:
   788  00D0  0008               	return
   789  00D1                     __end_of_togglePin:
   790                           
   791                           	psect	intentry
   792  0004                     __pintentry:	
   793 ;; *************** function _my_isr_routine *****************
   794 ;; Defined at:
   795 ;;		line 30 in file "main.c"
   796 ;; Parameters:    Size  Location     Type
   797 ;;		None
   798 ;; Auto vars:     Size  Location     Type
   799 ;;		None
   800 ;; Return value:  Size  Location     Type
   801 ;;                  1    wreg      void 
   802 ;; Registers used:
   803 ;;		wreg
   804 ;; Tracked objects:
   805 ;;		On entry : 0/0
   806 ;;		On exit  : 0/0
   807 ;;		Unchanged: 0/0
   808 ;; Data sizes:     COMMON   BANK0   BANK1
   809 ;;      Params:         0       0       0
   810 ;;      Locals:         0       0       0
   811 ;;      Temps:          0       0       0
   812 ;;      Totals:         0       0       0
   813 ;;Total ram usage:        0 bytes
   814 ;; Hardware stack levels used: 1
   815 ;; This function calls:
   816 ;;		Nothing
   817 ;; This function is called by:
   818 ;;		Interrupt level 1
   819 ;; This function uses a non-reentrant model
   820 ;;
   821                           
   822  0004                     _my_isr_routine:
   823                           
   824                           ;incstack = 0
   825  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
   826                           
   827                           ; Regs used in _my_isr_routine: [wreg]
   828  0005  3180               	pagesel	$
   829  0006                     i1l739:
   830                           
   831                           ;main.c: 31:     if(TMR0IF)
   832  0006  1D0B               	btfss	11,2	;volatile
   833  0007  2809               	goto	u17_21
   834  0008  280A               	goto	u17_20
   835  0009                     u17_21:
   836  0009  2816               	goto	i1l745
   837  000A                     u17_20:
   838  000A                     i1l741:
   839                           
   840                           ;main.c: 32:     {;main.c: 33:         TMR0 = 131;
   841  000A  3083               	movlw	131
   842  000B  0020               	movlb	0	; select bank0
   843  000C  0095               	movwf	21	;volatile
   844  000D                     i1l743:
   845                           
   846                           ;main.c: 34:         TMR0IF = 0;
   847  000D  110B               	bcf	11,2	;volatile
   848                           
   849                           ;main.c: 35:         uiCounterms++;
   850  000E  3001               	movlw	1
   851  000F  07A4               	addwf	_uiCounterms,f
   852  0010  3000               	movlw	0
   853  0011  3DA5               	addwfc	_uiCounterms+1,f
   854  0012  3000               	movlw	0
   855  0013  3DA6               	addwfc	_uiCounterms+2,f
   856  0014  3000               	movlw	0
   857  0015  3DA7               	addwfc	_uiCounterms+3,f
   858  0016                     i1l745:
   859                           
   860                           ;main.c: 37:     if(TMR2IF){
   861  0016  0020               	movlb	0	; select bank0
   862  0017  1C91               	btfss	17,1	;volatile
   863  0018  281A               	goto	u18_21
   864  0019  281B               	goto	u18_20
   865  001A                     u18_21:
   866  001A  2824               	goto	i1l41
   867  001B                     u18_20:
   868  001B                     i1l747:
   869                           
   870                           ;main.c: 38:         TMR2IF = 0;
   871  001B  1091               	bcf	17,1	;volatile
   872  001C                     i1l749:
   873                           
   874                           ;main.c: 39:         uiCountermsTimer2++;
   875  001C  3001               	movlw	1
   876  001D  07A0               	addwf	_uiCountermsTimer2,f
   877  001E  3000               	movlw	0
   878  001F  3DA1               	addwfc	_uiCountermsTimer2+1,f
   879  0020  3000               	movlw	0
   880  0021  3DA2               	addwfc	_uiCountermsTimer2+2,f
   881  0022  3000               	movlw	0
   882  0023  3DA3               	addwfc	_uiCountermsTimer2+3,f
   883  0024                     i1l41:
   884  0024  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   885  0025  0009               	retfie
   886  0026                     __end_of_my_isr_routine:
   887  007E                     btemp	set	126	;btemp
   888  007E                     int$flags	set	126
   889  007E                     wtemp0	set	126
   890                           
   891                           	psect	config
   892                           
   893                           ;Config register CONFIG1 @ 0x8007
   894                           ;	Oscillator Selection
   895                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
   896                           ;	Watchdog Timer Enable
   897                           ;	WDTE = OFF, WDT disabled
   898                           ;	Power-up Timer Enable
   899                           ;	PWRTE = OFF, PWRT disabled
   900                           ;	MCLR Pin Function Select
   901                           ;	MCLRE = OFF, MCLR/VPP pin function is digital input
   902                           ;	Flash Program Memory Code Protection
   903                           ;	CP = OFF, Program memory code protection is disabled
   904                           ;	Data Memory Code Protection
   905                           ;	CPD = OFF, Data memory code protection is disabled
   906                           ;	Brown-out Reset Enable
   907                           ;	BOREN = OFF, Brown-out Reset disabled
   908                           ;	Clock Out Enable
   909                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
   910                           ;	Internal/External Switchover
   911                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   912                           ;	Fail-Safe Clock Monitor Enable
   913                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   914  8007                     	org	32775
   915  8007  09A4               	dw	2468
   916                           
   917                           ;Config register CONFIG2 @ 0x8008
   918                           ;	Flash Memory Self-Write Protection
   919                           ;	WRT = OFF, Write protection off
   920                           ;	PLL Enable
   921                           ;	PLLEN = ON, 4x PLL enabled
   922                           ;	Stack Overflow/Underflow Reset Enable
   923                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
   924                           ;	Brown-out Reset Voltage Selection
   925                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
   926                           ;	Low-Voltage Programming Enable
   927                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
   928  8008                     	org	32776
   929  8008  1FFF               	dw	8191

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         8
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       8
    BANK0            80      8      16
    BANK1            32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_togglePin

Critical Paths under _my_isr_routine in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _my_isr_routine in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _my_isr_routine in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0     266
                                              4 COMMON     4     4      0
                                              0 BANK0      8     8      0
                          _togglePin
 ---------------------------------------------------------------------------------
 (1) _togglePin                                            4     2      2     218
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _my_isr_routine                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _togglePin

 _my_isr_routine (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       8       2       57.1%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      18       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      8      10       6       20.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      18       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Oct 26 16:59:06 2021

                     l65 00D0                      l733 00B3                      l735 00B7  
                    l751 0033                      l737 00C4                      l761 0045  
                    l753 003B                      l771 0077                      l763 0047  
                    l755 003C                      l773 007E                      l765 004C  
                    l757 003D                      l775 0087                      l767 0054  
                    l759 003E                      l777 00A2                      l769 005C  
                    l779 00A8                      _GIE 005F                      u200 00A2  
                    u201 00A1                      u140 00B7                      u141 00B6  
                    u150 00C4                      u151 00C3                      u155 00C0  
                    u164 00C9                      u165 00C8                      u190 0077  
                    _PR2 001B                      u191 0076                      wreg 0009  
                   _PEIE 005E                     i1l41 0024                     _TMR0 0015  
      _uiCountermsTimer2 0020                     _main 0033                     btemp 007E  
                   start 0026                    ?_main 0070                    _T2CON 001C  
                  i1l741 000A                    i1l743 000D                    i1l745 0016  
                  i1l747 001B                    i1l739 0006                    i1l749 001C  
                  u17_20 000A                    u17_21 0009                    u18_20 001B  
                  u18_21 001A                    _PORTA 000C                    _TRISA 008C  
                  status 0003                    wtemp0 007E          __initialization 0027  
           __end_of_main 00B3                   ??_main 0074                   _ANSELA 018C  
          togglePin@iPin 0070                   _OSCCON 0099                   _TMR0IE 005D  
                 _TMR0IF 005A                   _TMR2IE 0489                   _TMR2IF 0089  
__end_of__initialization 0030           __pcstackCOMMON 0070      main@uiContadorTempo 0028  
             __pbssBANK0 0020               __pmaintext 0033               __pintentry 0004  
     __size_of_togglePin 001E  __size_of_my_isr_routine 0022                  __ptext1 00B3  
   end_of_initialization 0030        __end_of_togglePin 00D1     main@uiContadorTempo2 002C  
    start_initialization 0027           _my_isr_routine 0004                ___latbits 0000  
          __pcstackBANK0 0028   __end_of_my_isr_routine 0026          ?_my_isr_routine 0070  
              _togglePin 00B3               ?_togglePin 0070              _uiCounterms 0024  
          __size_of_main 0080                 int$flags 007E                 intlevel1 0000  
            ??_togglePin 0072         ??_my_isr_routine 0070               _OPTION_REG 0095  

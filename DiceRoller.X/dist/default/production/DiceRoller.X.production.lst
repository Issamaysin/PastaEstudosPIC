

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Nov 17 12:19:44 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F687
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.20
    15                           ; Generated 12/02/2020 GMT
    16                           ; 
    17                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F687 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  000A                     	;# 
    57  000B                     	;# 
    58  000C                     	;# 
    59  000D                     	;# 
    60  000E                     	;# 
    61  000E                     	;# 
    62  000F                     	;# 
    63  0010                     	;# 
    64  0013                     	;# 
    65  0014                     	;# 
    66  0018                     	;# 
    67  0019                     	;# 
    68  001A                     	;# 
    69  001E                     	;# 
    70  001F                     	;# 
    71  0081                     	;# 
    72  0085                     	;# 
    73  0086                     	;# 
    74  0087                     	;# 
    75  008C                     	;# 
    76  008D                     	;# 
    77  008E                     	;# 
    78  008F                     	;# 
    79  0090                     	;# 
    80  0093                     	;# 
    81  0093                     	;# 
    82  0093                     	;# 
    83  0094                     	;# 
    84  0095                     	;# 
    85  0095                     	;# 
    86  0096                     	;# 
    87  0096                     	;# 
    88  0097                     	;# 
    89  0098                     	;# 
    90  0099                     	;# 
    91  009A                     	;# 
    92  009B                     	;# 
    93  009E                     	;# 
    94  009F                     	;# 
    95  010C                     	;# 
    96  010C                     	;# 
    97  010D                     	;# 
    98  0115                     	;# 
    99  0116                     	;# 
   100  0118                     	;# 
   101  0119                     	;# 
   102  011A                     	;# 
   103  011B                     	;# 
   104  011E                     	;# 
   105  011F                     	;# 
   106  018C                     	;# 
   107  018D                     	;# 
   108  019E                     	;# 
   109  0000                     	;# 
   110  0001                     	;# 
   111  0002                     	;# 
   112  0003                     	;# 
   113  0004                     	;# 
   114  0005                     	;# 
   115  0006                     	;# 
   116  0007                     	;# 
   117  000A                     	;# 
   118  000B                     	;# 
   119  000C                     	;# 
   120  000D                     	;# 
   121  000E                     	;# 
   122  000E                     	;# 
   123  000F                     	;# 
   124  0010                     	;# 
   125  0013                     	;# 
   126  0014                     	;# 
   127  0018                     	;# 
   128  0019                     	;# 
   129  001A                     	;# 
   130  001E                     	;# 
   131  001F                     	;# 
   132  0081                     	;# 
   133  0085                     	;# 
   134  0086                     	;# 
   135  0087                     	;# 
   136  008C                     	;# 
   137  008D                     	;# 
   138  008E                     	;# 
   139  008F                     	;# 
   140  0090                     	;# 
   141  0093                     	;# 
   142  0093                     	;# 
   143  0093                     	;# 
   144  0094                     	;# 
   145  0095                     	;# 
   146  0095                     	;# 
   147  0096                     	;# 
   148  0096                     	;# 
   149  0097                     	;# 
   150  0098                     	;# 
   151  0099                     	;# 
   152  009A                     	;# 
   153  009B                     	;# 
   154  009E                     	;# 
   155  009F                     	;# 
   156  010C                     	;# 
   157  010C                     	;# 
   158  010D                     	;# 
   159  0115                     	;# 
   160  0116                     	;# 
   161  0118                     	;# 
   162  0119                     	;# 
   163  011A                     	;# 
   164  011B                     	;# 
   165  011E                     	;# 
   166  011F                     	;# 
   167  018C                     	;# 
   168  018D                     	;# 
   169  019E                     	;# 
   170  0000                     	;# 
   171  0001                     	;# 
   172  0002                     	;# 
   173  0003                     	;# 
   174  0004                     	;# 
   175  0005                     	;# 
   176  0006                     	;# 
   177  0007                     	;# 
   178  000A                     	;# 
   179  000B                     	;# 
   180  000C                     	;# 
   181  000D                     	;# 
   182  000E                     	;# 
   183  000E                     	;# 
   184  000F                     	;# 
   185  0010                     	;# 
   186  0013                     	;# 
   187  0014                     	;# 
   188  0018                     	;# 
   189  0019                     	;# 
   190  001A                     	;# 
   191  001E                     	;# 
   192  001F                     	;# 
   193  0081                     	;# 
   194  0085                     	;# 
   195  0086                     	;# 
   196  0087                     	;# 
   197  008C                     	;# 
   198  008D                     	;# 
   199  008E                     	;# 
   200  008F                     	;# 
   201  0090                     	;# 
   202  0093                     	;# 
   203  0093                     	;# 
   204  0093                     	;# 
   205  0094                     	;# 
   206  0095                     	;# 
   207  0095                     	;# 
   208  0096                     	;# 
   209  0096                     	;# 
   210  0097                     	;# 
   211  0098                     	;# 
   212  0099                     	;# 
   213  009A                     	;# 
   214  009B                     	;# 
   215  009E                     	;# 
   216  009F                     	;# 
   217  010C                     	;# 
   218  010C                     	;# 
   219  010D                     	;# 
   220  0115                     	;# 
   221  0116                     	;# 
   222  0118                     	;# 
   223  0119                     	;# 
   224  011A                     	;# 
   225  011B                     	;# 
   226  011E                     	;# 
   227  011F                     	;# 
   228  018C                     	;# 
   229  018D                     	;# 
   230  019E                     	;# 
   231  0005                     _PORTA	set	5
   232  0007                     _PORTC	set	7
   233  0006                     _PORTB	set	6
   234  0001                     _TMR0	set	1
   235  005C                     _INTE	set	92
   236  005D                     _T0IE	set	93
   237  005E                     _PEIE	set	94
   238  005F                     _GIE	set	95
   239  005A                     _T0IF	set	90
   240  0087                     _TRISC	set	135
   241  0086                     _TRISB	set	134
   242  0081                     _OPTION_REG	set	129
   243  008F                     _OSCCON	set	143
   244                           
   245                           	psect	cinit
   246  000B                     start_initialization:	
   247                           ; #config settings
   248                           
   249  000B                     __initialization:
   250                           
   251                           ; Clear objects allocated to BANK0
   252  000B  1283               	bcf	3,5	;RP0=0, select bank0
   253  000C  1303               	bcf	3,6	;RP1=0, select bank0
   254  000D  01AC               	clrf	__pbssBANK0& (0+127)
   255  000E  01AD               	clrf	(__pbssBANK0+1)& (0+127)
   256  000F  01AE               	clrf	(__pbssBANK0+2)& (0+127)
   257  0010  01AF               	clrf	(__pbssBANK0+3)& (0+127)
   258  0011                     end_of_initialization:	
   259                           ;End of C runtime variable initialization code
   260                           
   261  0011                     __end_of__initialization:
   262  0011  0183               	clrf	3
   263  0012  2813               	ljmp	_main	;jump to C main() function
   264                           
   265                           	psect	bssBANK0
   266  002C                     __pbssBANK0:
   267  002C                     _uiCounterms:
   268  002C                     	ds	4
   269                           
   270                           	psect	cstackCOMMON
   271  0070                     __pcstackCOMMON:
   272  0070                     ?_my_isr_routine:
   273  0070                     ??_my_isr_routine:	
   274                           ; 1 bytes @ 0x0
   275                           
   276  0070                     ?_main:	
   277                           ; 1 bytes @ 0x0
   278                           
   279                           
   280                           ; 1 bytes @ 0x0
   281  0070                     	ds	2
   282  0072                     ??_main:
   283                           
   284                           ; 1 bytes @ 0x2
   285  0072                     	ds	4
   286                           
   287                           	psect	cstackBANK0
   288  0020                     __pcstackBANK0:
   289  0020                     main@uiContadorTempo:
   290                           
   291                           ; 4 bytes @ 0x0
   292  0020                     	ds	4
   293  0024                     main@text:
   294                           
   295                           ; 6 bytes @ 0x4
   296  0024                     	ds	6
   297  002A                     main@indice:
   298                           
   299                           ; 2 bytes @ 0xA
   300  002A                     	ds	2
   301                           
   302                           	psect	maintext
   303  0013                     __pmaintext:	
   304 ;;
   305 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   306 ;;
   307 ;; *************** function _main *****************
   308 ;; Defined at:
   309 ;;		line 47 in file "main.c"
   310 ;; Parameters:    Size  Location     Type
   311 ;;		None
   312 ;; Auto vars:     Size  Location     Type
   313 ;;  text            6    4[BANK0 ] unsigned char [6]
   314 ;;  uiContadorTe    4    0[BANK0 ] unsigned long 
   315 ;;  indice          2   10[BANK0 ] int 
   316 ;; Return value:  Size  Location     Type
   317 ;;                  1    wreg      void 
   318 ;; Registers used:
   319 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
   320 ;; Tracked objects:
   321 ;;		On entry : B00/0
   322 ;;		On exit  : 0/0
   323 ;;		Unchanged: 0/0
   324 ;; Data sizes:     COMMON   BANK0   BANK1
   325 ;;      Params:         0       0       0
   326 ;;      Locals:         0      12       0
   327 ;;      Temps:          4       0       0
   328 ;;      Totals:         4      12       0
   329 ;;Total ram usage:       16 bytes
   330 ;; Hardware stack levels required when called: 1
   331 ;; This function calls:
   332 ;;		Nothing
   333 ;; This function is called by:
   334 ;;		Startup code after reset
   335 ;; This function uses a non-reentrant model
   336 ;;
   337                           
   338                           
   339                           ;psect for function _main
   340  0013                     _main:
   341  0013                     l738:	
   342                           ;incstack = 0
   343                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1]
   344                           
   345                           
   346                           ;main.c: 57:     OSCCON |= (1<<0);
   347  0013  1683               	bsf	3,5	;RP0=1, select bank1
   348  0014  1303               	bcf	3,6	;RP1=0, select bank1
   349  0015  140F               	bsf	15,0	;volatile
   350  0016                     l740:
   351                           
   352                           ;main.c: 58:     OSCCON &= ~(1<<1);
   353  0016  30FD               	movlw	253
   354  0017  00F2               	movwf	??_main
   355  0018  0872               	movf	??_main,w
   356  0019  058F               	andwf	15,f	;volatile
   357  001A                     l742:
   358                           
   359                           ;main.c: 59:     OSCCON |= (1<<2);
   360  001A  150F               	bsf	15,2	;volatile
   361                           
   362                           ;main.c: 60:     OSCCON &= ~(1<<3);
   363  001B  30F7               	movlw	247
   364  001C  00F2               	movwf	??_main
   365  001D  0872               	movf	??_main,w
   366  001E  058F               	andwf	15,f	;volatile
   367                           
   368                           ;main.c: 61:     OSCCON |= (0b01110000);
   369  001F  3070               	movlw	112
   370  0020  00F2               	movwf	??_main
   371  0021  0872               	movf	??_main,w
   372  0022  048F               	iorwf	15,f	;volatile
   373  0023                     l744:
   374                           
   375                           ;main.c: 70:     OPTION_REG = 0b00000011;
   376  0023  3003               	movlw	3
   377  0024  0081               	movwf	1	;volatile
   378  0025                     l746:
   379                           
   380                           ;main.c: 71:     TMR0= 133;
   381  0025  3085               	movlw	133
   382  0026  1283               	bcf	3,5	;RP0=0, select bank0
   383  0027  1303               	bcf	3,6	;RP1=0, select bank0
   384  0028  0081               	movwf	1	;volatile
   385  0029                     l748:
   386                           
   387                           ;main.c: 73:     GIE=1;
   388  0029  178B               	bsf	11,7	;volatile
   389  002A                     l750:
   390                           
   391                           ;main.c: 74:     PEIE=1;
   392  002A  170B               	bsf	11,6	;volatile
   393  002B                     l752:
   394                           
   395                           ;main.c: 75:     T0IE=1;
   396  002B  168B               	bsf	11,5	;volatile
   397  002C                     l754:
   398                           
   399                           ;main.c: 76:     INTE = 0;
   400  002C  120B               	bcf	11,4	;volatile
   401  002D                     l756:
   402                           
   403                           ;main.c: 77:     T0IF = 0;
   404  002D  110B               	bcf	11,2	;volatile
   405  002E                     l758:
   406                           
   407                           ;main.c: 81:     TRISB = 0x00;
   408  002E  1683               	bsf	3,5	;RP0=1, select bank1
   409  002F  1303               	bcf	3,6	;RP1=0, select bank1
   410  0030  0186               	clrf	6	;volatile
   411  0031                     l760:
   412                           
   413                           ;main.c: 82:     TRISC = 0x00;
   414  0031  0187               	clrf	7	;volatile
   415  0032                     l762:
   416                           
   417                           ;main.c: 83:     PORTB = 0b11100000;
   418  0032  30E0               	movlw	224
   419  0033  1283               	bcf	3,5	;RP0=0, select bank0
   420  0034  1303               	bcf	3,6	;RP1=0, select bank0
   421  0035  0086               	movwf	6	;volatile
   422  0036                     l764:
   423                           
   424                           ;main.c: 84:     PORTC = 0b11111111;
   425  0036  30FF               	movlw	255
   426  0037  0087               	movwf	7	;volatile
   427  0038                     l766:
   428                           
   429                           ;main.c: 87:     unsigned long uiContadorTempo = 0;
   430  0038  3000               	movlw	0
   431  0039  00A3               	movwf	main@uiContadorTempo+3
   432  003A  3000               	movlw	0
   433  003B  00A2               	movwf	main@uiContadorTempo+2
   434  003C  3000               	movlw	0
   435  003D  00A1               	movwf	main@uiContadorTempo+1
   436  003E  3000               	movlw	0
   437  003F  00A0               	movwf	main@uiContadorTempo
   438  0040                     l768:
   439                           
   440                           ;main.c: 89:     char text[6];;main.c: 90:     text[0] = 0b01110111;
   441  0040  3077               	movlw	119
   442  0041  00F2               	movwf	??_main
   443  0042  0872               	movf	??_main,w
   444  0043  00A4               	movwf	main@text
   445  0044                     l770:
   446                           
   447                           ;main.c: 91:     text[1] = 0b01111100;
   448  0044  307C               	movlw	124
   449  0045  00F2               	movwf	??_main
   450  0046  0872               	movf	??_main,w
   451  0047  00A5               	movwf	main@text+1
   452  0048                     l772:
   453                           
   454                           ;main.c: 92:     text[2] = 0b00111001;
   455  0048  3039               	movlw	57
   456  0049  00F2               	movwf	??_main
   457  004A  0872               	movf	??_main,w
   458  004B  00A6               	movwf	main@text+2
   459  004C                     l774:
   460                           
   461                           ;main.c: 93:     text[3] = 0b01011110;
   462  004C  305E               	movlw	94
   463  004D  00F2               	movwf	??_main
   464  004E  0872               	movf	??_main,w
   465  004F  00A7               	movwf	main@text+3
   466  0050                     l776:
   467                           
   468                           ;main.c: 94:     text[4] = 0b01111001;
   469  0050  3079               	movlw	121
   470  0051  00F2               	movwf	??_main
   471  0052  0872               	movf	??_main,w
   472  0053  00A8               	movwf	main@text+4
   473  0054                     l778:
   474                           
   475                           ;main.c: 95:     text[5] = 0b01110001;
   476  0054  3071               	movlw	113
   477  0055  00F2               	movwf	??_main
   478  0056  0872               	movf	??_main,w
   479  0057  00A9               	movwf	main@text+5
   480  0058                     l780:
   481                           
   482                           ;main.c: 98:     int indice = 0;
   483  0058  01AA               	clrf	main@indice
   484  0059  01AB               	clrf	main@indice+1
   485  005A                     l782:
   486                           
   487                           ;main.c: 99:     PORTC = text[indice];
   488  005A  0824               	movf	main@text,w
   489  005B  0087               	movwf	7	;volatile
   490  005C                     l784:
   491                           
   492                           ;main.c: 100:     indice++;
   493  005C  3001               	movlw	1
   494  005D  07AA               	addwf	main@indice,f
   495  005E  1803               	skipnc
   496  005F  0AAB               	incf	main@indice+1,f
   497  0060  3000               	movlw	0
   498  0061  07AB               	addwf	main@indice+1,f
   499  0062                     l786:
   500                           
   501                           ;main.c: 105:         if((uiCounterms - uiContadorTempo) > 1000 ){
   502  0062  1283               	bcf	3,5	;RP0=0, select bank0
   503  0063  1303               	bcf	3,6	;RP1=0, select bank0
   504  0064  082C               	movf	_uiCounterms,w
   505  0065  00F2               	movwf	??_main
   506  0066  082D               	movf	_uiCounterms+1,w
   507  0067  00F3               	movwf	??_main+1
   508  0068  082E               	movf	_uiCounterms+2,w
   509  0069  00F4               	movwf	??_main+2
   510  006A  082F               	movf	_uiCounterms+3,w
   511  006B  00F5               	movwf	??_main+3
   512  006C  0820               	movf	main@uiContadorTempo,w
   513  006D  02F2               	subwf	??_main,f
   514  006E  0821               	movf	main@uiContadorTempo+1,w
   515  006F  1C03               	skipc
   516  0070  0F21               	incfsz	main@uiContadorTempo+1,w
   517  0071  2873               	goto	u151
   518  0072  2874               	goto	u152
   519  0073                     u151:
   520  0073  02F3               	subwf	??_main+1,f
   521  0074                     u152:
   522  0074  0822               	movf	main@uiContadorTempo+2,w
   523  0075  1C03               	skipc
   524  0076  0F22               	incfsz	main@uiContadorTempo+2,w
   525  0077  2879               	goto	u153
   526  0078  287A               	goto	u154
   527  0079                     u153:
   528  0079  02F4               	subwf	??_main+2,f
   529  007A                     u154:
   530  007A  0823               	movf	main@uiContadorTempo+3,w
   531  007B  1C03               	skipc
   532  007C  0F23               	incfsz	main@uiContadorTempo+3,w
   533  007D  287F               	goto	u155
   534  007E  2880               	goto	u156
   535  007F                     u155:
   536  007F  02F5               	subwf	??_main+3,f
   537  0080                     u156:
   538  0080  0875               	movf	??_main+3,w
   539  0081  1D03               	btfss	3,2
   540  0082  2892               	goto	u160
   541  0083  0874               	movf	??_main+2,w
   542  0084  1D03               	btfss	3,2
   543  0085  2892               	goto	u160
   544  0086  3003               	movlw	3
   545  0087  0273               	subwf	??_main+1,w
   546  0088  1D03               	skipz
   547  0089  288E               	goto	u163
   548  008A  30E9               	movlw	233
   549  008B  0272               	subwf	??_main,w
   550  008C  1D03               	skipz
   551  008D  288E               	goto	u163
   552  008E                     u163:
   553  008E  1C03               	btfss	3,0
   554  008F  2891               	goto	u161
   555  0090  2892               	goto	u160
   556  0091                     u161:
   557  0091  2862               	goto	l786
   558  0092                     u160:
   559  0092                     l788:
   560                           
   561                           ;main.c: 106:             PORTC = text[indice];
   562  0092  1283               	bcf	3,5	;RP0=0, select bank0
   563  0093  1303               	bcf	3,6	;RP1=0, select bank0
   564  0094  082A               	movf	main@indice,w
   565  0095  3E24               	addlw	(low (main@text| 0))& (0+255)
   566  0096  0084               	movwf	4
   567  0097  1383               	bcf	3,7	;select IRP bank0
   568  0098  0800               	movf	0,w
   569  0099  0087               	movwf	7	;volatile
   570  009A                     l790:
   571                           
   572                           ;main.c: 107:             indice++;
   573  009A  3001               	movlw	1
   574  009B  07AA               	addwf	main@indice,f
   575  009C  1803               	skipnc
   576  009D  0AAB               	incf	main@indice+1,f
   577  009E  3000               	movlw	0
   578  009F  07AB               	addwf	main@indice+1,f
   579  00A0                     l792:
   580                           
   581                           ;main.c: 108:             if(indice > 5){
   582  00A0  082B               	movf	main@indice+1,w
   583  00A1  3A80               	xorlw	128
   584  00A2  00FF               	movwf	btemp+1
   585  00A3  3080               	movlw	128
   586  00A4  027F               	subwf	btemp+1,w
   587  00A5  1D03               	skipz
   588  00A6  28A9               	goto	u175
   589  00A7  3006               	movlw	6
   590  00A8  022A               	subwf	main@indice,w
   591  00A9                     u175:
   592  00A9  1C03               	skipc
   593  00AA  28AC               	goto	u171
   594  00AB  28AD               	goto	u170
   595  00AC                     u171:
   596  00AC  28B1               	goto	l796
   597  00AD                     u170:
   598  00AD                     l794:
   599                           
   600                           ;main.c: 109:                 indice = 0;
   601  00AD  1283               	bcf	3,5	;RP0=0, select bank0
   602  00AE  1303               	bcf	3,6	;RP1=0, select bank0
   603  00AF  01AA               	clrf	main@indice
   604  00B0  01AB               	clrf	main@indice+1
   605  00B1                     l796:
   606                           
   607                           ;main.c: 111:             uiContadorTempo = uiCounterms;
   608  00B1  1283               	bcf	3,5	;RP0=0, select bank0
   609  00B2  1303               	bcf	3,6	;RP1=0, select bank0
   610  00B3  082F               	movf	_uiCounterms+3,w
   611  00B4  00A3               	movwf	main@uiContadorTempo+3
   612  00B5  082E               	movf	_uiCounterms+2,w
   613  00B6  00A2               	movwf	main@uiContadorTempo+2
   614  00B7  082D               	movf	_uiCounterms+1,w
   615  00B8  00A1               	movwf	main@uiContadorTempo+1
   616  00B9  082C               	movf	_uiCounterms,w
   617  00BA  00A0               	movwf	main@uiContadorTempo
   618  00BB  2862               	goto	l786
   619  00BC  280A               	ljmp	start
   620  00BD                     __end_of_main:
   621                           
   622                           	psect	text1
   623  00BD                     __ptext1:	
   624 ;; *************** function _my_isr_routine *****************
   625 ;; Defined at:
   626 ;;		line 30 in file "main.c"
   627 ;; Parameters:    Size  Location     Type
   628 ;;		None
   629 ;; Auto vars:     Size  Location     Type
   630 ;;		None
   631 ;; Return value:  Size  Location     Type
   632 ;;                  1    wreg      void 
   633 ;; Registers used:
   634 ;;		wreg
   635 ;; Tracked objects:
   636 ;;		On entry : 0/0
   637 ;;		On exit  : 0/0
   638 ;;		Unchanged: 0/0
   639 ;; Data sizes:     COMMON   BANK0   BANK1
   640 ;;      Params:         0       0       0
   641 ;;      Locals:         0       0       0
   642 ;;      Temps:          2       0       0
   643 ;;      Totals:         2       0       0
   644 ;;Total ram usage:        2 bytes
   645 ;; Hardware stack levels used: 1
   646 ;; This function calls:
   647 ;;		Nothing
   648 ;; This function is called by:
   649 ;;		Interrupt level 1
   650 ;; This function uses a non-reentrant model
   651 ;;
   652                           
   653                           
   654                           ;psect for function _my_isr_routine
   655  00BD                     _my_isr_routine:
   656  00BD                     i1l732:
   657                           
   658                           ;main.c: 33:     if(T0IF)
   659  00BD  1D0B               	btfss	11,2	;volatile
   660  00BE  28C0               	goto	u14_21
   661  00BF  28C1               	goto	u14_20
   662  00C0                     u14_21:
   663  00C0  28D4               	goto	i1l32
   664  00C1                     u14_20:
   665  00C1                     i1l734:
   666                           
   667                           ;main.c: 34:     {;main.c: 35:         T0IF = 0;
   668  00C1  110B               	bcf	11,2	;volatile
   669  00C2                     i1l736:
   670                           
   671                           ;main.c: 36:         TMR0 = 133;
   672  00C2  3085               	movlw	133
   673  00C3  1283               	bcf	3,5	;RP0=0, select bank0
   674  00C4  1303               	bcf	3,6	;RP1=0, select bank0
   675  00C5  0081               	movwf	1	;volatile
   676                           
   677                           ;main.c: 38:         uiCounterms++;
   678  00C6  3001               	movlw	1
   679  00C7  07AC               	addwf	_uiCounterms,f
   680  00C8  3000               	movlw	0
   681  00C9  1803               	skipnc
   682  00CA  3001               	movlw	1
   683  00CB  07AD               	addwf	_uiCounterms+1,f
   684  00CC  3000               	movlw	0
   685  00CD  1803               	skipnc
   686  00CE  3001               	movlw	1
   687  00CF  07AE               	addwf	_uiCounterms+2,f
   688  00D0  3000               	movlw	0
   689  00D1  1803               	skipnc
   690  00D2  3001               	movlw	1
   691  00D3  07AF               	addwf	_uiCounterms+3,f
   692  00D4                     i1l32:
   693  00D4  0871               	movf	??_my_isr_routine+1,w
   694  00D5  008A               	movwf	10
   695  00D6  0E70               	swapf	??_my_isr_routine,w
   696  00D7  0083               	movwf	3
   697  00D8  0EFE               	swapf	btemp,f
   698  00D9  0E7E               	swapf	btemp,w
   699  00DA  0009               	retfie
   700  00DB                     __end_of_my_isr_routine:
   701  007E                     btemp	set	126	;btemp
   702  007E                     wtemp0	set	126
   703                           
   704                           	psect	intentry
   705  0004                     __pintentry:	
   706                           ;incstack = 0
   707                           ; Regs used in _my_isr_routine: [wreg]
   708                           
   709  0004                     interrupt_function:
   710  007E                     saved_w	set	btemp
   711  0004  00FE               	movwf	btemp
   712  0005  0E03               	swapf	3,w
   713  0006  00F0               	movwf	??_my_isr_routine
   714  0007  080A               	movf	10,w
   715  0008  00F1               	movwf	??_my_isr_routine+1
   716  0009  28BD               	ljmp	_my_isr_routine
   717                           
   718                           	psect	config
   719                           
   720                           ;Config register CONFIG @ 0x2007
   721                           ;	Oscillator Selection bits
   722                           ;	FOSC = INTRCIO, INTOSCIO oscillator: I/O function on RA4/OSC2/CLKOUT pin, I/O function
      +                           on RA5/OSC1/CLKIN
   723                           ;	Watchdog Timer Enable bit
   724                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   725                           ;	Power-up Timer Enable bit
   726                           ;	PWRTE = OFF, PWRT disabled
   727                           ;	MCLR Pin Function Select bit
   728                           ;	MCLRE = OFF, MCLR pin function is digital input, MCLR internally tied to VDD
   729                           ;	Code Protection bit
   730                           ;	CP = OFF, Program memory code protection is disabled
   731                           ;	Data Code Protection bit
   732                           ;	CPD = OFF, Data memory code protection is disabled
   733                           ;	Brown-out Reset Selection bits
   734                           ;	BOREN = OFF, BOR disabled
   735                           ;	Internal External Switchover bit
   736                           ;	IESO = OFF, Internal External Switchover mode is disabled
   737                           ;	Fail-Safe Clock Monitor Enabled bit
   738                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   739  2007                     	org	8199
   740  2007  30D4               	dw	12500

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       6
    BANK0            80     12      16
    BANK1            32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _my_isr_routine in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _my_isr_routine in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _my_isr_routine in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                16    16      0     261
                                              2 COMMON     4     4      0
                                              0 BANK0     12    12      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _my_isr_routine                                       2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _my_isr_routine (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       6       1       42.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            50      0       0       3        0.0%
BANK0               50      C      10       4       20.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BITBANK1            20      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BANK1               20      0       0       6        0.0%
ABS                  0      0      16       7        0.0%
DATA                 0      0      16       8        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Nov 17 12:19:44 2021

                    l740 0016                      l750 002A                      l742 001A  
                    l760 0031                      l752 002B                      l744 0023  
                    l770 0044                      l762 0032                      l754 002C  
                    l746 0025                      l738 0013                      l780 0058  
                    l772 0048                      l764 0036                      l756 002D  
                    l748 0029                      l790 009A                      l782 005A  
                    l774 004C                      l766 0038                      l758 002E  
                    l792 00A0                      l784 005C                      l776 0050  
                    l768 0040                      l794 00AD                      l786 0062  
                    l778 0054                      l796 00B1                      l788 0092  
                    _GIE 005F                      u151 0073                      u160 0092  
                    u152 0074                      u161 0091                      u153 0079  
                    u170 00AD                      u154 007A                      u171 00AC  
                    u163 008E                      u155 007F                      u156 0080  
                    u175 00A9                      fsr0 0004                      indf 0000  
                   _T0IE 005D                     _T0IF 005A                     _PEIE 005E  
                   _INTE 005C                     i1l32 00D4                     _TMR0 0001  
                   _main 0013                     btemp 007E                     start 000A  
                  ?_main 0070                    i1l732 00BD                    i1l734 00C1  
                  i1l736 00C2                    u14_20 00C1                    u14_21 00C0  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _TRISB 0086                    _TRISC 0087                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000B  
           __end_of_main 00BD                   ??_main 0072                   _OSCCON 008F  
                 saved_w 007E  __end_of__initialization 0011           __pcstackCOMMON 0070  
    main@uiContadorTempo 0020               __pbssBANK0 002C               __pmaintext 0013  
             __pintentry 0004  __size_of_my_isr_routine 001E                  __ptext1 00BD  
   end_of_initialization 0011               main@indice 002A      start_initialization 000B  
         _my_isr_routine 00BD                ___latbits 0000            __pcstackBANK0 0020  
 __end_of_my_isr_routine 00DB          ?_my_isr_routine 0070        interrupt_function 0004  
            _uiCounterms 002C            __size_of_main 00AA                 main@text 0024  
               intlevel1 0000         ??_my_isr_routine 0070               _OPTION_REG 0081  

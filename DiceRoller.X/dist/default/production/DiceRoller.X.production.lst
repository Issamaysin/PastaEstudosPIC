

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Nov 19 14:59:03 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F687
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	intentry,global,class=CODE,delta=2
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    27                           	dabs	1,0x7E,2
    28  0000                     
    29                           ; Version 2.20
    30                           ; Generated 12/02/2020 GMT
    31                           ; 
    32                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC16F687 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63  0000                     	;# 
    64  0001                     	;# 
    65  0002                     	;# 
    66  0003                     	;# 
    67  0004                     	;# 
    68  0005                     	;# 
    69  0006                     	;# 
    70  0007                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  000C                     	;# 
    74  000D                     	;# 
    75  000E                     	;# 
    76  000E                     	;# 
    77  000F                     	;# 
    78  0010                     	;# 
    79  0013                     	;# 
    80  0014                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  008F                     	;# 
    94  0090                     	;# 
    95  0093                     	;# 
    96  0093                     	;# 
    97  0093                     	;# 
    98  0094                     	;# 
    99  0095                     	;# 
   100  0095                     	;# 
   101  0096                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009E                     	;# 
   109  009F                     	;# 
   110  010C                     	;# 
   111  010C                     	;# 
   112  010D                     	;# 
   113  0115                     	;# 
   114  0116                     	;# 
   115  0118                     	;# 
   116  0119                     	;# 
   117  011A                     	;# 
   118  011B                     	;# 
   119  011E                     	;# 
   120  011F                     	;# 
   121  018C                     	;# 
   122  018D                     	;# 
   123  019E                     	;# 
   124  0000                     	;# 
   125  0001                     	;# 
   126  0002                     	;# 
   127  0003                     	;# 
   128  0004                     	;# 
   129  0005                     	;# 
   130  0006                     	;# 
   131  0007                     	;# 
   132  000A                     	;# 
   133  000B                     	;# 
   134  000C                     	;# 
   135  000D                     	;# 
   136  000E                     	;# 
   137  000E                     	;# 
   138  000F                     	;# 
   139  0010                     	;# 
   140  0013                     	;# 
   141  0014                     	;# 
   142  0018                     	;# 
   143  0019                     	;# 
   144  001A                     	;# 
   145  001E                     	;# 
   146  001F                     	;# 
   147  0081                     	;# 
   148  0085                     	;# 
   149  0086                     	;# 
   150  0087                     	;# 
   151  008C                     	;# 
   152  008D                     	;# 
   153  008E                     	;# 
   154  008F                     	;# 
   155  0090                     	;# 
   156  0093                     	;# 
   157  0093                     	;# 
   158  0093                     	;# 
   159  0094                     	;# 
   160  0095                     	;# 
   161  0095                     	;# 
   162  0096                     	;# 
   163  0096                     	;# 
   164  0097                     	;# 
   165  0098                     	;# 
   166  0099                     	;# 
   167  009A                     	;# 
   168  009B                     	;# 
   169  009E                     	;# 
   170  009F                     	;# 
   171  010C                     	;# 
   172  010C                     	;# 
   173  010D                     	;# 
   174  0115                     	;# 
   175  0116                     	;# 
   176  0118                     	;# 
   177  0119                     	;# 
   178  011A                     	;# 
   179  011B                     	;# 
   180  011E                     	;# 
   181  011F                     	;# 
   182  018C                     	;# 
   183  018D                     	;# 
   184  019E                     	;# 
   185  0000                     	;# 
   186  0001                     	;# 
   187  0002                     	;# 
   188  0003                     	;# 
   189  0004                     	;# 
   190  0005                     	;# 
   191  0006                     	;# 
   192  0007                     	;# 
   193  000A                     	;# 
   194  000B                     	;# 
   195  000C                     	;# 
   196  000D                     	;# 
   197  000E                     	;# 
   198  000E                     	;# 
   199  000F                     	;# 
   200  0010                     	;# 
   201  0013                     	;# 
   202  0014                     	;# 
   203  0018                     	;# 
   204  0019                     	;# 
   205  001A                     	;# 
   206  001E                     	;# 
   207  001F                     	;# 
   208  0081                     	;# 
   209  0085                     	;# 
   210  0086                     	;# 
   211  0087                     	;# 
   212  008C                     	;# 
   213  008D                     	;# 
   214  008E                     	;# 
   215  008F                     	;# 
   216  0090                     	;# 
   217  0093                     	;# 
   218  0093                     	;# 
   219  0093                     	;# 
   220  0094                     	;# 
   221  0095                     	;# 
   222  0095                     	;# 
   223  0096                     	;# 
   224  0096                     	;# 
   225  0097                     	;# 
   226  0098                     	;# 
   227  0099                     	;# 
   228  009A                     	;# 
   229  009B                     	;# 
   230  009E                     	;# 
   231  009F                     	;# 
   232  010C                     	;# 
   233  010C                     	;# 
   234  010D                     	;# 
   235  0115                     	;# 
   236  0116                     	;# 
   237  0118                     	;# 
   238  0119                     	;# 
   239  011A                     	;# 
   240  011B                     	;# 
   241  011E                     	;# 
   242  011F                     	;# 
   243  018C                     	;# 
   244  018D                     	;# 
   245  019E                     	;# 
   246                           
   247                           	psect	idataCOMMON
   248  04D9                     __pidataCOMMON:
   249                           
   250                           ;initializer for _deviceCurrentState
   251  04D9  3401               	retlw	1
   252                           
   253                           	psect	idataBANK0
   254  04D4                     __pidataBANK0:
   255                           
   256                           ;initializer for _readButtonStatus
   257  04D4  3401               	retlw	1
   258  04D5  3401               	retlw	1
   259  04D6  3401               	retlw	1
   260  04D7  3401               	retlw	1
   261  04D8  3401               	retlw	1
   262  0007                     _PORTC	set	7
   263  0005                     _PORTA	set	5
   264  0006                     _PORTB	set	6
   265  0001                     _TMR0	set	1
   266  005B                     _RABIE	set	91
   267  005D                     _T0IE	set	93
   268  005E                     _PEIE	set	94
   269  005F                     _GIE	set	95
   270  0058                     _RABIF	set	88
   271  005A                     _T0IF	set	90
   272  0096                     _IOCA	set	150
   273  0087                     _TRISC	set	135
   274  0086                     _TRISB	set	134
   275  0085                     _TRISA	set	133
   276  008F                     _OSCCON	set	143
   277  04AC                     _WPUA4	set	1196
   278  040A                     _PS2	set	1034
   279  0409                     _PS1	set	1033
   280  0408                     _PS0	set	1032
   281  040B                     _PSA	set	1035
   282  040D                     _T0CS	set	1037
   283  040F                     _nRABPU	set	1039
   284  0116                     _IOCB	set	278
   285  011F                     _ANSELH	set	287
   286  011E                     _ANSEL	set	286
   287  08AF                     _WPUB7	set	2223
   288  08AE                     _WPUB6	set	2222
   289  08AD                     _WPUB5	set	2221
   290  08AC                     _WPUB4	set	2220
   291                           
   292                           	psect	cinit
   293  000B                     start_initialization:	
   294                           ; #config settings
   295                           
   296  000B                     __initialization:
   297                           
   298                           ; Initialize objects allocated to BANK0
   299  000B  24D4               	fcall	__pidataBANK0	;fetch initializer
   300  000C  00CD               	movwf	__pdataBANK0& (0+127)
   301  000D  24D5               	fcall	__pidataBANK0+1	;fetch initializer
   302  000E  00CE               	movwf	(__pdataBANK0+1)& (0+127)
   303  000F  24D6               	fcall	__pidataBANK0+2	;fetch initializer
   304  0010  00CF               	movwf	(__pdataBANK0+2)& (0+127)
   305  0011  24D7               	fcall	__pidataBANK0+3	;fetch initializer
   306  0012  00D0               	movwf	(__pdataBANK0+3)& (0+127)
   307  0013  24D8               	fcall	__pidataBANK0+4	;fetch initializer
   308  0014  00D1               	movwf	(__pdataBANK0+4)& (0+127)
   309                           
   310                           ; Initialize objects allocated to COMMON
   311  0015  24D9               	fcall	__pidataCOMMON	;fetch initializer
   312  0016  00FA               	movwf	__pdataCOMMON& (0+127)
   313                           
   314                           ; Clear objects allocated to BANK0
   315  0017  1383               	bcf	3,7	;select IRP bank0
   316  0018  3020               	movlw	low __pbssBANK0
   317  0019  0084               	movwf	4
   318  001A  3041               	movlw	low (__pbssBANK0+33)
   319  001B  24CC               	fcall	clear_ram0
   320                           
   321                           ; Clear objects allocated to COMMON
   322  001C  3076               	movlw	low __pbssCOMMON
   323  001D  0084               	movwf	4
   324  001E  307A               	movlw	low (__pbssCOMMON+4)
   325  001F  24CC               	fcall	clear_ram0
   326  0020                     end_of_initialization:	
   327                           ;End of C runtime variable initialization code
   328                           
   329  0020                     __end_of__initialization:
   330  0020  0183               	clrf	3
   331  0021  2918               	ljmp	_main	;jump to C main() function
   332                           
   333                           	psect	bssCOMMON
   334  0076                     __pbssCOMMON:
   335  0076                     _uiButtonDebounce:
   336  0076                     	ds	4
   337                           
   338                           	psect	dataCOMMON
   339  007A                     __pdataCOMMON:
   340  007A                     _deviceCurrentState:
   341  007A                     	ds	1
   342                           
   343                           	psect	bssBANK0
   344  0020                     __pbssBANK0:
   345  0020                     _Botoes:
   346  0020                     	ds	15
   347  002F                     _Display7seg4digitsVetor:
   348  002F                     	ds	12
   349  003B                     _uiCounterms:
   350  003B                     	ds	4
   351  003F                     _indiceDisplay:
   352  003F                     	ds	2
   353                           
   354                           	psect	dataBANK0
   355  004D                     __pdataBANK0:
   356  004D                     _readButtonStatus:
   357  004D                     	ds	5
   358                           
   359                           	psect	clrtext
   360  04CC                     clear_ram0:	
   361                           ;	Called with FSR containing the base address, and
   362                           ;	W with the last address+1
   363                           
   364  04CC  0064               	clrwdt	;clear the watchdog before getting into this loop
   365  04CD                     clrloop0:
   366  04CD  0180               	clrf	0	;clear RAM location pointed to by FSR
   367  04CE  0A84               	incf	4,f	;increment pointer
   368  04CF  0604               	xorwf	4,w	;XOR with final address
   369  04D0  1903               	btfsc	3,2	;have we reached the end yet?
   370  04D1  3400               	retlw	0	;all done for this memory range, return
   371  04D2  0604               	xorwf	4,w	;XOR again to restore value
   372  04D3  2CCD               	goto	clrloop0	;do the next byte
   373                           
   374                           	psect	cstackCOMMON
   375  0070                     __pcstackCOMMON:
   376  0070                     ?_configBoard:
   377  0070                     ?_initDisplay:	
   378                           ; 1 bytes @ 0x0
   379                           
   380  0070                     ?_initButtons:	
   381                           ; 1 bytes @ 0x0
   382                           
   383  0070                     ?_shiftDisplays:	
   384                           ; 1 bytes @ 0x0
   385                           
   386  0070                     ?_my_isr_routine:	
   387                           ; 1 bytes @ 0x0
   388                           
   389  0070                     ??_my_isr_routine:	
   390                           ; 1 bytes @ 0x0
   391                           
   392  0070                     ?_main:	
   393                           ; 1 bytes @ 0x0
   394                           
   395                           
   396                           ; 1 bytes @ 0x0
   397  0070                     	ds	6
   398                           
   399                           	psect	cstackBANK0
   400  0041                     __pcstackBANK0:
   401  0041                     ??_configBoard:
   402  0041                     ??_initDisplay:	
   403                           ; 1 bytes @ 0x0
   404                           
   405  0041                     ??_initButtons:	
   406                           ; 1 bytes @ 0x0
   407                           
   408  0041                     ?___bmul:	
   409                           ; 1 bytes @ 0x0
   410                           
   411  0041                     ?___llmod:	
   412                           ; 1 bytes @ 0x0
   413                           
   414  0041                     ___bmul@multiplicand:	
   415                           ; 4 bytes @ 0x0
   416                           
   417  0041                     ___llmod@divisor:	
   418                           ; 1 bytes @ 0x0
   419                           
   420                           
   421                           ; 4 bytes @ 0x0
   422  0041                     	ds	1
   423  0042                     ??___bmul:
   424                           
   425                           ; 1 bytes @ 0x1
   426  0042                     	ds	1
   427  0043                     ___bmul@product:
   428                           
   429                           ; 1 bytes @ 0x2
   430  0043                     	ds	1
   431  0044                     ___bmul@multiplier:
   432                           
   433                           ; 1 bytes @ 0x3
   434  0044                     	ds	1
   435  0045                     ?_writeCharOnDisplay:
   436  0045                     ?_setPin:	
   437                           ; 1 bytes @ 0x4
   438                           
   439  0045                     ?_clearPin:	
   440                           ; 1 bytes @ 0x4
   441                           
   442  0045                     setPin@ucPort:	
   443                           ; 1 bytes @ 0x4
   444                           
   445  0045                     clearPin@ucPort:	
   446                           ; 1 bytes @ 0x4
   447                           
   448  0045                     writeCharOnDisplay@ucDisplay:	
   449                           ; 1 bytes @ 0x4
   450                           
   451  0045                     ___llmod@dividend:	
   452                           ; 1 bytes @ 0x4
   453                           
   454                           
   455                           ; 4 bytes @ 0x4
   456  0045                     	ds	1
   457  0046                     ??_writeCharOnDisplay:
   458  0046                     ??_setPin:	
   459                           ; 1 bytes @ 0x5
   460                           
   461  0046                     ??_clearPin:	
   462                           ; 1 bytes @ 0x5
   463                           
   464                           
   465                           ; 1 bytes @ 0x5
   466  0046                     	ds	2
   467  0048                     setPin@ucPin:
   468  0048                     clearPin@ucPin:	
   469                           ; 1 bytes @ 0x7
   470                           
   471  0048                     writeCharOnDisplay@ucCharacter:	
   472                           ; 1 bytes @ 0x7
   473                           
   474                           
   475                           ; 1 bytes @ 0x7
   476  0048                     	ds	1
   477  0049                     ??_shiftDisplays:
   478  0049                     ??___llmod:	
   479                           ; 1 bytes @ 0x8
   480                           
   481                           
   482                           ; 1 bytes @ 0x8
   483  0049                     	ds	1
   484  004A                     ___llmod@counter:
   485                           
   486                           ; 1 bytes @ 0x9
   487  004A                     	ds	2
   488  004C                     ??_main:
   489                           
   490                           ; 1 bytes @ 0xB
   491  004C                     	ds	1
   492                           
   493                           	psect	maintext
   494  0118                     __pmaintext:	
   495 ;;
   496 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   497 ;;
   498 ;; *************** function _main *****************
   499 ;; Defined at:
   500 ;;		line 70 in file "main.c"
   501 ;; Parameters:    Size  Location     Type
   502 ;;		None
   503 ;; Auto vars:     Size  Location     Type
   504 ;;		None
   505 ;; Return value:  Size  Location     Type
   506 ;;                  1    wreg      void 
   507 ;; Registers used:
   508 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   509 ;; Tracked objects:
   510 ;;		On entry : B00/0
   511 ;;		On exit  : 0/0
   512 ;;		Unchanged: 0/0
   513 ;; Data sizes:     COMMON   BANK0   BANK1
   514 ;;      Params:         0       0       0
   515 ;;      Locals:         0       0       0
   516 ;;      Temps:          0       1       0
   517 ;;      Totals:         0       1       0
   518 ;;Total ram usage:        1 bytes
   519 ;; Hardware stack levels required when called: 3
   520 ;; This function calls:
   521 ;;		___llmod
   522 ;;		_configBoard
   523 ;;		_initButtons
   524 ;;		_initDisplay
   525 ;;		_shiftDisplays
   526 ;;		_writeCharOnDisplay
   527 ;; This function is called by:
   528 ;;		Startup code after reset
   529 ;; This function uses a non-reentrant model
   530 ;;
   531                           
   532                           
   533                           ;psect for function _main
   534  0118                     _main:
   535  0118                     l1826:	
   536                           ;incstack = 0
   537                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   538                           
   539                           
   540                           ;main.c: 73:     configBoard();
   541  0118  2423               	fcall	_configBoard
   542                           
   543                           ;main.c: 76:     initDisplay();
   544  0119  24B6               	fcall	_initDisplay
   545                           
   546                           ;main.c: 77:     initButtons();
   547  011A  2475               	fcall	_initButtons
   548  011B                     l1828:
   549                           
   550                           ;main.c: 80:     writeCharOnDisplay('0', 0);
   551  011B  1283               	bcf	3,5	;RP0=0, select bank0
   552  011C  1303               	bcf	3,6	;RP1=0, select bank0
   553  011D  01C5               	clrf	writeCharOnDisplay@ucDisplay
   554  011E  3030               	movlw	48
   555  011F  2022               	fcall	_writeCharOnDisplay
   556  0120                     l1830:
   557                           
   558                           ;main.c: 81:     writeCharOnDisplay('1', 1);
   559  0120  1283               	bcf	3,5	;RP0=0, select bank0
   560  0121  1303               	bcf	3,6	;RP1=0, select bank0
   561  0122  01C5               	clrf	writeCharOnDisplay@ucDisplay
   562  0123  0AC5               	incf	writeCharOnDisplay@ucDisplay,f
   563  0124  3031               	movlw	49
   564  0125  2022               	fcall	_writeCharOnDisplay
   565  0126                     l1832:
   566                           
   567                           ;main.c: 82:     writeCharOnDisplay('2', 2);
   568  0126  3002               	movlw	2
   569  0127  1283               	bcf	3,5	;RP0=0, select bank0
   570  0128  1303               	bcf	3,6	;RP1=0, select bank0
   571  0129  00CC               	movwf	??_main
   572  012A  084C               	movf	??_main,w
   573  012B  00C5               	movwf	writeCharOnDisplay@ucDisplay
   574  012C  3032               	movlw	50
   575  012D  2022               	fcall	_writeCharOnDisplay
   576  012E                     l1834:
   577                           
   578                           ;main.c: 83:     writeCharOnDisplay('3', 3);
   579  012E  3003               	movlw	3
   580  012F  1283               	bcf	3,5	;RP0=0, select bank0
   581  0130  1303               	bcf	3,6	;RP1=0, select bank0
   582  0131  00CC               	movwf	??_main
   583  0132  084C               	movf	??_main,w
   584  0133  00C5               	movwf	writeCharOnDisplay@ucDisplay
   585  0134  3033               	movlw	51
   586  0135  2022               	fcall	_writeCharOnDisplay
   587  0136                     l47:	
   588                           ;main.c: 87:     while(1){
   589                           
   590                           
   591                           ;main.c: 91:         if(0 == (uiCounterms%5)){
   592  0136  3000               	movlw	0
   593  0137  1283               	bcf	3,5	;RP0=0, select bank0
   594  0138  1303               	bcf	3,6	;RP1=0, select bank0
   595  0139  00C4               	movwf	___llmod@divisor+3
   596  013A  3000               	movlw	0
   597  013B  00C3               	movwf	___llmod@divisor+2
   598  013C  3000               	movlw	0
   599  013D  00C2               	movwf	___llmod@divisor+1
   600  013E  3005               	movlw	5
   601  013F  00C1               	movwf	___llmod@divisor
   602  0140  083E               	movf	_uiCounterms+3,w
   603  0141  00C8               	movwf	___llmod@dividend+3
   604  0142  083D               	movf	_uiCounterms+2,w
   605  0143  00C7               	movwf	___llmod@dividend+2
   606  0144  083C               	movf	_uiCounterms+1,w
   607  0145  00C6               	movwf	___llmod@dividend+1
   608  0146  083B               	movf	_uiCounterms,w
   609  0147  00C5               	movwf	___llmod@dividend
   610  0148  23CD               	fcall	___llmod
   611  0149  1283               	bcf	3,5	;RP0=0, select bank0
   612  014A  1303               	bcf	3,6	;RP1=0, select bank0
   613  014B  0844               	movf	?___llmod+3,w
   614  014C  0443               	iorwf	?___llmod+2,w
   615  014D  0442               	iorwf	?___llmod+1,w
   616  014E  0441               	iorwf	?___llmod,w
   617  014F  1D03               	skipz
   618  0150  2952               	goto	u1291
   619  0151  2953               	goto	u1290
   620  0152                     u1291:
   621  0152  2954               	goto	l1838
   622  0153                     u1290:
   623  0153                     l1836:
   624                           
   625                           ;main.c: 92:             shiftDisplays();
   626  0153  22A8               	fcall	_shiftDisplays
   627  0154                     l1838:
   628                           
   629                           ;main.c: 103:         if((readButtonStatus[0] != Botoes[0].status) && readButtonStatus[0
      +                          ] == 0){
   630  0154  1283               	bcf	3,5	;RP0=0, select bank0
   631  0155  1303               	bcf	3,6	;RP1=0, select bank0
   632  0156  0822               	movf	_Botoes+2,w
   633  0157  064D               	xorwf	_readButtonStatus,w
   634  0158  1903               	skipnz
   635  0159  295B               	goto	u1301
   636  015A  295C               	goto	u1300
   637  015B                     u1301:
   638  015B  296E               	goto	l1846
   639  015C                     u1300:
   640  015C                     l1840:
   641  015C  084D               	movf	_readButtonStatus,w
   642  015D  1D03               	btfss	3,2
   643  015E  2960               	goto	u1311
   644  015F  2961               	goto	u1310
   645  0160                     u1311:
   646  0160  296E               	goto	l1846
   647  0161                     u1310:
   648  0161                     l1842:
   649                           
   650                           ;main.c: 104:             writeCharOnDisplay('d', 2);
   651  0161  3002               	movlw	2
   652  0162  00CC               	movwf	??_main
   653  0163  084C               	movf	??_main,w
   654  0164  00C5               	movwf	writeCharOnDisplay@ucDisplay
   655  0165  3064               	movlw	100
   656  0166  2022               	fcall	_writeCharOnDisplay
   657  0167                     l1844:
   658                           
   659                           ;main.c: 105:             Botoes[0].status = readButtonStatus[0];
   660  0167  1283               	bcf	3,5	;RP0=0, select bank0
   661  0168  1303               	bcf	3,6	;RP1=0, select bank0
   662  0169  084D               	movf	_readButtonStatus,w
   663  016A  00CC               	movwf	??_main
   664  016B  084C               	movf	??_main,w
   665  016C  00A2               	movwf	_Botoes+2
   666                           
   667                           ;main.c: 106:         }else if((readButtonStatus[0] != Botoes[0].status) && readButtonSt
      +                          atus[0] == 1){
   668  016D  297A               	goto	l50
   669  016E                     l1846:
   670  016E  0822               	movf	_Botoes+2,w
   671  016F  064D               	xorwf	_readButtonStatus,w
   672  0170  1903               	skipnz
   673  0171  2973               	goto	u1321
   674  0172  2974               	goto	u1320
   675  0173                     u1321:
   676  0173  297A               	goto	l50
   677  0174                     u1320:
   678  0174                     l1848:
   679  0174  034D               	decf	_readButtonStatus,w
   680  0175  1D03               	btfss	3,2
   681  0176  2978               	goto	u1331
   682  0177  2979               	goto	u1330
   683  0178                     u1331:
   684  0178  297A               	goto	l50
   685  0179                     u1330:
   686  0179  2967               	goto	l1844
   687  017A                     l50:
   688                           
   689                           ;main.c: 110:         if((readButtonStatus[1] != Botoes[1].status) && readButtonStatus[1
      +                          ] == 0){
   690  017A  0825               	movf	_Botoes+5,w
   691  017B  064E               	xorwf	_readButtonStatus+1,w
   692  017C  1903               	skipnz
   693  017D  297F               	goto	u1341
   694  017E  2980               	goto	u1340
   695  017F                     u1341:
   696  017F  2992               	goto	l1858
   697  0180                     u1340:
   698  0180                     l1852:
   699  0180  084E               	movf	_readButtonStatus+1,w
   700  0181  1D03               	btfss	3,2
   701  0182  2984               	goto	u1351
   702  0183  2985               	goto	u1350
   703  0184                     u1351:
   704  0184  2992               	goto	l1858
   705  0185                     u1350:
   706  0185                     l1854:
   707                           
   708                           ;main.c: 111:             writeCharOnDisplay('9', 2);
   709  0185  3002               	movlw	2
   710  0186  00CC               	movwf	??_main
   711  0187  084C               	movf	??_main,w
   712  0188  00C5               	movwf	writeCharOnDisplay@ucDisplay
   713  0189  3039               	movlw	57
   714  018A  2022               	fcall	_writeCharOnDisplay
   715  018B                     l1856:
   716                           
   717                           ;main.c: 112:             Botoes[1].status = readButtonStatus[1];
   718  018B  1283               	bcf	3,5	;RP0=0, select bank0
   719  018C  1303               	bcf	3,6	;RP1=0, select bank0
   720  018D  084E               	movf	_readButtonStatus+1,w
   721  018E  00CC               	movwf	??_main
   722  018F  084C               	movf	??_main,w
   723  0190  00A5               	movwf	_Botoes+5
   724                           
   725                           ;main.c: 113:         }else if((readButtonStatus[1] != Botoes[1].status) && readButtonSt
      +                          atus[1] == 1){
   726  0191  299E               	goto	l53
   727  0192                     l1858:
   728  0192  0825               	movf	_Botoes+5,w
   729  0193  064E               	xorwf	_readButtonStatus+1,w
   730  0194  1903               	skipnz
   731  0195  2997               	goto	u1361
   732  0196  2998               	goto	u1360
   733  0197                     u1361:
   734  0197  299E               	goto	l53
   735  0198                     u1360:
   736  0198                     l1860:
   737  0198  034E               	decf	_readButtonStatus+1,w
   738  0199  1D03               	btfss	3,2
   739  019A  299C               	goto	u1371
   740  019B  299D               	goto	u1370
   741  019C                     u1371:
   742  019C  299E               	goto	l53
   743  019D                     u1370:
   744  019D  298B               	goto	l1856
   745  019E                     l53:
   746                           
   747                           ;main.c: 117:         if((readButtonStatus[2] != Botoes[2].status) && readButtonStatus[2
      +                          ] == 0){
   748  019E  0828               	movf	_Botoes+8,w
   749  019F  064F               	xorwf	_readButtonStatus+2,w
   750  01A0  1903               	skipnz
   751  01A1  29A3               	goto	u1381
   752  01A2  29A4               	goto	u1380
   753  01A3                     u1381:
   754  01A3  29B6               	goto	l1870
   755  01A4                     u1380:
   756  01A4                     l1864:
   757  01A4  084F               	movf	_readButtonStatus+2,w
   758  01A5  1D03               	btfss	3,2
   759  01A6  29A8               	goto	u1391
   760  01A7  29A9               	goto	u1390
   761  01A8                     u1391:
   762  01A8  29B6               	goto	l1870
   763  01A9                     u1390:
   764  01A9                     l1866:
   765                           
   766                           ;main.c: 118:             writeCharOnDisplay('0', 2);
   767  01A9  3002               	movlw	2
   768  01AA  00CC               	movwf	??_main
   769  01AB  084C               	movf	??_main,w
   770  01AC  00C5               	movwf	writeCharOnDisplay@ucDisplay
   771  01AD  3030               	movlw	48
   772  01AE  2022               	fcall	_writeCharOnDisplay
   773  01AF                     l1868:
   774                           
   775                           ;main.c: 119:             Botoes[2].status = readButtonStatus[2];
   776  01AF  1283               	bcf	3,5	;RP0=0, select bank0
   777  01B0  1303               	bcf	3,6	;RP1=0, select bank0
   778  01B1  084F               	movf	_readButtonStatus+2,w
   779  01B2  00CC               	movwf	??_main
   780  01B3  084C               	movf	??_main,w
   781  01B4  00A8               	movwf	_Botoes+8
   782                           
   783                           ;main.c: 120:         }else if((readButtonStatus[2] != Botoes[2].status) && readButtonSt
      +                          atus[2] == 1){
   784  01B5  29C2               	goto	l56
   785  01B6                     l1870:
   786  01B6  0828               	movf	_Botoes+8,w
   787  01B7  064F               	xorwf	_readButtonStatus+2,w
   788  01B8  1903               	skipnz
   789  01B9  29BB               	goto	u1401
   790  01BA  29BC               	goto	u1400
   791  01BB                     u1401:
   792  01BB  29C2               	goto	l56
   793  01BC                     u1400:
   794  01BC                     l1872:
   795  01BC  034F               	decf	_readButtonStatus+2,w
   796  01BD  1D03               	btfss	3,2
   797  01BE  29C0               	goto	u1411
   798  01BF  29C1               	goto	u1410
   799  01C0                     u1411:
   800  01C0  29C2               	goto	l56
   801  01C1                     u1410:
   802  01C1  29AF               	goto	l1868
   803  01C2                     l56:
   804                           
   805                           ;main.c: 125:         if((readButtonStatus[3] != Botoes[3].status) && readButtonStatus[3
      +                          ] == 0){
   806  01C2  082B               	movf	_Botoes+11,w
   807  01C3  0650               	xorwf	_readButtonStatus+3,w
   808  01C4  1903               	skipnz
   809  01C5  29C7               	goto	u1421
   810  01C6  29C8               	goto	u1420
   811  01C7                     u1421:
   812  01C7  29DA               	goto	l1882
   813  01C8                     u1420:
   814  01C8                     l1876:
   815  01C8  0850               	movf	_readButtonStatus+3,w
   816  01C9  1D03               	btfss	3,2
   817  01CA  29CC               	goto	u1431
   818  01CB  29CD               	goto	u1430
   819  01CC                     u1431:
   820  01CC  29DA               	goto	l1882
   821  01CD                     u1430:
   822  01CD                     l1878:
   823                           
   824                           ;main.c: 126:             writeCharOnDisplay('6', 2);
   825  01CD  3002               	movlw	2
   826  01CE  00CC               	movwf	??_main
   827  01CF  084C               	movf	??_main,w
   828  01D0  00C5               	movwf	writeCharOnDisplay@ucDisplay
   829  01D1  3036               	movlw	54
   830  01D2  2022               	fcall	_writeCharOnDisplay
   831  01D3                     l1880:
   832                           
   833                           ;main.c: 127:             Botoes[3].status = readButtonStatus[3];
   834  01D3  1283               	bcf	3,5	;RP0=0, select bank0
   835  01D4  1303               	bcf	3,6	;RP1=0, select bank0
   836  01D5  0850               	movf	_readButtonStatus+3,w
   837  01D6  00CC               	movwf	??_main
   838  01D7  084C               	movf	??_main,w
   839  01D8  00AB               	movwf	_Botoes+11
   840                           
   841                           ;main.c: 128:         }else if((readButtonStatus[0] != Botoes[3].status) && readButtonSt
      +                          atus[3] == 1){
   842  01D9  29E6               	goto	l59
   843  01DA                     l1882:
   844  01DA  082B               	movf	_Botoes+11,w
   845  01DB  064D               	xorwf	_readButtonStatus,w
   846  01DC  1903               	skipnz
   847  01DD  29DF               	goto	u1441
   848  01DE  29E0               	goto	u1440
   849  01DF                     u1441:
   850  01DF  29E6               	goto	l59
   851  01E0                     u1440:
   852  01E0                     l1884:
   853  01E0  0350               	decf	_readButtonStatus+3,w
   854  01E1  1D03               	btfss	3,2
   855  01E2  29E4               	goto	u1451
   856  01E3  29E5               	goto	u1450
   857  01E4                     u1451:
   858  01E4  29E6               	goto	l59
   859  01E5                     u1450:
   860  01E5  29D3               	goto	l1880
   861  01E6                     l59:
   862                           
   863                           ;main.c: 132:         if((readButtonStatus[4] != Botoes[4].status) && readButtonStatus[4
      +                          ] == 0){
   864  01E6  082E               	movf	_Botoes+14,w
   865  01E7  0651               	xorwf	_readButtonStatus+4,w
   866  01E8  1903               	skipnz
   867  01E9  29EB               	goto	u1461
   868  01EA  29EC               	goto	u1460
   869  01EB                     u1461:
   870  01EB  29FE               	goto	l1894
   871  01EC                     u1460:
   872  01EC                     l1888:
   873  01EC  0851               	movf	_readButtonStatus+4,w
   874  01ED  1D03               	btfss	3,2
   875  01EE  29F0               	goto	u1471
   876  01EF  29F1               	goto	u1470
   877  01F0                     u1471:
   878  01F0  29FE               	goto	l1894
   879  01F1                     u1470:
   880  01F1                     l1890:
   881                           
   882                           ;main.c: 133:             writeCharOnDisplay('8', 2);
   883  01F1  3002               	movlw	2
   884  01F2  00CC               	movwf	??_main
   885  01F3  084C               	movf	??_main,w
   886  01F4  00C5               	movwf	writeCharOnDisplay@ucDisplay
   887  01F5  3038               	movlw	56
   888  01F6  2022               	fcall	_writeCharOnDisplay
   889  01F7                     l1892:
   890                           
   891                           ;main.c: 134:             Botoes[4].status = readButtonStatus[4];
   892  01F7  1283               	bcf	3,5	;RP0=0, select bank0
   893  01F8  1303               	bcf	3,6	;RP1=0, select bank0
   894  01F9  0851               	movf	_readButtonStatus+4,w
   895  01FA  00CC               	movwf	??_main
   896  01FB  084C               	movf	??_main,w
   897  01FC  00AE               	movwf	_Botoes+14
   898                           
   899                           ;main.c: 135:         }else if((readButtonStatus[4] != Botoes[4].status) && readButtonSt
      +                          atus[4] == 1){
   900  01FD  2936               	goto	l47
   901  01FE                     l1894:
   902  01FE  082E               	movf	_Botoes+14,w
   903  01FF  0651               	xorwf	_readButtonStatus+4,w
   904  0200  1903               	skipnz
   905  0201  2A03               	goto	u1481
   906  0202  2A04               	goto	u1480
   907  0203                     u1481:
   908  0203  2936               	goto	l47
   909  0204                     u1480:
   910  0204                     l1896:
   911  0204  0351               	decf	_readButtonStatus+4,w
   912  0205  1D03               	btfss	3,2
   913  0206  2A08               	goto	u1491
   914  0207  2A09               	goto	u1490
   915  0208                     u1491:
   916  0208  2936               	goto	l47
   917  0209                     u1490:
   918  0209  29F7               	goto	l1892
   919  020A  280A               	ljmp	start
   920  020B                     __end_of_main:
   921                           
   922                           	psect	text1
   923  0022                     __ptext1:	
   924 ;; *************** function _writeCharOnDisplay *****************
   925 ;; Defined at:
   926 ;;		line 197 in file "utils.c"
   927 ;; Parameters:    Size  Location     Type
   928 ;;  ucCharacter     1    wreg     unsigned char 
   929 ;;  ucDisplay       1    4[BANK0 ] unsigned char 
   930 ;; Auto vars:     Size  Location     Type
   931 ;;  ucCharacter     1    7[BANK0 ] unsigned char 
   932 ;; Return value:  Size  Location     Type
   933 ;;                  1    wreg      void 
   934 ;; Registers used:
   935 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   936 ;; Tracked objects:
   937 ;;		On entry : 0/0
   938 ;;		On exit  : 0/0
   939 ;;		Unchanged: 0/0
   940 ;; Data sizes:     COMMON   BANK0   BANK1
   941 ;;      Params:         0       1       0
   942 ;;      Locals:         0       1       0
   943 ;;      Temps:          0       2       0
   944 ;;      Totals:         0       4       0
   945 ;;Total ram usage:        4 bytes
   946 ;; Hardware stack levels used: 1
   947 ;; Hardware stack levels required when called: 2
   948 ;; This function calls:
   949 ;;		___bmul
   950 ;; This function is called by:
   951 ;;		_main
   952 ;; This function uses a non-reentrant model
   953 ;;
   954                           
   955                           
   956                           ;psect for function _writeCharOnDisplay
   957  0022                     _writeCharOnDisplay:
   958                           
   959                           ;incstack = 0
   960                           ; Regs used in _writeCharOnDisplay: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   961                           ;writeCharOnDisplay@ucCharacter stored from wreg
   962  0022  1283               	bcf	3,5	;RP0=0, select bank0
   963  0023  1303               	bcf	3,6	;RP1=0, select bank0
   964  0024  00C8               	movwf	writeCharOnDisplay@ucCharacter
   965  0025                     l1752:
   966                           
   967                           ;utils.c: 199:     if(ucDisplay < 0 || ucDisplay > 3){
   968  0025  3004               	movlw	4
   969  0026  0245               	subwf	writeCharOnDisplay@ucDisplay,w
   970  0027  1C03               	skipc
   971  0028  282A               	goto	u1201
   972  0029  282B               	goto	u1200
   973  002A                     u1201:
   974  002A  28EC               	goto	l1782
   975  002B                     u1200:
   976  002B  2917               	goto	l193
   977  002C                     l1756:
   978                           
   979                           ;utils.c: 209:             Display7seg4digitsVetor[ucDisplay].data = 0b00111111;
   980  002C  303F               	movlw	63
   981  002D  00C6               	movwf	??_writeCharOnDisplay
   982  002E  3003               	movlw	3
   983  002F  00C7               	movwf	??_writeCharOnDisplay+1
   984  0030  0847               	movf	??_writeCharOnDisplay+1,w
   985  0031  00C1               	movwf	___bmul@multiplicand
   986  0032  0845               	movf	writeCharOnDisplay@ucDisplay,w
   987  0033  249F               	fcall	___bmul
   988  0034  3E31               	addlw	(low ((_Display7seg4digitsVetor| 0+2)))& (0+255)
   989  0035  0084               	movwf	4
   990  0036  1283               	bcf	3,5	;RP0=0, select bank0
   991  0037  1303               	bcf	3,6	;RP1=0, select bank0
   992  0038  0846               	movf	??_writeCharOnDisplay,w
   993  0039  1383               	bcf	3,7	;select IRP bank0
   994  003A  0080               	movwf	0
   995                           
   996                           ;utils.c: 210:             break;
   997  003B  2917               	goto	l193
   998  003C                     l1758:
   999                           
  1000                           ;utils.c: 212:             Display7seg4digitsVetor[ucDisplay].data = 0b00000110;
  1001  003C  3006               	movlw	6
  1002  003D  00C6               	movwf	??_writeCharOnDisplay
  1003  003E  3003               	movlw	3
  1004  003F  00C7               	movwf	??_writeCharOnDisplay+1
  1005  0040  0847               	movf	??_writeCharOnDisplay+1,w
  1006  0041  00C1               	movwf	___bmul@multiplicand
  1007  0042  0845               	movf	writeCharOnDisplay@ucDisplay,w
  1008  0043  249F               	fcall	___bmul
  1009  0044  3E31               	addlw	(low ((_Display7seg4digitsVetor| 0+2)))& (0+255)
  1010  0045  0084               	movwf	4
  1011  0046  1283               	bcf	3,5	;RP0=0, select bank0
  1012  0047  1303               	bcf	3,6	;RP1=0, select bank0
  1013  0048  0846               	movf	??_writeCharOnDisplay,w
  1014  0049  1383               	bcf	3,7	;select IRP bank0
  1015  004A  0080               	movwf	0
  1016                           
  1017                           ;utils.c: 213:             break;
  1018  004B  2917               	goto	l193
  1019  004C                     l1760:
  1020                           
  1021                           ;utils.c: 215:             Display7seg4digitsVetor[ucDisplay].data = 0b01011011;
  1022  004C  305B               	movlw	91
  1023  004D  00C6               	movwf	??_writeCharOnDisplay
  1024  004E  3003               	movlw	3
  1025  004F  00C7               	movwf	??_writeCharOnDisplay+1
  1026  0050  0847               	movf	??_writeCharOnDisplay+1,w
  1027  0051  00C1               	movwf	___bmul@multiplicand
  1028  0052  0845               	movf	writeCharOnDisplay@ucDisplay,w
  1029  0053  249F               	fcall	___bmul
  1030  0054  3E31               	addlw	(low ((_Display7seg4digitsVetor| 0+2)))& (0+255)
  1031  0055  0084               	movwf	4
  1032  0056  1283               	bcf	3,5	;RP0=0, select bank0
  1033  0057  1303               	bcf	3,6	;RP1=0, select bank0
  1034  0058  0846               	movf	??_writeCharOnDisplay,w
  1035  0059  1383               	bcf	3,7	;select IRP bank0
  1036  005A  0080               	movwf	0
  1037                           
  1038                           ;utils.c: 216:             break;
  1039  005B  2917               	goto	l193
  1040  005C                     l1762:
  1041                           
  1042                           ;utils.c: 218:             Display7seg4digitsVetor[ucDisplay].data = 0b01001111;
  1043  005C  304F               	movlw	79
  1044  005D  00C6               	movwf	??_writeCharOnDisplay
  1045  005E  3003               	movlw	3
  1046  005F  00C7               	movwf	??_writeCharOnDisplay+1
  1047  0060  0847               	movf	??_writeCharOnDisplay+1,w
  1048  0061  00C1               	movwf	___bmul@multiplicand
  1049  0062  0845               	movf	writeCharOnDisplay@ucDisplay,w
  1050  0063  249F               	fcall	___bmul
  1051  0064  3E31               	addlw	(low ((_Display7seg4digitsVetor| 0+2)))& (0+255)
  1052  0065  0084               	movwf	4
  1053  0066  1283               	bcf	3,5	;RP0=0, select bank0
  1054  0067  1303               	bcf	3,6	;RP1=0, select bank0
  1055  0068  0846               	movf	??_writeCharOnDisplay,w
  1056  0069  1383               	bcf	3,7	;select IRP bank0
  1057  006A  0080               	movwf	0
  1058                           
  1059                           ;utils.c: 219:             break;
  1060  006B  2917               	goto	l193
  1061  006C                     l1764:
  1062                           
  1063                           ;utils.c: 221:             Display7seg4digitsVetor[ucDisplay].data = 0b01100110;
  1064  006C  3066               	movlw	102
  1065  006D  00C6               	movwf	??_writeCharOnDisplay
  1066  006E  3003               	movlw	3
  1067  006F  00C7               	movwf	??_writeCharOnDisplay+1
  1068  0070  0847               	movf	??_writeCharOnDisplay+1,w
  1069  0071  00C1               	movwf	___bmul@multiplicand
  1070  0072  0845               	movf	writeCharOnDisplay@ucDisplay,w
  1071  0073  249F               	fcall	___bmul
  1072  0074  3E31               	addlw	(low ((_Display7seg4digitsVetor| 0+2)))& (0+255)
  1073  0075  0084               	movwf	4
  1074  0076  1283               	bcf	3,5	;RP0=0, select bank0
  1075  0077  1303               	bcf	3,6	;RP1=0, select bank0
  1076  0078  0846               	movf	??_writeCharOnDisplay,w
  1077  0079  1383               	bcf	3,7	;select IRP bank0
  1078  007A  0080               	movwf	0
  1079                           
  1080                           ;utils.c: 222:             break;
  1081  007B  2917               	goto	l193
  1082  007C                     l1766:
  1083                           
  1084                           ;utils.c: 224:             Display7seg4digitsVetor[ucDisplay].data = 0b01101101;
  1085  007C  306D               	movlw	109
  1086  007D  00C6               	movwf	??_writeCharOnDisplay
  1087  007E  3003               	movlw	3
  1088  007F  00C7               	movwf	??_writeCharOnDisplay+1
  1089  0080  0847               	movf	??_writeCharOnDisplay+1,w
  1090  0081  00C1               	movwf	___bmul@multiplicand
  1091  0082  0845               	movf	writeCharOnDisplay@ucDisplay,w
  1092  0083  249F               	fcall	___bmul
  1093  0084  3E31               	addlw	(low ((_Display7seg4digitsVetor| 0+2)))& (0+255)
  1094  0085  0084               	movwf	4
  1095  0086  1283               	bcf	3,5	;RP0=0, select bank0
  1096  0087  1303               	bcf	3,6	;RP1=0, select bank0
  1097  0088  0846               	movf	??_writeCharOnDisplay,w
  1098  0089  1383               	bcf	3,7	;select IRP bank0
  1099  008A  0080               	movwf	0
  1100                           
  1101                           ;utils.c: 225:             break;
  1102  008B  2917               	goto	l193
  1103  008C                     l1768:
  1104                           
  1105                           ;utils.c: 227:             Display7seg4digitsVetor[ucDisplay].data = 0b01111101;
  1106  008C  307D               	movlw	125
  1107  008D  00C6               	movwf	??_writeCharOnDisplay
  1108  008E  3003               	movlw	3
  1109  008F  00C7               	movwf	??_writeCharOnDisplay+1
  1110  0090  0847               	movf	??_writeCharOnDisplay+1,w
  1111  0091  00C1               	movwf	___bmul@multiplicand
  1112  0092  0845               	movf	writeCharOnDisplay@ucDisplay,w
  1113  0093  249F               	fcall	___bmul
  1114  0094  3E31               	addlw	(low ((_Display7seg4digitsVetor| 0+2)))& (0+255)
  1115  0095  0084               	movwf	4
  1116  0096  1283               	bcf	3,5	;RP0=0, select bank0
  1117  0097  1303               	bcf	3,6	;RP1=0, select bank0
  1118  0098  0846               	movf	??_writeCharOnDisplay,w
  1119  0099  1383               	bcf	3,7	;select IRP bank0
  1120  009A  0080               	movwf	0
  1121                           
  1122                           ;utils.c: 228:             break;
  1123  009B  2917               	goto	l193
  1124  009C                     l1770:
  1125                           
  1126                           ;utils.c: 230:             Display7seg4digitsVetor[ucDisplay].data = 0b00000111;
  1127  009C  3007               	movlw	7
  1128  009D  00C6               	movwf	??_writeCharOnDisplay
  1129  009E  3003               	movlw	3
  1130  009F  00C7               	movwf	??_writeCharOnDisplay+1
  1131  00A0  0847               	movf	??_writeCharOnDisplay+1,w
  1132  00A1  00C1               	movwf	___bmul@multiplicand
  1133  00A2  0845               	movf	writeCharOnDisplay@ucDisplay,w
  1134  00A3  249F               	fcall	___bmul
  1135  00A4  3E31               	addlw	(low ((_Display7seg4digitsVetor| 0+2)))& (0+255)
  1136  00A5  0084               	movwf	4
  1137  00A6  1283               	bcf	3,5	;RP0=0, select bank0
  1138  00A7  1303               	bcf	3,6	;RP1=0, select bank0
  1139  00A8  0846               	movf	??_writeCharOnDisplay,w
  1140  00A9  1383               	bcf	3,7	;select IRP bank0
  1141  00AA  0080               	movwf	0
  1142                           
  1143                           ;utils.c: 231:             break;
  1144  00AB  2917               	goto	l193
  1145  00AC                     l1772:
  1146                           
  1147                           ;utils.c: 233:             Display7seg4digitsVetor[ucDisplay].data = 0b01111111;
  1148  00AC  307F               	movlw	127
  1149  00AD  00C6               	movwf	??_writeCharOnDisplay
  1150  00AE  3003               	movlw	3
  1151  00AF  00C7               	movwf	??_writeCharOnDisplay+1
  1152  00B0  0847               	movf	??_writeCharOnDisplay+1,w
  1153  00B1  00C1               	movwf	___bmul@multiplicand
  1154  00B2  0845               	movf	writeCharOnDisplay@ucDisplay,w
  1155  00B3  249F               	fcall	___bmul
  1156  00B4  3E31               	addlw	(low ((_Display7seg4digitsVetor| 0+2)))& (0+255)
  1157  00B5  0084               	movwf	4
  1158  00B6  1283               	bcf	3,5	;RP0=0, select bank0
  1159  00B7  1303               	bcf	3,6	;RP1=0, select bank0
  1160  00B8  0846               	movf	??_writeCharOnDisplay,w
  1161  00B9  1383               	bcf	3,7	;select IRP bank0
  1162  00BA  0080               	movwf	0
  1163                           
  1164                           ;utils.c: 234:             break;
  1165  00BB  2917               	goto	l193
  1166  00BC                     l1774:
  1167                           
  1168                           ;utils.c: 236:             Display7seg4digitsVetor[ucDisplay].data = 0b01100111;
  1169  00BC  3067               	movlw	103
  1170  00BD  00C6               	movwf	??_writeCharOnDisplay
  1171  00BE  3003               	movlw	3
  1172  00BF  00C7               	movwf	??_writeCharOnDisplay+1
  1173  00C0  0847               	movf	??_writeCharOnDisplay+1,w
  1174  00C1  00C1               	movwf	___bmul@multiplicand
  1175  00C2  0845               	movf	writeCharOnDisplay@ucDisplay,w
  1176  00C3  249F               	fcall	___bmul
  1177  00C4  3E31               	addlw	(low ((_Display7seg4digitsVetor| 0+2)))& (0+255)
  1178  00C5  0084               	movwf	4
  1179  00C6  1283               	bcf	3,5	;RP0=0, select bank0
  1180  00C7  1303               	bcf	3,6	;RP1=0, select bank0
  1181  00C8  0846               	movf	??_writeCharOnDisplay,w
  1182  00C9  1383               	bcf	3,7	;select IRP bank0
  1183  00CA  0080               	movwf	0
  1184                           
  1185                           ;utils.c: 237:             break;
  1186  00CB  2917               	goto	l193
  1187  00CC                     l1776:
  1188                           
  1189                           ;utils.c: 239:             Display7seg4digitsVetor[ucDisplay].data = 0b01011110;
  1190  00CC  305E               	movlw	94
  1191  00CD  00C6               	movwf	??_writeCharOnDisplay
  1192  00CE  3003               	movlw	3
  1193  00CF  00C7               	movwf	??_writeCharOnDisplay+1
  1194  00D0  0847               	movf	??_writeCharOnDisplay+1,w
  1195  00D1  00C1               	movwf	___bmul@multiplicand
  1196  00D2  0845               	movf	writeCharOnDisplay@ucDisplay,w
  1197  00D3  249F               	fcall	___bmul
  1198  00D4  3E31               	addlw	(low ((_Display7seg4digitsVetor| 0+2)))& (0+255)
  1199  00D5  0084               	movwf	4
  1200  00D6  1283               	bcf	3,5	;RP0=0, select bank0
  1201  00D7  1303               	bcf	3,6	;RP1=0, select bank0
  1202  00D8  0846               	movf	??_writeCharOnDisplay,w
  1203  00D9  1383               	bcf	3,7	;select IRP bank0
  1204  00DA  0080               	movwf	0
  1205                           
  1206                           ;utils.c: 240:             break;
  1207  00DB  2917               	goto	l193
  1208  00DC                     l1778:
  1209                           
  1210                           ;utils.c: 242:             Display7seg4digitsVetor[ucDisplay].data = 0b01110111;
  1211  00DC  3077               	movlw	119
  1212  00DD  00C6               	movwf	??_writeCharOnDisplay
  1213  00DE  3003               	movlw	3
  1214  00DF  00C7               	movwf	??_writeCharOnDisplay+1
  1215  00E0  0847               	movf	??_writeCharOnDisplay+1,w
  1216  00E1  00C1               	movwf	___bmul@multiplicand
  1217  00E2  0845               	movf	writeCharOnDisplay@ucDisplay,w
  1218  00E3  249F               	fcall	___bmul
  1219  00E4  3E31               	addlw	(low ((_Display7seg4digitsVetor| 0+2)))& (0+255)
  1220  00E5  0084               	movwf	4
  1221  00E6  1283               	bcf	3,5	;RP0=0, select bank0
  1222  00E7  1303               	bcf	3,6	;RP1=0, select bank0
  1223  00E8  0846               	movf	??_writeCharOnDisplay,w
  1224  00E9  1383               	bcf	3,7	;select IRP bank0
  1225  00EA  0080               	movwf	0
  1226                           
  1227                           ;utils.c: 243:             break;
  1228  00EB  2917               	goto	l193
  1229  00EC                     l1782:
  1230  00EC  0848               	movf	writeCharOnDisplay@ucCharacter,w
  1231  00ED  00C6               	movwf	??_writeCharOnDisplay
  1232  00EE  01C7               	clrf	??_writeCharOnDisplay+1
  1233                           
  1234                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1235                           ; Switch size 1, requested type "simple"
  1236                           ; Number of cases is 1, Range of values is 0 to 0
  1237                           ; switch strategies available:
  1238                           ; Name         Instructions Cycles
  1239                           ; simple_byte            4     3 (average)
  1240                           ; direct_byte            7     6 (fixed)
  1241                           ; jumptable            260     6 (fixed)
  1242                           ;	Chosen strategy is simple_byte
  1243  00EF  0847               	movf	??_writeCharOnDisplay+1,w
  1244  00F0  3A00               	xorlw	0	; case 0
  1245  00F1  1903               	skipnz
  1246  00F2  28F4               	goto	l1980
  1247  00F3  28DC               	goto	l1778
  1248  00F4                     l1980:
  1249                           
  1250                           ; Switch size 1, requested type "simple"
  1251                           ; Number of cases is 11, Range of values is 48 to 100
  1252                           ; switch strategies available:
  1253                           ; Name         Instructions Cycles
  1254                           ; simple_byte           34    18 (average)
  1255                           ; direct_byte           62     9 (fixed)
  1256                           ; jumptable            263     9 (fixed)
  1257                           ;	Chosen strategy is simple_byte
  1258  00F4  0846               	movf	??_writeCharOnDisplay,w
  1259  00F5  3A30               	xorlw	48	; case 48
  1260  00F6  1903               	skipnz
  1261  00F7  282C               	goto	l1756
  1262  00F8  3A01               	xorlw	1	; case 49
  1263  00F9  1903               	skipnz
  1264  00FA  283C               	goto	l1758
  1265  00FB  3A03               	xorlw	3	; case 50
  1266  00FC  1903               	skipnz
  1267  00FD  284C               	goto	l1760
  1268  00FE  3A01               	xorlw	1	; case 51
  1269  00FF  1903               	skipnz
  1270  0100  285C               	goto	l1762
  1271  0101  3A07               	xorlw	7	; case 52
  1272  0102  1903               	skipnz
  1273  0103  286C               	goto	l1764
  1274  0104  3A01               	xorlw	1	; case 53
  1275  0105  1903               	skipnz
  1276  0106  287C               	goto	l1766
  1277  0107  3A03               	xorlw	3	; case 54
  1278  0108  1903               	skipnz
  1279  0109  288C               	goto	l1768
  1280  010A  3A01               	xorlw	1	; case 55
  1281  010B  1903               	skipnz
  1282  010C  289C               	goto	l1770
  1283  010D  3A0F               	xorlw	15	; case 56
  1284  010E  1903               	skipnz
  1285  010F  28AC               	goto	l1772
  1286  0110  3A01               	xorlw	1	; case 57
  1287  0111  1903               	skipnz
  1288  0112  28BC               	goto	l1774
  1289  0113  3A5D               	xorlw	93	; case 100
  1290  0114  1903               	skipnz
  1291  0115  28CC               	goto	l1776
  1292  0116  28DC               	goto	l1778
  1293  0117                     l193:
  1294  0117  0008               	return
  1295  0118                     __end_of_writeCharOnDisplay:
  1296                           
  1297                           	psect	text2
  1298  02A8                     __ptext2:	
  1299 ;; *************** function _shiftDisplays *****************
  1300 ;; Defined at:
  1301 ;;		line 161 in file "utils.c"
  1302 ;; Parameters:    Size  Location     Type
  1303 ;;		None
  1304 ;; Auto vars:     Size  Location     Type
  1305 ;;		None
  1306 ;; Return value:  Size  Location     Type
  1307 ;;                  1    wreg      void 
  1308 ;; Registers used:
  1309 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1310 ;; Tracked objects:
  1311 ;;		On entry : 0/0
  1312 ;;		On exit  : 0/0
  1313 ;;		Unchanged: 0/0
  1314 ;; Data sizes:     COMMON   BANK0   BANK1
  1315 ;;      Params:         0       0       0
  1316 ;;      Locals:         0       0       0
  1317 ;;      Temps:          0       3       0
  1318 ;;      Totals:         0       3       0
  1319 ;;Total ram usage:        3 bytes
  1320 ;; Hardware stack levels used: 1
  1321 ;; Hardware stack levels required when called: 2
  1322 ;; This function calls:
  1323 ;;		___bmul
  1324 ;;		_clearPin
  1325 ;;		_setPin
  1326 ;; This function is called by:
  1327 ;;		_main
  1328 ;; This function uses a non-reentrant model
  1329 ;;
  1330                           
  1331                           
  1332                           ;psect for function _shiftDisplays
  1333  02A8                     _shiftDisplays:
  1334  02A8                     l1788:	
  1335                           ;incstack = 0
  1336                           ; Regs used in _shiftDisplays: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1337                           
  1338                           
  1339                           ;utils.c: 164:     setPin(Display7seg4digitsVetor[indiceDisplay].pin, Display7seg4digits
      +                          Vetor[indiceDisplay].port);
  1340  02A8  3003               	movlw	3
  1341  02A9  1283               	bcf	3,5	;RP0=0, select bank0
  1342  02AA  1303               	bcf	3,6	;RP1=0, select bank0
  1343  02AB  00C9               	movwf	??_shiftDisplays
  1344  02AC  0849               	movf	??_shiftDisplays,w
  1345  02AD  00C1               	movwf	___bmul@multiplicand
  1346  02AE  083F               	movf	_indiceDisplay,w
  1347  02AF  249F               	fcall	___bmul
  1348  02B0  3E30               	addlw	(low ((_Display7seg4digitsVetor| 0+1)))& (0+255)
  1349  02B1  0084               	movwf	4
  1350  02B2  1383               	bcf	3,7	;select IRP bank0
  1351  02B3  0800               	movf	0,w
  1352  02B4  1283               	bcf	3,5	;RP0=0, select bank0
  1353  02B5  1303               	bcf	3,6	;RP1=0, select bank0
  1354  02B6  00CA               	movwf	??_shiftDisplays+1
  1355  02B7  084A               	movf	??_shiftDisplays+1,w
  1356  02B8  00C5               	movwf	setPin@ucPort
  1357  02B9  3003               	movlw	3
  1358  02BA  00CB               	movwf	??_shiftDisplays+2
  1359  02BB  084B               	movf	??_shiftDisplays+2,w
  1360  02BC  00C1               	movwf	___bmul@multiplicand
  1361  02BD  083F               	movf	_indiceDisplay,w
  1362  02BE  249F               	fcall	___bmul
  1363  02BF  3E2F               	addlw	(low (_Display7seg4digitsVetor| 0))& (0+255)
  1364  02C0  0084               	movwf	4
  1365  02C1  1383               	bcf	3,7	;select IRP bank0
  1366  02C2  0800               	movf	0,w
  1367  02C3  2373               	fcall	_setPin
  1368  02C4                     l1790:
  1369                           
  1370                           ;utils.c: 166:     indiceDisplay++;
  1371  02C4  3001               	movlw	1
  1372  02C5  1283               	bcf	3,5	;RP0=0, select bank0
  1373  02C6  1303               	bcf	3,6	;RP1=0, select bank0
  1374  02C7  07BF               	addwf	_indiceDisplay,f
  1375  02C8  1803               	skipnc
  1376  02C9  0AC0               	incf	_indiceDisplay+1,f
  1377  02CA  3000               	movlw	0
  1378  02CB  07C0               	addwf	_indiceDisplay+1,f
  1379  02CC                     l1792:
  1380                           
  1381                           ;utils.c: 169:     if(indiceDisplay > 3){
  1382  02CC  0840               	movf	_indiceDisplay+1,w
  1383  02CD  3A80               	xorlw	128
  1384  02CE  00FF               	movwf	btemp+1
  1385  02CF  3080               	movlw	128
  1386  02D0  027F               	subwf	btemp+1,w
  1387  02D1  1D03               	skipz
  1388  02D2  2AD5               	goto	u1215
  1389  02D3  3004               	movlw	4
  1390  02D4  023F               	subwf	_indiceDisplay,w
  1391  02D5                     u1215:
  1392  02D5  1C03               	skipc
  1393  02D6  2AD8               	goto	u1211
  1394  02D7  2AD9               	goto	u1210
  1395  02D8                     u1211:
  1396  02D8  2ADD               	goto	l1796
  1397  02D9                     u1210:
  1398  02D9                     l1794:
  1399                           
  1400                           ;utils.c: 170:         indiceDisplay = 0;
  1401  02D9  1283               	bcf	3,5	;RP0=0, select bank0
  1402  02DA  1303               	bcf	3,6	;RP1=0, select bank0
  1403  02DB  01BF               	clrf	_indiceDisplay
  1404  02DC  01C0               	clrf	_indiceDisplay+1
  1405  02DD                     l1796:
  1406                           
  1407                           ;utils.c: 174:     PORTC = (Display7seg4digitsVetor[indiceDisplay].data);
  1408  02DD  3003               	movlw	3
  1409  02DE  1283               	bcf	3,5	;RP0=0, select bank0
  1410  02DF  1303               	bcf	3,6	;RP1=0, select bank0
  1411  02E0  00C9               	movwf	??_shiftDisplays
  1412  02E1  0849               	movf	??_shiftDisplays,w
  1413  02E2  00C1               	movwf	___bmul@multiplicand
  1414  02E3  083F               	movf	_indiceDisplay,w
  1415  02E4  249F               	fcall	___bmul
  1416  02E5  3E31               	addlw	(low ((_Display7seg4digitsVetor| 0+2)))& (0+255)
  1417  02E6  0084               	movwf	4
  1418  02E7  1383               	bcf	3,7	;select IRP bank0
  1419  02E8  0800               	movf	0,w
  1420  02E9  1283               	bcf	3,5	;RP0=0, select bank0
  1421  02EA  1303               	bcf	3,6	;RP1=0, select bank0
  1422  02EB  0087               	movwf	7	;volatile
  1423  02EC                     l1798:
  1424                           
  1425                           ;utils.c: 177:     clearPin(Display7seg4digitsVetor[indiceDisplay].pin, Display7seg4digi
      +                          tsVetor[indiceDisplay].port);
  1426  02EC  3003               	movlw	3
  1427  02ED  00C9               	movwf	??_shiftDisplays
  1428  02EE  0849               	movf	??_shiftDisplays,w
  1429  02EF  00C1               	movwf	___bmul@multiplicand
  1430  02F0  083F               	movf	_indiceDisplay,w
  1431  02F1  249F               	fcall	___bmul
  1432  02F2  3E30               	addlw	(low ((_Display7seg4digitsVetor| 0+1)))& (0+255)
  1433  02F3  0084               	movwf	4
  1434  02F4  1383               	bcf	3,7	;select IRP bank0
  1435  02F5  0800               	movf	0,w
  1436  02F6  1283               	bcf	3,5	;RP0=0, select bank0
  1437  02F7  1303               	bcf	3,6	;RP1=0, select bank0
  1438  02F8  00CA               	movwf	??_shiftDisplays+1
  1439  02F9  084A               	movf	??_shiftDisplays+1,w
  1440  02FA  00C5               	movwf	clearPin@ucPort
  1441  02FB  3003               	movlw	3
  1442  02FC  00CB               	movwf	??_shiftDisplays+2
  1443  02FD  084B               	movf	??_shiftDisplays+2,w
  1444  02FE  00C1               	movwf	___bmul@multiplicand
  1445  02FF  083F               	movf	_indiceDisplay,w
  1446  0300  249F               	fcall	___bmul
  1447  0301  3E2F               	addlw	(low (_Display7seg4digitsVetor| 0))& (0+255)
  1448  0302  0084               	movwf	4
  1449  0303  1383               	bcf	3,7	;select IRP bank0
  1450  0304  0800               	movf	0,w
  1451  0305  2316               	fcall	_clearPin
  1452  0306                     l1800:
  1453                           
  1454                           ;utils.c: 183:     if(0 != indiceDisplay){
  1455  0306  1283               	bcf	3,5	;RP0=0, select bank0
  1456  0307  1303               	bcf	3,6	;RP1=0, select bank0
  1457  0308  083F               	movf	_indiceDisplay,w
  1458  0309  0440               	iorwf	_indiceDisplay+1,w
  1459  030A  1903               	btfsc	3,2
  1460  030B  2B0D               	goto	u1221
  1461  030C  2B0E               	goto	u1220
  1462  030D                     u1221:
  1463  030D  2B12               	goto	l1804
  1464  030E                     u1220:
  1465  030E                     l1802:
  1466                           
  1467                           ;utils.c: 185:         setPin(0, 0);
  1468  030E  01C5               	clrf	setPin@ucPort
  1469  030F  3000               	movlw	0
  1470  0310  2373               	fcall	_setPin
  1471                           
  1472                           ;utils.c: 186:     }else{
  1473  0311  2B15               	goto	l189
  1474  0312                     l1804:
  1475                           
  1476                           ;utils.c: 187:         clearPin(0, 0);
  1477  0312  01C5               	clrf	clearPin@ucPort
  1478  0313  3000               	movlw	0
  1479  0314  2316               	fcall	_clearPin
  1480  0315                     l189:
  1481  0315  0008               	return
  1482  0316                     __end_of_shiftDisplays:
  1483                           
  1484                           	psect	text3
  1485  0373                     __ptext3:	
  1486 ;; *************** function _setPin *****************
  1487 ;; Defined at:
  1488 ;;		line 18 in file "utils.c"
  1489 ;; Parameters:    Size  Location     Type
  1490 ;;  ucPin           1    wreg     unsigned char 
  1491 ;;  ucPort          1    4[BANK0 ] unsigned char 
  1492 ;; Auto vars:     Size  Location     Type
  1493 ;;  ucPin           1    7[BANK0 ] unsigned char 
  1494 ;; Return value:  Size  Location     Type
  1495 ;;                  1    wreg      void 
  1496 ;; Registers used:
  1497 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1498 ;; Tracked objects:
  1499 ;;		On entry : 0/0
  1500 ;;		On exit  : 0/0
  1501 ;;		Unchanged: 0/0
  1502 ;; Data sizes:     COMMON   BANK0   BANK1
  1503 ;;      Params:         0       1       0
  1504 ;;      Locals:         0       1       0
  1505 ;;      Temps:          0       2       0
  1506 ;;      Totals:         0       4       0
  1507 ;;Total ram usage:        4 bytes
  1508 ;; Hardware stack levels used: 1
  1509 ;; Hardware stack levels required when called: 1
  1510 ;; This function calls:
  1511 ;;		Nothing
  1512 ;; This function is called by:
  1513 ;;		_shiftDisplays
  1514 ;; This function uses a non-reentrant model
  1515 ;;
  1516                           
  1517                           
  1518                           ;psect for function _setPin
  1519  0373                     _setPin:
  1520                           
  1521                           ;incstack = 0
  1522                           ; Regs used in _setPin: [wreg-fsr0h+status,2+status,0]
  1523                           ;setPin@ucPin stored from wreg
  1524  0373  1283               	bcf	3,5	;RP0=0, select bank0
  1525  0374  1303               	bcf	3,6	;RP1=0, select bank0
  1526  0375  00C8               	movwf	setPin@ucPin
  1527  0376                     l1220:
  1528                           
  1529                           ;utils.c: 21:     switch(ucPort){
  1530  0376  2BB9               	goto	l1240
  1531  0377                     l1222:
  1532                           
  1533                           ;utils.c: 23:             if(ucPin >= 0 && ucPin <= 5){
  1534  0377  3006               	movlw	6
  1535  0378  0248               	subwf	setPin@ucPin,w
  1536  0379  1803               	skipnc
  1537  037A  2B7C               	goto	u631
  1538  037B  2B7D               	goto	u630
  1539  037C                     u631:
  1540  037C  2BCC               	goto	l139
  1541  037D                     u630:
  1542  037D                     l1224:
  1543                           
  1544                           ;utils.c: 24:                 PORTA |= (1<<ucPin);
  1545  037D  3001               	movlw	1
  1546  037E  00C6               	movwf	??_setPin
  1547  037F  0A48               	incf	setPin@ucPin,w
  1548  0380  2B83               	goto	u644
  1549  0381                     u645:
  1550  0381  1003               	clrc
  1551  0382  0DC6               	rlf	??_setPin,f
  1552  0383                     u644:
  1553  0383  3EFF               	addlw	-1
  1554  0384  1D03               	skipz
  1555  0385  2B81               	goto	u645
  1556  0386  0846               	movf	??_setPin,w
  1557  0387  00C7               	movwf	??_setPin+1
  1558  0388  0847               	movf	??_setPin+1,w
  1559  0389  0485               	iorwf	5,f	;volatile
  1560                           
  1561                           ;utils.c: 25:             }else{
  1562  038A  2BCC               	goto	l139
  1563  038B                     l1226:
  1564                           
  1565                           ;utils.c: 30:              if(ucPin >= 4 && ucPin <= 7){
  1566  038B  3004               	movlw	4
  1567  038C  0248               	subwf	setPin@ucPin,w
  1568  038D  1C03               	skipc
  1569  038E  2B90               	goto	u651
  1570  038F  2B91               	goto	u650
  1571  0390                     u651:
  1572  0390  2BCC               	goto	l139
  1573  0391                     u650:
  1574  0391                     l1228:
  1575  0391  3008               	movlw	8
  1576  0392  0248               	subwf	setPin@ucPin,w
  1577  0393  1803               	skipnc
  1578  0394  2B96               	goto	u661
  1579  0395  2B97               	goto	u660
  1580  0396                     u661:
  1581  0396  2BCC               	goto	l139
  1582  0397                     u660:
  1583  0397                     l1230:
  1584                           
  1585                           ;utils.c: 31:                 PORTB |= (1<<ucPin);
  1586  0397  3001               	movlw	1
  1587  0398  00C6               	movwf	??_setPin
  1588  0399  0A48               	incf	setPin@ucPin,w
  1589  039A  2B9D               	goto	u674
  1590  039B                     u675:
  1591  039B  1003               	clrc
  1592  039C  0DC6               	rlf	??_setPin,f
  1593  039D                     u674:
  1594  039D  3EFF               	addlw	-1
  1595  039E  1D03               	skipz
  1596  039F  2B9B               	goto	u675
  1597  03A0  0846               	movf	??_setPin,w
  1598  03A1  00C7               	movwf	??_setPin+1
  1599  03A2  0847               	movf	??_setPin+1,w
  1600  03A3  0486               	iorwf	6,f	;volatile
  1601                           
  1602                           ;utils.c: 32:             }else{
  1603  03A4  2BCC               	goto	l139
  1604  03A5                     l1232:
  1605                           
  1606                           ;utils.c: 37:              if(ucPin >= 0 && ucPin <= 7){
  1607  03A5  3008               	movlw	8
  1608  03A6  0248               	subwf	setPin@ucPin,w
  1609  03A7  1803               	skipnc
  1610  03A8  2BAA               	goto	u681
  1611  03A9  2BAB               	goto	u680
  1612  03AA                     u681:
  1613  03AA  2BCC               	goto	l139
  1614  03AB                     u680:
  1615  03AB                     l1234:
  1616                           
  1617                           ;utils.c: 38:                 PORTC |= (1<<ucPin);
  1618  03AB  3001               	movlw	1
  1619  03AC  00C6               	movwf	??_setPin
  1620  03AD  0A48               	incf	setPin@ucPin,w
  1621  03AE  2BB1               	goto	u694
  1622  03AF                     u695:
  1623  03AF  1003               	clrc
  1624  03B0  0DC6               	rlf	??_setPin,f
  1625  03B1                     u694:
  1626  03B1  3EFF               	addlw	-1
  1627  03B2  1D03               	skipz
  1628  03B3  2BAF               	goto	u695
  1629  03B4  0846               	movf	??_setPin,w
  1630  03B5  00C7               	movwf	??_setPin+1
  1631  03B6  0847               	movf	??_setPin+1,w
  1632  03B7  0487               	iorwf	7,f	;volatile
  1633                           
  1634                           ;utils.c: 39:             }else{
  1635  03B8  2BCC               	goto	l139
  1636  03B9                     l1240:
  1637  03B9  0845               	movf	setPin@ucPort,w
  1638  03BA  00C6               	movwf	??_setPin
  1639  03BB  01C7               	clrf	??_setPin+1
  1640                           
  1641                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1642                           ; Switch size 1, requested type "simple"
  1643                           ; Number of cases is 1, Range of values is 0 to 0
  1644                           ; switch strategies available:
  1645                           ; Name         Instructions Cycles
  1646                           ; simple_byte            4     3 (average)
  1647                           ; direct_byte            7     6 (fixed)
  1648                           ; jumptable            260     6 (fixed)
  1649                           ;	Chosen strategy is simple_byte
  1650  03BC  0847               	movf	??_setPin+1,w
  1651  03BD  3A00               	xorlw	0	; case 0
  1652  03BE  1903               	skipnz
  1653  03BF  2BC1               	goto	l1982
  1654  03C0  2BCC               	goto	l139
  1655  03C1                     l1982:
  1656                           
  1657                           ; Switch size 1, requested type "simple"
  1658                           ; Number of cases is 3, Range of values is 0 to 2
  1659                           ; switch strategies available:
  1660                           ; Name         Instructions Cycles
  1661                           ; direct_byte            9     6 (fixed)
  1662                           ; simple_byte           10     6 (average)
  1663                           ; jumptable            260     6 (fixed)
  1664                           ;	Chosen strategy is simple_byte
  1665  03C1  0846               	movf	??_setPin,w
  1666  03C2  3A00               	xorlw	0	; case 0
  1667  03C3  1903               	skipnz
  1668  03C4  2B77               	goto	l1222
  1669  03C5  3A01               	xorlw	1	; case 1
  1670  03C6  1903               	skipnz
  1671  03C7  2B8B               	goto	l1226
  1672  03C8  3A03               	xorlw	3	; case 2
  1673  03C9  1903               	skipnz
  1674  03CA  2BA5               	goto	l1232
  1675  03CB  2BCC               	goto	l139
  1676  03CC                     l139:
  1677  03CC  0008               	return
  1678  03CD                     __end_of_setPin:
  1679                           
  1680                           	psect	text4
  1681  0316                     __ptext4:	
  1682 ;; *************** function _clearPin *****************
  1683 ;; Defined at:
  1684 ;;		line 51 in file "utils.c"
  1685 ;; Parameters:    Size  Location     Type
  1686 ;;  ucPin           1    wreg     unsigned char 
  1687 ;;  ucPort          1    4[BANK0 ] unsigned char 
  1688 ;; Auto vars:     Size  Location     Type
  1689 ;;  ucPin           1    7[BANK0 ] unsigned char 
  1690 ;; Return value:  Size  Location     Type
  1691 ;;                  1    wreg      void 
  1692 ;; Registers used:
  1693 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1694 ;; Tracked objects:
  1695 ;;		On entry : 0/0
  1696 ;;		On exit  : 0/0
  1697 ;;		Unchanged: 0/0
  1698 ;; Data sizes:     COMMON   BANK0   BANK1
  1699 ;;      Params:         0       1       0
  1700 ;;      Locals:         0       1       0
  1701 ;;      Temps:          0       2       0
  1702 ;;      Totals:         0       4       0
  1703 ;;Total ram usage:        4 bytes
  1704 ;; Hardware stack levels used: 1
  1705 ;; Hardware stack levels required when called: 1
  1706 ;; This function calls:
  1707 ;;		Nothing
  1708 ;; This function is called by:
  1709 ;;		_shiftDisplays
  1710 ;; This function uses a non-reentrant model
  1711 ;;
  1712                           
  1713                           
  1714                           ;psect for function _clearPin
  1715  0316                     _clearPin:
  1716                           
  1717                           ;incstack = 0
  1718                           ; Regs used in _clearPin: [wreg-fsr0h+status,2+status,0]
  1719                           ;clearPin@ucPin stored from wreg
  1720  0316  1283               	bcf	3,5	;RP0=0, select bank0
  1721  0317  1303               	bcf	3,6	;RP1=0, select bank0
  1722  0318  00C8               	movwf	clearPin@ucPin
  1723  0319                     l1248:
  1724                           
  1725                           ;utils.c: 53:     switch(ucPort){
  1726  0319  2B5F               	goto	l1268
  1727  031A                     l1250:
  1728                           
  1729                           ;utils.c: 55:             if(ucPin >= 0 && ucPin <= 5){
  1730  031A  3006               	movlw	6
  1731  031B  0248               	subwf	clearPin@ucPin,w
  1732  031C  1803               	skipnc
  1733  031D  2B1F               	goto	u701
  1734  031E  2B20               	goto	u700
  1735  031F                     u701:
  1736  031F  2B72               	goto	l154
  1737  0320                     u700:
  1738  0320                     l1252:
  1739                           
  1740                           ;utils.c: 56:                 PORTA &= ~(1<<ucPin);
  1741  0320  3001               	movlw	1
  1742  0321  00C6               	movwf	??_clearPin
  1743  0322  0A48               	incf	clearPin@ucPin,w
  1744  0323  2B26               	goto	u714
  1745  0324                     u715:
  1746  0324  1003               	clrc
  1747  0325  0DC6               	rlf	??_clearPin,f
  1748  0326                     u714:
  1749  0326  3EFF               	addlw	-1
  1750  0327  1D03               	skipz
  1751  0328  2B24               	goto	u715
  1752  0329  0846               	movf	??_clearPin,w
  1753  032A  3AFF               	xorlw	255
  1754  032B  00C7               	movwf	??_clearPin+1
  1755  032C  0847               	movf	??_clearPin+1,w
  1756  032D  0585               	andwf	5,f	;volatile
  1757                           
  1758                           ;utils.c: 57:             }else{
  1759  032E  2B72               	goto	l154
  1760  032F                     l1254:
  1761                           
  1762                           ;utils.c: 62:              if(ucPin >= 4 && ucPin <= 7){
  1763  032F  3004               	movlw	4
  1764  0330  0248               	subwf	clearPin@ucPin,w
  1765  0331  1C03               	skipc
  1766  0332  2B34               	goto	u721
  1767  0333  2B35               	goto	u720
  1768  0334                     u721:
  1769  0334  2B72               	goto	l154
  1770  0335                     u720:
  1771  0335                     l1256:
  1772  0335  3008               	movlw	8
  1773  0336  0248               	subwf	clearPin@ucPin,w
  1774  0337  1803               	skipnc
  1775  0338  2B3A               	goto	u731
  1776  0339  2B3B               	goto	u730
  1777  033A                     u731:
  1778  033A  2B72               	goto	l154
  1779  033B                     u730:
  1780  033B                     l1258:
  1781                           
  1782                           ;utils.c: 63:                 PORTB &= ~(1<<ucPin);
  1783  033B  3001               	movlw	1
  1784  033C  00C6               	movwf	??_clearPin
  1785  033D  0A48               	incf	clearPin@ucPin,w
  1786  033E  2B41               	goto	u744
  1787  033F                     u745:
  1788  033F  1003               	clrc
  1789  0340  0DC6               	rlf	??_clearPin,f
  1790  0341                     u744:
  1791  0341  3EFF               	addlw	-1
  1792  0342  1D03               	skipz
  1793  0343  2B3F               	goto	u745
  1794  0344  0846               	movf	??_clearPin,w
  1795  0345  3AFF               	xorlw	255
  1796  0346  00C7               	movwf	??_clearPin+1
  1797  0347  0847               	movf	??_clearPin+1,w
  1798  0348  0586               	andwf	6,f	;volatile
  1799                           
  1800                           ;utils.c: 64:             }else{
  1801  0349  2B72               	goto	l154
  1802  034A                     l1260:
  1803                           
  1804                           ;utils.c: 69:              if(ucPin >= 0 && ucPin <= 7){
  1805  034A  3008               	movlw	8
  1806  034B  0248               	subwf	clearPin@ucPin,w
  1807  034C  1803               	skipnc
  1808  034D  2B4F               	goto	u751
  1809  034E  2B50               	goto	u750
  1810  034F                     u751:
  1811  034F  2B72               	goto	l154
  1812  0350                     u750:
  1813  0350                     l1262:
  1814                           
  1815                           ;utils.c: 70:                 PORTC &= ~(1<<ucPin);
  1816  0350  3001               	movlw	1
  1817  0351  00C6               	movwf	??_clearPin
  1818  0352  0A48               	incf	clearPin@ucPin,w
  1819  0353  2B56               	goto	u764
  1820  0354                     u765:
  1821  0354  1003               	clrc
  1822  0355  0DC6               	rlf	??_clearPin,f
  1823  0356                     u764:
  1824  0356  3EFF               	addlw	-1
  1825  0357  1D03               	skipz
  1826  0358  2B54               	goto	u765
  1827  0359  0846               	movf	??_clearPin,w
  1828  035A  3AFF               	xorlw	255
  1829  035B  00C7               	movwf	??_clearPin+1
  1830  035C  0847               	movf	??_clearPin+1,w
  1831  035D  0587               	andwf	7,f	;volatile
  1832                           
  1833                           ;utils.c: 71:             }else{
  1834  035E  2B72               	goto	l154
  1835  035F                     l1268:
  1836  035F  0845               	movf	clearPin@ucPort,w
  1837  0360  00C6               	movwf	??_clearPin
  1838  0361  01C7               	clrf	??_clearPin+1
  1839                           
  1840                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1841                           ; Switch size 1, requested type "simple"
  1842                           ; Number of cases is 1, Range of values is 0 to 0
  1843                           ; switch strategies available:
  1844                           ; Name         Instructions Cycles
  1845                           ; simple_byte            4     3 (average)
  1846                           ; direct_byte            7     6 (fixed)
  1847                           ; jumptable            260     6 (fixed)
  1848                           ;	Chosen strategy is simple_byte
  1849  0362  0847               	movf	??_clearPin+1,w
  1850  0363  3A00               	xorlw	0	; case 0
  1851  0364  1903               	skipnz
  1852  0365  2B67               	goto	l1984
  1853  0366  2B72               	goto	l154
  1854  0367                     l1984:
  1855                           
  1856                           ; Switch size 1, requested type "simple"
  1857                           ; Number of cases is 3, Range of values is 0 to 2
  1858                           ; switch strategies available:
  1859                           ; Name         Instructions Cycles
  1860                           ; direct_byte            9     6 (fixed)
  1861                           ; simple_byte           10     6 (average)
  1862                           ; jumptable            260     6 (fixed)
  1863                           ;	Chosen strategy is simple_byte
  1864  0367  0846               	movf	??_clearPin,w
  1865  0368  3A00               	xorlw	0	; case 0
  1866  0369  1903               	skipnz
  1867  036A  2B1A               	goto	l1250
  1868  036B  3A01               	xorlw	1	; case 1
  1869  036C  1903               	skipnz
  1870  036D  2B2F               	goto	l1254
  1871  036E  3A03               	xorlw	3	; case 2
  1872  036F  1903               	skipnz
  1873  0370  2B4A               	goto	l1260
  1874  0371  2B72               	goto	l154
  1875  0372                     l154:
  1876  0372  0008               	return
  1877  0373                     __end_of_clearPin:
  1878                           
  1879                           	psect	text5
  1880  049F                     __ptext5:	
  1881 ;; *************** function ___bmul *****************
  1882 ;; Defined at:
  1883 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul8.c"
  1884 ;; Parameters:    Size  Location     Type
  1885 ;;  multiplier      1    wreg     unsigned char 
  1886 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  1887 ;; Auto vars:     Size  Location     Type
  1888 ;;  multiplier      1    3[BANK0 ] unsigned char 
  1889 ;;  product         1    2[BANK0 ] unsigned char 
  1890 ;; Return value:  Size  Location     Type
  1891 ;;                  1    wreg      unsigned char 
  1892 ;; Registers used:
  1893 ;;		wreg, status,2, status,0
  1894 ;; Tracked objects:
  1895 ;;		On entry : 0/0
  1896 ;;		On exit  : 0/0
  1897 ;;		Unchanged: 0/0
  1898 ;; Data sizes:     COMMON   BANK0   BANK1
  1899 ;;      Params:         0       1       0
  1900 ;;      Locals:         0       2       0
  1901 ;;      Temps:          0       1       0
  1902 ;;      Totals:         0       4       0
  1903 ;;Total ram usage:        4 bytes
  1904 ;; Hardware stack levels used: 1
  1905 ;; Hardware stack levels required when called: 1
  1906 ;; This function calls:
  1907 ;;		Nothing
  1908 ;; This function is called by:
  1909 ;;		_shiftDisplays
  1910 ;;		_writeCharOnDisplay
  1911 ;; This function uses a non-reentrant model
  1912 ;;
  1913                           
  1914                           
  1915                           ;psect for function ___bmul
  1916  049F                     ___bmul:
  1917                           
  1918                           ;incstack = 0
  1919                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1920                           ;___bmul@multiplier stored from wreg
  1921  049F  1283               	bcf	3,5	;RP0=0, select bank0
  1922  04A0  1303               	bcf	3,6	;RP1=0, select bank0
  1923  04A1  00C4               	movwf	___bmul@multiplier
  1924  04A2                     l1636:
  1925  04A2  01C3               	clrf	___bmul@product
  1926  04A3                     l1638:
  1927  04A3  1C44               	btfss	___bmul@multiplier,0
  1928  04A4  2CA6               	goto	u1181
  1929  04A5  2CA7               	goto	u1180
  1930  04A6                     u1181:
  1931  04A6  2CAB               	goto	l1642
  1932  04A7                     u1180:
  1933  04A7                     l1640:
  1934  04A7  0841               	movf	___bmul@multiplicand,w
  1935  04A8  00C2               	movwf	??___bmul
  1936  04A9  0842               	movf	??___bmul,w
  1937  04AA  07C3               	addwf	___bmul@product,f
  1938  04AB                     l1642:
  1939  04AB  1003               	clrc
  1940  04AC  0DC1               	rlf	___bmul@multiplicand,f
  1941  04AD                     l1644:
  1942  04AD  1003               	clrc
  1943  04AE  0CC4               	rrf	___bmul@multiplier,f
  1944  04AF  0844               	movf	___bmul@multiplier,w
  1945  04B0  1D03               	btfss	3,2
  1946  04B1  2CB3               	goto	u1191
  1947  04B2  2CB4               	goto	u1190
  1948  04B3                     u1191:
  1949  04B3  2CA3               	goto	l1638
  1950  04B4                     u1190:
  1951  04B4                     l1646:
  1952  04B4  0843               	movf	___bmul@product,w
  1953  04B5                     l322:
  1954  04B5  0008               	return
  1955  04B6                     __end_of___bmul:
  1956                           
  1957                           	psect	text6
  1958  04B6                     __ptext6:	
  1959 ;; *************** function _initDisplay *****************
  1960 ;; Defined at:
  1961 ;;		line 116 in file "utils.c"
  1962 ;; Parameters:    Size  Location     Type
  1963 ;;		None
  1964 ;; Auto vars:     Size  Location     Type
  1965 ;;		None
  1966 ;; Return value:  Size  Location     Type
  1967 ;;                  1    wreg      void 
  1968 ;; Registers used:
  1969 ;;		wreg, status,2
  1970 ;; Tracked objects:
  1971 ;;		On entry : 0/0
  1972 ;;		On exit  : 0/0
  1973 ;;		Unchanged: 0/0
  1974 ;; Data sizes:     COMMON   BANK0   BANK1
  1975 ;;      Params:         0       0       0
  1976 ;;      Locals:         0       0       0
  1977 ;;      Temps:          0       1       0
  1978 ;;      Totals:         0       1       0
  1979 ;;Total ram usage:        1 bytes
  1980 ;; Hardware stack levels used: 1
  1981 ;; Hardware stack levels required when called: 1
  1982 ;; This function calls:
  1983 ;;		Nothing
  1984 ;; This function is called by:
  1985 ;;		_main
  1986 ;; This function uses a non-reentrant model
  1987 ;;
  1988                           
  1989                           
  1990                           ;psect for function _initDisplay
  1991  04B6                     _initDisplay:
  1992  04B6                     l1712:	
  1993                           ;incstack = 0
  1994                           ; Regs used in _initDisplay: [wreg+status,2]
  1995                           
  1996                           
  1997                           ;utils.c: 118:     Display7seg4digitsVetor[0].data = 0x00;
  1998  04B6  1283               	bcf	3,5	;RP0=0, select bank0
  1999  04B7  1303               	bcf	3,6	;RP1=0, select bank0
  2000  04B8  01B1               	clrf	_Display7seg4digitsVetor+2
  2001                           
  2002                           ;utils.c: 119:     Display7seg4digitsVetor[0].pin = 0;
  2003  04B9  01AF               	clrf	_Display7seg4digitsVetor
  2004                           
  2005                           ;utils.c: 120:     Display7seg4digitsVetor[0].port = 0;
  2006  04BA  01B0               	clrf	_Display7seg4digitsVetor+1
  2007                           
  2008                           ;utils.c: 122:     Display7seg4digitsVetor[1].data = 0x00;
  2009  04BB  01B4               	clrf	_Display7seg4digitsVetor+5
  2010  04BC                     l1714:
  2011                           
  2012                           ;utils.c: 123:     Display7seg4digitsVetor[1].pin = 5;
  2013  04BC  3005               	movlw	5
  2014  04BD  00C1               	movwf	??_initDisplay
  2015  04BE  0841               	movf	??_initDisplay,w
  2016  04BF  00B2               	movwf	_Display7seg4digitsVetor+3
  2017  04C0                     l1716:
  2018                           
  2019                           ;utils.c: 124:     Display7seg4digitsVetor[1].port = 0;
  2020  04C0  01B3               	clrf	_Display7seg4digitsVetor+4
  2021  04C1                     l1718:
  2022                           
  2023                           ;utils.c: 126:     Display7seg4digitsVetor[2].data = 0x00;
  2024  04C1  01B7               	clrf	_Display7seg4digitsVetor+8
  2025  04C2                     l1720:
  2026                           
  2027                           ;utils.c: 127:     Display7seg4digitsVetor[2].pin = 1;
  2028  04C2  01B5               	clrf	_Display7seg4digitsVetor+6
  2029  04C3  0AB5               	incf	_Display7seg4digitsVetor+6,f
  2030  04C4                     l1722:
  2031                           
  2032                           ;utils.c: 128:     Display7seg4digitsVetor[2].port = 0;
  2033  04C4  01B6               	clrf	_Display7seg4digitsVetor+7
  2034  04C5                     l1724:
  2035                           
  2036                           ;utils.c: 130:     Display7seg4digitsVetor[3].data = 0x00;
  2037  04C5  01BA               	clrf	_Display7seg4digitsVetor+11
  2038  04C6                     l1726:
  2039                           
  2040                           ;utils.c: 131:     Display7seg4digitsVetor[3].pin = 2;
  2041  04C6  3002               	movlw	2
  2042  04C7  00C1               	movwf	??_initDisplay
  2043  04C8  0841               	movf	??_initDisplay,w
  2044  04C9  00B8               	movwf	_Display7seg4digitsVetor+9
  2045                           
  2046                           ;utils.c: 132:     Display7seg4digitsVetor[3].port = 0;
  2047  04CA  01B9               	clrf	_Display7seg4digitsVetor+10
  2048  04CB                     l180:
  2049  04CB  0008               	return
  2050  04CC                     __end_of_initDisplay:
  2051                           
  2052                           	psect	text7
  2053  0475                     __ptext7:	
  2054 ;; *************** function _initButtons *****************
  2055 ;; Defined at:
  2056 ;;		line 136 in file "utils.c"
  2057 ;; Parameters:    Size  Location     Type
  2058 ;;		None
  2059 ;; Auto vars:     Size  Location     Type
  2060 ;;		None
  2061 ;; Return value:  Size  Location     Type
  2062 ;;                  1    wreg      void 
  2063 ;; Registers used:
  2064 ;;		wreg, status,2
  2065 ;; Tracked objects:
  2066 ;;		On entry : 0/0
  2067 ;;		On exit  : 0/0
  2068 ;;		Unchanged: 0/0
  2069 ;; Data sizes:     COMMON   BANK0   BANK1
  2070 ;;      Params:         0       0       0
  2071 ;;      Locals:         0       0       0
  2072 ;;      Temps:          0       1       0
  2073 ;;      Totals:         0       1       0
  2074 ;;Total ram usage:        1 bytes
  2075 ;; Hardware stack levels used: 1
  2076 ;; Hardware stack levels required when called: 1
  2077 ;; This function calls:
  2078 ;;		Nothing
  2079 ;; This function is called by:
  2080 ;;		_main
  2081 ;; This function uses a non-reentrant model
  2082 ;;
  2083                           
  2084                           
  2085                           ;psect for function _initButtons
  2086  0475                     _initButtons:
  2087  0475                     l1728:	
  2088                           ;incstack = 0
  2089                           ; Regs used in _initButtons: [wreg+status,2]
  2090                           
  2091                           
  2092                           ;utils.c: 137:     Botoes[0].pin = 4;
  2093  0475  3004               	movlw	4
  2094  0476  1283               	bcf	3,5	;RP0=0, select bank0
  2095  0477  1303               	bcf	3,6	;RP1=0, select bank0
  2096  0478  00C1               	movwf	??_initButtons
  2097  0479  0841               	movf	??_initButtons,w
  2098  047A  00A0               	movwf	_Botoes
  2099  047B                     l1730:
  2100                           
  2101                           ;utils.c: 138:     Botoes[0].port = 1;
  2102  047B  01A1               	clrf	_Botoes+1
  2103  047C  0AA1               	incf	_Botoes+1,f
  2104  047D                     l1732:
  2105                           
  2106                           ;utils.c: 139:     Botoes[0].status = 1;
  2107  047D  01A2               	clrf	_Botoes+2
  2108  047E  0AA2               	incf	_Botoes+2,f
  2109                           
  2110                           ;utils.c: 141:     Botoes[1].pin = 6;
  2111  047F  3006               	movlw	6
  2112  0480  00C1               	movwf	??_initButtons
  2113  0481  0841               	movf	??_initButtons,w
  2114  0482  00A3               	movwf	_Botoes+3
  2115  0483                     l1734:
  2116                           
  2117                           ;utils.c: 142:     Botoes[1].port = 1;
  2118  0483  01A4               	clrf	_Botoes+4
  2119  0484  0AA4               	incf	_Botoes+4,f
  2120  0485                     l1736:
  2121                           
  2122                           ;utils.c: 143:     Botoes[1].status = 1;
  2123  0485  01A5               	clrf	_Botoes+5
  2124  0486  0AA5               	incf	_Botoes+5,f
  2125                           
  2126                           ;utils.c: 145:     Botoes[2].pin = 7;
  2127  0487  3007               	movlw	7
  2128  0488  00C1               	movwf	??_initButtons
  2129  0489  0841               	movf	??_initButtons,w
  2130  048A  00A6               	movwf	_Botoes+6
  2131  048B                     l1738:
  2132                           
  2133                           ;utils.c: 146:     Botoes[2].port = 1;
  2134  048B  01A7               	clrf	_Botoes+7
  2135  048C  0AA7               	incf	_Botoes+7,f
  2136  048D                     l1740:
  2137                           
  2138                           ;utils.c: 147:     Botoes[2].status = 1;
  2139  048D  01A8               	clrf	_Botoes+8
  2140  048E  0AA8               	incf	_Botoes+8,f
  2141                           
  2142                           ;utils.c: 149:     Botoes[3].pin = 4;
  2143  048F  3004               	movlw	4
  2144  0490  00C1               	movwf	??_initButtons
  2145  0491  0841               	movf	??_initButtons,w
  2146  0492  00A9               	movwf	_Botoes+9
  2147  0493                     l1742:
  2148                           
  2149                           ;utils.c: 150:     Botoes[3].port = 0;
  2150  0493  01AA               	clrf	_Botoes+10
  2151  0494                     l1744:
  2152                           
  2153                           ;utils.c: 151:     Botoes[3].status = 1;
  2154  0494  01AB               	clrf	_Botoes+11
  2155  0495  0AAB               	incf	_Botoes+11,f
  2156  0496                     l1746:
  2157                           
  2158                           ;utils.c: 153:     Botoes[4].pin = 5;
  2159  0496  3005               	movlw	5
  2160  0497  00C1               	movwf	??_initButtons
  2161  0498  0841               	movf	??_initButtons,w
  2162  0499  00AC               	movwf	_Botoes+12
  2163  049A                     l1748:
  2164                           
  2165                           ;utils.c: 154:     Botoes[4].port = 1;
  2166  049A  01AD               	clrf	_Botoes+13
  2167  049B  0AAD               	incf	_Botoes+13,f
  2168  049C                     l1750:
  2169                           
  2170                           ;utils.c: 155:     Botoes[4].status = 1;
  2171  049C  01AE               	clrf	_Botoes+14
  2172  049D  0AAE               	incf	_Botoes+14,f
  2173  049E                     l183:
  2174  049E  0008               	return
  2175  049F                     __end_of_initButtons:
  2176                           
  2177                           	psect	text8
  2178  0423                     __ptext8:	
  2179 ;; *************** function _configBoard *****************
  2180 ;; Defined at:
  2181 ;;		line 250 in file "utils.c"
  2182 ;; Parameters:    Size  Location     Type
  2183 ;;		None
  2184 ;; Auto vars:     Size  Location     Type
  2185 ;;		None
  2186 ;; Return value:  Size  Location     Type
  2187 ;;                  1    wreg      void 
  2188 ;; Registers used:
  2189 ;;		wreg, status,2, status,0
  2190 ;; Tracked objects:
  2191 ;;		On entry : 0/0
  2192 ;;		On exit  : 0/0
  2193 ;;		Unchanged: 0/0
  2194 ;; Data sizes:     COMMON   BANK0   BANK1
  2195 ;;      Params:         0       0       0
  2196 ;;      Locals:         0       0       0
  2197 ;;      Temps:          0       1       0
  2198 ;;      Totals:         0       1       0
  2199 ;;Total ram usage:        1 bytes
  2200 ;; Hardware stack levels used: 1
  2201 ;; Hardware stack levels required when called: 1
  2202 ;; This function calls:
  2203 ;;		Nothing
  2204 ;; This function is called by:
  2205 ;;		_main
  2206 ;; This function uses a non-reentrant model
  2207 ;;
  2208                           
  2209                           
  2210                           ;psect for function _configBoard
  2211  0423                     _configBoard:
  2212  0423                     l1650:	
  2213                           ;incstack = 0
  2214                           ; Regs used in _configBoard: [wreg+status,2+status,0]
  2215                           
  2216                           
  2217                           ;utils.c: 260:     OSCCON |= (1<<0);
  2218  0423  1683               	bsf	3,5	;RP0=1, select bank1
  2219  0424  1303               	bcf	3,6	;RP1=0, select bank1
  2220  0425  140F               	bsf	15,0	;volatile
  2221  0426                     l1652:
  2222                           
  2223                           ;utils.c: 261:     OSCCON &= ~(1<<1);
  2224  0426  30FD               	movlw	253
  2225  0427  1283               	bcf	3,5	;RP0=0, select bank0
  2226  0428  1303               	bcf	3,6	;RP1=0, select bank0
  2227  0429  00C1               	movwf	??_configBoard
  2228  042A  0841               	movf	??_configBoard,w
  2229  042B  1683               	bsf	3,5	;RP0=1, select bank1
  2230  042C  1303               	bcf	3,6	;RP1=0, select bank1
  2231  042D  058F               	andwf	15,f	;volatile
  2232  042E                     l1654:
  2233                           
  2234                           ;utils.c: 262:     OSCCON |= (1<<2);
  2235  042E  150F               	bsf	15,2	;volatile
  2236                           
  2237                           ;utils.c: 263:     OSCCON &= ~(1<<3);
  2238  042F  30F7               	movlw	247
  2239  0430  1283               	bcf	3,5	;RP0=0, select bank0
  2240  0431  1303               	bcf	3,6	;RP1=0, select bank0
  2241  0432  00C1               	movwf	??_configBoard
  2242  0433  0841               	movf	??_configBoard,w
  2243  0434  1683               	bsf	3,5	;RP0=1, select bank1
  2244  0435  1303               	bcf	3,6	;RP1=0, select bank1
  2245  0436  058F               	andwf	15,f	;volatile
  2246                           
  2247                           ;utils.c: 264:     OSCCON |= (0b01110000);
  2248  0437  3070               	movlw	112
  2249  0438  1283               	bcf	3,5	;RP0=0, select bank0
  2250  0439  1303               	bcf	3,6	;RP1=0, select bank0
  2251  043A  00C1               	movwf	??_configBoard
  2252  043B  0841               	movf	??_configBoard,w
  2253  043C  1683               	bsf	3,5	;RP0=1, select bank1
  2254  043D  1303               	bcf	3,6	;RP1=0, select bank1
  2255  043E  048F               	iorwf	15,f	;volatile
  2256  043F                     l1656:
  2257                           
  2258                           ;utils.c: 267:     ANSEL = 0x00;
  2259  043F  1283               	bcf	3,5	;RP0=0, select bank2
  2260  0440  1703               	bsf	3,6	;RP1=1, select bank2
  2261  0441  019E               	clrf	30	;volatile
  2262  0442                     l1658:
  2263                           
  2264                           ;utils.c: 268:     ANSELH = 0x00;
  2265  0442  019F               	clrf	31	;volatile
  2266  0443                     l1660:
  2267                           
  2268                           ;utils.c: 274:     TRISA = 0b00010000;
  2269  0443  3010               	movlw	16
  2270  0444  1683               	bsf	3,5	;RP0=1, select bank1
  2271  0445  1303               	bcf	3,6	;RP1=0, select bank1
  2272  0446  0085               	movwf	5	;volatile
  2273  0447                     l1662:
  2274                           
  2275                           ;utils.c: 275:     TRISB = 0b11110000;
  2276  0447  30F0               	movlw	240
  2277  0448  0086               	movwf	6	;volatile
  2278  0449                     l1664:
  2279                           
  2280                           ;utils.c: 276:     TRISC = 0x00;
  2281  0449  0187               	clrf	7	;volatile
  2282  044A                     l1666:
  2283                           
  2284                           ;utils.c: 279:     PORTA = 0xff;
  2285  044A  30FF               	movlw	255
  2286  044B  1283               	bcf	3,5	;RP0=0, select bank0
  2287  044C  1303               	bcf	3,6	;RP1=0, select bank0
  2288  044D  0085               	movwf	5	;volatile
  2289  044E                     l1668:
  2290                           
  2291                           ;utils.c: 280:     PORTB = 0xff;
  2292  044E  30FF               	movlw	255
  2293  044F  0086               	movwf	6	;volatile
  2294  0450                     l1670:
  2295                           
  2296                           ;utils.c: 281:     PORTC = 0x00;
  2297  0450  0187               	clrf	7	;volatile
  2298  0451                     l1672:
  2299                           
  2300                           ;utils.c: 295:     nRABPU = 0;
  2301  0451  1683               	bsf	3,5	;RP0=1, select bank1
  2302  0452  1303               	bcf	3,6	;RP1=0, select bank1
  2303  0453  1381               	bcf	1,7	;volatile
  2304  0454                     l1674:
  2305                           
  2306                           ;utils.c: 297:     T0CS = 0;
  2307  0454  1281               	bcf	1,5	;volatile
  2308  0455                     l1676:
  2309                           
  2310                           ;utils.c: 299:     PSA = 0;
  2311  0455  1181               	bcf	1,3	;volatile
  2312  0456                     l1678:
  2313                           
  2314                           ;utils.c: 301:     PS0 = 1;
  2315  0456  1401               	bsf	1,0	;volatile
  2316  0457                     l1680:
  2317                           
  2318                           ;utils.c: 302:     PS1 = 1;
  2319  0457  1481               	bsf	1,1	;volatile
  2320  0458                     l1682:
  2321                           
  2322                           ;utils.c: 303:     PS2 = 0;
  2323  0458  1101               	bcf	1,2	;volatile
  2324  0459                     l1684:
  2325                           
  2326                           ;utils.c: 306:     TMR0= 133;
  2327  0459  3085               	movlw	133
  2328  045A  1283               	bcf	3,5	;RP0=0, select bank0
  2329  045B  1303               	bcf	3,6	;RP1=0, select bank0
  2330  045C  0081               	movwf	1	;volatile
  2331  045D                     l1686:
  2332                           
  2333                           ;utils.c: 307:     GIE=1;
  2334  045D  178B               	bsf	11,7	;volatile
  2335  045E                     l1688:
  2336                           
  2337                           ;utils.c: 308:     PEIE=1;
  2338  045E  170B               	bsf	11,6	;volatile
  2339  045F                     l1690:
  2340                           
  2341                           ;utils.c: 309:     T0IE=1;
  2342  045F  168B               	bsf	11,5	;volatile
  2343  0460                     l1692:
  2344                           
  2345                           ;utils.c: 310:     RABIE = 1;
  2346  0460  158B               	bsf	11,3	;volatile
  2347  0461                     l1694:
  2348                           
  2349                           ;utils.c: 311:     T0IF = 0;
  2350  0461  110B               	bcf	11,2	;volatile
  2351  0462                     l1696:
  2352                           
  2353                           ;utils.c: 312:     RABIF = 0;
  2354  0462  100B               	bcf	11,0	;volatile
  2355  0463                     l1698:
  2356                           
  2357                           ;utils.c: 316:     WPUA4 = 1;
  2358  0463  1683               	bsf	3,5	;RP0=1, select bank1
  2359  0464  1303               	bcf	3,6	;RP1=0, select bank1
  2360  0465  1615               	bsf	21,4	;volatile
  2361  0466                     l1700:
  2362                           
  2363                           ;utils.c: 317:     WPUB4 = 1;
  2364  0466  1283               	bcf	3,5	;RP0=0, select bank2
  2365  0467  1703               	bsf	3,6	;RP1=1, select bank2
  2366  0468  1615               	bsf	21,4	;volatile
  2367  0469                     l1702:
  2368                           
  2369                           ;utils.c: 318:     WPUB5 = 1;
  2370  0469  1695               	bsf	21,5	;volatile
  2371  046A                     l1704:
  2372                           
  2373                           ;utils.c: 319:     WPUB6 = 1;
  2374  046A  1715               	bsf	21,6	;volatile
  2375  046B                     l1706:
  2376                           
  2377                           ;utils.c: 320:     WPUB7 = 1;
  2378  046B  1795               	bsf	21,7	;volatile
  2379  046C                     l1708:
  2380                           
  2381                           ;utils.c: 324:     IOCA = 0b00010000;
  2382  046C  3010               	movlw	16
  2383  046D  1683               	bsf	3,5	;RP0=1, select bank1
  2384  046E  1303               	bcf	3,6	;RP1=0, select bank1
  2385  046F  0096               	movwf	22	;volatile
  2386  0470                     l1710:
  2387                           
  2388                           ;utils.c: 325:     IOCB = 0b11110000;
  2389  0470  30F0               	movlw	240
  2390  0471  1283               	bcf	3,5	;RP0=0, select bank2
  2391  0472  1703               	bsf	3,6	;RP1=1, select bank2
  2392  0473  0096               	movwf	22	;volatile
  2393  0474                     l210:
  2394  0474  0008               	return
  2395  0475                     __end_of_configBoard:
  2396                           
  2397                           	psect	text9
  2398  03CD                     __ptext9:	
  2399 ;; *************** function ___llmod *****************
  2400 ;; Defined at:
  2401 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\llmod.c"
  2402 ;; Parameters:    Size  Location     Type
  2403 ;;  divisor         4    0[BANK0 ] unsigned long 
  2404 ;;  dividend        4    4[BANK0 ] unsigned long 
  2405 ;; Auto vars:     Size  Location     Type
  2406 ;;  counter         1    9[BANK0 ] unsigned char 
  2407 ;; Return value:  Size  Location     Type
  2408 ;;                  4    0[BANK0 ] unsigned long 
  2409 ;; Registers used:
  2410 ;;		wreg, status,2, status,0
  2411 ;; Tracked objects:
  2412 ;;		On entry : 0/0
  2413 ;;		On exit  : 0/0
  2414 ;;		Unchanged: 0/0
  2415 ;; Data sizes:     COMMON   BANK0   BANK1
  2416 ;;      Params:         0       8       0
  2417 ;;      Locals:         0       1       0
  2418 ;;      Temps:          0       1       0
  2419 ;;      Totals:         0      10       0
  2420 ;;Total ram usage:       10 bytes
  2421 ;; Hardware stack levels used: 1
  2422 ;; Hardware stack levels required when called: 1
  2423 ;; This function calls:
  2424 ;;		Nothing
  2425 ;; This function is called by:
  2426 ;;		_main
  2427 ;; This function uses a non-reentrant model
  2428 ;;
  2429                           
  2430                           
  2431                           ;psect for function ___llmod
  2432  03CD                     ___llmod:
  2433  03CD                     l1806:	
  2434                           ;incstack = 0
  2435                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  2436                           
  2437  03CD  1283               	bcf	3,5	;RP0=0, select bank0
  2438  03CE  1303               	bcf	3,6	;RP1=0, select bank0
  2439  03CF  0844               	movf	___llmod@divisor+3,w
  2440  03D0  0443               	iorwf	___llmod@divisor+2,w
  2441  03D1  0442               	iorwf	___llmod@divisor+1,w
  2442  03D2  0441               	iorwf	___llmod@divisor,w
  2443  03D3  1903               	skipnz
  2444  03D4  2BD6               	goto	u1231
  2445  03D5  2BD7               	goto	u1230
  2446  03D6                     u1231:
  2447  03D6  2C1A               	goto	l1822
  2448  03D7                     u1230:
  2449  03D7                     l1808:
  2450  03D7  01CA               	clrf	___llmod@counter
  2451  03D8  0ACA               	incf	___llmod@counter,f
  2452  03D9  2BE7               	goto	l1812
  2453  03DA                     l1810:
  2454  03DA  3001               	movlw	1
  2455  03DB  00C9               	movwf	??___llmod
  2456  03DC                     u1245:
  2457  03DC  1003               	clrc
  2458  03DD  0DC1               	rlf	___llmod@divisor,f
  2459  03DE  0DC2               	rlf	___llmod@divisor+1,f
  2460  03DF  0DC3               	rlf	___llmod@divisor+2,f
  2461  03E0  0DC4               	rlf	___llmod@divisor+3,f
  2462  03E1  0BC9               	decfsz	??___llmod,f
  2463  03E2  2BDC               	goto	u1245
  2464  03E3  3001               	movlw	1
  2465  03E4  00C9               	movwf	??___llmod
  2466  03E5  0849               	movf	??___llmod,w
  2467  03E6  07CA               	addwf	___llmod@counter,f
  2468  03E7                     l1812:
  2469  03E7  1FC4               	btfss	___llmod@divisor+3,7
  2470  03E8  2BEA               	goto	u1251
  2471  03E9  2BEB               	goto	u1250
  2472  03EA                     u1251:
  2473  03EA  2BDA               	goto	l1810
  2474  03EB                     u1250:
  2475  03EB                     l1814:
  2476  03EB  0844               	movf	___llmod@divisor+3,w
  2477  03EC  0248               	subwf	___llmod@dividend+3,w
  2478  03ED  1D03               	skipz
  2479  03EE  2BF9               	goto	u1265
  2480  03EF  0843               	movf	___llmod@divisor+2,w
  2481  03F0  0247               	subwf	___llmod@dividend+2,w
  2482  03F1  1D03               	skipz
  2483  03F2  2BF9               	goto	u1265
  2484  03F3  0842               	movf	___llmod@divisor+1,w
  2485  03F4  0246               	subwf	___llmod@dividend+1,w
  2486  03F5  1D03               	skipz
  2487  03F6  2BF9               	goto	u1265
  2488  03F7  0841               	movf	___llmod@divisor,w
  2489  03F8  0245               	subwf	___llmod@dividend,w
  2490  03F9                     u1265:
  2491  03F9  1C03               	skipc
  2492  03FA  2BFC               	goto	u1261
  2493  03FB  2BFD               	goto	u1260
  2494  03FC                     u1261:
  2495  03FC  2C0B               	goto	l1818
  2496  03FD                     u1260:
  2497  03FD                     l1816:
  2498  03FD  0841               	movf	___llmod@divisor,w
  2499  03FE  02C5               	subwf	___llmod@dividend,f
  2500  03FF  0842               	movf	___llmod@divisor+1,w
  2501  0400  1C03               	skipc
  2502  0401  0F42               	incfsz	___llmod@divisor+1,w
  2503  0402  02C6               	subwf	___llmod@dividend+1,f
  2504  0403  0843               	movf	___llmod@divisor+2,w
  2505  0404  1C03               	skipc
  2506  0405  0F43               	incfsz	___llmod@divisor+2,w
  2507  0406  02C7               	subwf	___llmod@dividend+2,f
  2508  0407  0844               	movf	___llmod@divisor+3,w
  2509  0408  1C03               	skipc
  2510  0409  0F44               	incfsz	___llmod@divisor+3,w
  2511  040A  02C8               	subwf	___llmod@dividend+3,f
  2512  040B                     l1818:
  2513  040B  3001               	movlw	1
  2514  040C                     u1275:
  2515  040C  1003               	clrc
  2516  040D  0CC4               	rrf	___llmod@divisor+3,f
  2517  040E  0CC3               	rrf	___llmod@divisor+2,f
  2518  040F  0CC2               	rrf	___llmod@divisor+1,f
  2519  0410  0CC1               	rrf	___llmod@divisor,f
  2520  0411  3EFF               	addlw	-1
  2521  0412  1D03               	skipz
  2522  0413  2C0C               	goto	u1275
  2523  0414                     l1820:
  2524  0414  3001               	movlw	1
  2525  0415  02CA               	subwf	___llmod@counter,f
  2526  0416  1D03               	btfss	3,2
  2527  0417  2C19               	goto	u1281
  2528  0418  2C1A               	goto	u1280
  2529  0419                     u1281:
  2530  0419  2BEB               	goto	l1814
  2531  041A                     u1280:
  2532  041A                     l1822:
  2533  041A  0848               	movf	___llmod@dividend+3,w
  2534  041B  00C4               	movwf	?___llmod+3
  2535  041C  0847               	movf	___llmod@dividend+2,w
  2536  041D  00C3               	movwf	?___llmod+2
  2537  041E  0846               	movf	___llmod@dividend+1,w
  2538  041F  00C2               	movwf	?___llmod+1
  2539  0420  0845               	movf	___llmod@dividend,w
  2540  0421  00C1               	movwf	?___llmod
  2541  0422                     l518:
  2542  0422  0008               	return
  2543  0423                     __end_of___llmod:
  2544                           
  2545                           	psect	text10
  2546  020B                     __ptext10:	
  2547 ;; *************** function _my_isr_routine *****************
  2548 ;; Defined at:
  2549 ;;		line 40 in file "main.c"
  2550 ;; Parameters:    Size  Location     Type
  2551 ;;		None
  2552 ;; Auto vars:     Size  Location     Type
  2553 ;;		None
  2554 ;; Return value:  Size  Location     Type
  2555 ;;                  1    wreg      void 
  2556 ;; Registers used:
  2557 ;;		wreg, status,2, status,0
  2558 ;; Tracked objects:
  2559 ;;		On entry : 0/0
  2560 ;;		On exit  : 0/0
  2561 ;;		Unchanged: 0/0
  2562 ;; Data sizes:     COMMON   BANK0   BANK1
  2563 ;;      Params:         0       0       0
  2564 ;;      Locals:         0       0       0
  2565 ;;      Temps:          6       0       0
  2566 ;;      Totals:         6       0       0
  2567 ;;Total ram usage:        6 bytes
  2568 ;; Hardware stack levels used: 1
  2569 ;; This function calls:
  2570 ;;		Nothing
  2571 ;; This function is called by:
  2572 ;;		Interrupt level 1
  2573 ;; This function uses a non-reentrant model
  2574 ;;
  2575                           
  2576                           
  2577                           ;psect for function _my_isr_routine
  2578  020B                     _my_isr_routine:
  2579  020B                     i1l1466:
  2580                           
  2581                           ;main.c: 43:     if(T0IF)
  2582  020B  1D0B               	btfss	11,2	;volatile
  2583  020C  2A0E               	goto	u88_21
  2584  020D  2A0F               	goto	u88_20
  2585  020E                     u88_21:
  2586  020E  2A22               	goto	i1l1472
  2587  020F                     u88_20:
  2588  020F                     i1l1468:
  2589                           
  2590                           ;main.c: 44:     {;main.c: 45:         T0IF = 0;
  2591  020F  110B               	bcf	11,2	;volatile
  2592  0210                     i1l1470:
  2593                           
  2594                           ;main.c: 46:         TMR0 = 133;
  2595  0210  3085               	movlw	133
  2596  0211  1283               	bcf	3,5	;RP0=0, select bank0
  2597  0212  1303               	bcf	3,6	;RP1=0, select bank0
  2598  0213  0081               	movwf	1	;volatile
  2599                           
  2600                           ;main.c: 47:         uiCounterms++;
  2601  0214  3001               	movlw	1
  2602  0215  07BB               	addwf	_uiCounterms,f
  2603  0216  3000               	movlw	0
  2604  0217  1803               	skipnc
  2605  0218  3001               	movlw	1
  2606  0219  07BC               	addwf	_uiCounterms+1,f
  2607  021A  3000               	movlw	0
  2608  021B  1803               	skipnc
  2609  021C  3001               	movlw	1
  2610  021D  07BD               	addwf	_uiCounterms+2,f
  2611  021E  3000               	movlw	0
  2612  021F  1803               	skipnc
  2613  0220  3001               	movlw	1
  2614  0221  07BE               	addwf	_uiCounterms+3,f
  2615  0222                     i1l1472:
  2616                           
  2617                           ;main.c: 52:     if(RABIF){
  2618  0222  1C0B               	btfss	11,0	;volatile
  2619  0223  2A25               	goto	u89_21
  2620  0224  2A26               	goto	u89_20
  2621  0225                     u89_21:
  2622  0225  2AA1               	goto	i1l42
  2623  0226                     u89_20:
  2624  0226                     i1l1474:
  2625                           
  2626                           ;main.c: 54:         if(uiCounterms - uiButtonDebounce > 19){
  2627  0226  1283               	bcf	3,5	;RP0=0, select bank0
  2628  0227  1303               	bcf	3,6	;RP1=0, select bank0
  2629  0228  083B               	movf	_uiCounterms,w
  2630  0229  00F0               	movwf	??_my_isr_routine
  2631  022A  083C               	movf	_uiCounterms+1,w
  2632  022B  00F1               	movwf	??_my_isr_routine+1
  2633  022C  083D               	movf	_uiCounterms+2,w
  2634  022D  00F2               	movwf	??_my_isr_routine+2
  2635  022E  083E               	movf	_uiCounterms+3,w
  2636  022F  00F3               	movwf	??_my_isr_routine+3
  2637  0230  0876               	movf	_uiButtonDebounce,w
  2638  0231  02F0               	subwf	??_my_isr_routine,f
  2639  0232  0877               	movf	_uiButtonDebounce+1,w
  2640  0233  1C03               	skipc
  2641  0234  0F77               	incfsz	_uiButtonDebounce+1,w
  2642  0235  2A37               	goto	u90_21
  2643  0236  2A38               	goto	u90_22
  2644  0237                     u90_21:
  2645  0237  02F1               	subwf	??_my_isr_routine+1,f
  2646  0238                     u90_22:
  2647  0238  0878               	movf	_uiButtonDebounce+2,w
  2648  0239  1C03               	skipc
  2649  023A  0F78               	incfsz	_uiButtonDebounce+2,w
  2650  023B  2A3D               	goto	u90_23
  2651  023C  2A3E               	goto	u90_24
  2652  023D                     u90_23:
  2653  023D  02F2               	subwf	??_my_isr_routine+2,f
  2654  023E                     u90_24:
  2655  023E  0879               	movf	_uiButtonDebounce+3,w
  2656  023F  1C03               	skipc
  2657  0240  0F79               	incfsz	_uiButtonDebounce+3,w
  2658  0241  2A43               	goto	u90_25
  2659  0242  2A44               	goto	u90_26
  2660  0243                     u90_25:
  2661  0243  02F3               	subwf	??_my_isr_routine+3,f
  2662  0244                     u90_26:
  2663  0244  0873               	movf	??_my_isr_routine+3,w
  2664  0245  1D03               	btfss	3,2
  2665  0246  2A55               	goto	u91_20
  2666  0247  0872               	movf	??_my_isr_routine+2,w
  2667  0248  1D03               	btfss	3,2
  2668  0249  2A55               	goto	u91_20
  2669  024A  0871               	movf	??_my_isr_routine+1,w
  2670  024B  1D03               	btfss	3,2
  2671  024C  2A55               	goto	u91_20
  2672  024D  3014               	movlw	20
  2673  024E  0270               	subwf	??_my_isr_routine,w
  2674  024F  1D03               	skipz
  2675  0250  2A51               	goto	u91_23
  2676  0251                     u91_23:
  2677  0251  1C03               	btfss	3,0
  2678  0252  2A54               	goto	u91_21
  2679  0253  2A55               	goto	u91_20
  2680  0254                     u91_21:
  2681  0254  2AA0               	goto	i1l1480
  2682  0255                     u91_20:
  2683  0255                     i1l1476:
  2684                           
  2685                           ;main.c: 56:             readButtonStatus[0] = (PORTB & (1<<4))>>4;
  2686  0255  1283               	bcf	3,5	;RP0=0, select bank0
  2687  0256  1303               	bcf	3,6	;RP1=0, select bank0
  2688  0257  0806               	movf	6,w	;volatile
  2689  0258  00F0               	movwf	??_my_isr_routine
  2690  0259  3004               	movlw	4
  2691  025A                     u92_25:
  2692  025A  1003               	clrc
  2693  025B  0CF0               	rrf	??_my_isr_routine,f
  2694  025C  3EFF               	addlw	-1
  2695  025D  1D03               	skipz
  2696  025E  2A5A               	goto	u92_25
  2697  025F  0870               	movf	??_my_isr_routine,w
  2698  0260  3901               	andlw	1
  2699  0261  00F1               	movwf	??_my_isr_routine+1
  2700  0262  0871               	movf	??_my_isr_routine+1,w
  2701  0263  00CD               	movwf	_readButtonStatus
  2702                           
  2703                           ;main.c: 57:             readButtonStatus[1] = (PORTB & (1<<6))>>6;
  2704  0264  0806               	movf	6,w	;volatile
  2705  0265  00F0               	movwf	??_my_isr_routine
  2706  0266  3006               	movlw	6
  2707  0267                     u93_25:
  2708  0267  1003               	clrc
  2709  0268  0CF0               	rrf	??_my_isr_routine,f
  2710  0269  3EFF               	addlw	-1
  2711  026A  1D03               	skipz
  2712  026B  2A67               	goto	u93_25
  2713  026C  0870               	movf	??_my_isr_routine,w
  2714  026D  3901               	andlw	1
  2715  026E  00F1               	movwf	??_my_isr_routine+1
  2716  026F  0871               	movf	??_my_isr_routine+1,w
  2717  0270  00CE               	movwf	_readButtonStatus+1
  2718                           
  2719                           ;main.c: 58:             readButtonStatus[2] = (PORTB & (1<<7))>>7;
  2720  0271  0806               	movf	6,w	;volatile
  2721  0272  00F0               	movwf	??_my_isr_routine
  2722  0273  3007               	movlw	7
  2723  0274                     u94_25:
  2724  0274  1003               	clrc
  2725  0275  0CF0               	rrf	??_my_isr_routine,f
  2726  0276  3EFF               	addlw	-1
  2727  0277  1D03               	skipz
  2728  0278  2A74               	goto	u94_25
  2729  0279  0870               	movf	??_my_isr_routine,w
  2730  027A  3901               	andlw	1
  2731  027B  00F1               	movwf	??_my_isr_routine+1
  2732  027C  0871               	movf	??_my_isr_routine+1,w
  2733  027D  00CF               	movwf	_readButtonStatus+2
  2734                           
  2735                           ;main.c: 59:             readButtonStatus[3] = (PORTA & (1<<4))>>4;
  2736  027E  0805               	movf	5,w	;volatile
  2737  027F  00F0               	movwf	??_my_isr_routine
  2738  0280  3004               	movlw	4
  2739  0281                     u95_25:
  2740  0281  1003               	clrc
  2741  0282  0CF0               	rrf	??_my_isr_routine,f
  2742  0283  3EFF               	addlw	-1
  2743  0284  1D03               	skipz
  2744  0285  2A81               	goto	u95_25
  2745  0286  0870               	movf	??_my_isr_routine,w
  2746  0287  3901               	andlw	1
  2747  0288  00F1               	movwf	??_my_isr_routine+1
  2748  0289  0871               	movf	??_my_isr_routine+1,w
  2749  028A  00D0               	movwf	_readButtonStatus+3
  2750                           
  2751                           ;main.c: 60:             readButtonStatus[4] = (PORTB & (1<<5))>>5;
  2752  028B  0806               	movf	6,w	;volatile
  2753  028C  00F0               	movwf	??_my_isr_routine
  2754  028D  3005               	movlw	5
  2755  028E                     u96_25:
  2756  028E  1003               	clrc
  2757  028F  0CF0               	rrf	??_my_isr_routine,f
  2758  0290  3EFF               	addlw	-1
  2759  0291  1D03               	skipz
  2760  0292  2A8E               	goto	u96_25
  2761  0293  0870               	movf	??_my_isr_routine,w
  2762  0294  3901               	andlw	1
  2763  0295  00F1               	movwf	??_my_isr_routine+1
  2764  0296  0871               	movf	??_my_isr_routine+1,w
  2765  0297  00D1               	movwf	_readButtonStatus+4
  2766  0298                     i1l1478:
  2767                           
  2768                           ;main.c: 63:             uiButtonDebounce = uiCounterms;
  2769  0298  083E               	movf	_uiCounterms+3,w
  2770  0299  00F9               	movwf	_uiButtonDebounce+3
  2771  029A  083D               	movf	_uiCounterms+2,w
  2772  029B  00F8               	movwf	_uiButtonDebounce+2
  2773  029C  083C               	movf	_uiCounterms+1,w
  2774  029D  00F7               	movwf	_uiButtonDebounce+1
  2775  029E  083B               	movf	_uiCounterms,w
  2776  029F  00F6               	movwf	_uiButtonDebounce
  2777  02A0                     i1l1480:
  2778                           
  2779                           ;main.c: 66:         RABIF = 0;
  2780  02A0  100B               	bcf	11,0	;volatile
  2781  02A1                     i1l42:
  2782  02A1  0875               	movf	??_my_isr_routine+5,w
  2783  02A2  008A               	movwf	10
  2784  02A3  0E74               	swapf	??_my_isr_routine+4,w
  2785  02A4  0083               	movwf	3
  2786  02A5  0EFE               	swapf	btemp,f
  2787  02A6  0E7E               	swapf	btemp,w
  2788  02A7  0009               	retfie
  2789  02A8                     __end_of_my_isr_routine:
  2790  007E                     btemp	set	126	;btemp
  2791  007E                     wtemp0	set	126
  2792                           
  2793                           	psect	intentry
  2794  0004                     __pintentry:	
  2795                           ;incstack = 0
  2796                           ; Regs used in _my_isr_routine: [wreg+status,2+status,0]
  2797                           
  2798  0004                     interrupt_function:
  2799  007E                     saved_w	set	btemp
  2800  0004  00FE               	movwf	btemp
  2801  0005  0E03               	swapf	3,w
  2802  0006  00F4               	movwf	??_my_isr_routine+4
  2803  0007  080A               	movf	10,w
  2804  0008  00F5               	movwf	??_my_isr_routine+5
  2805  0009  2A0B               	ljmp	_my_isr_routine
  2806                           
  2807                           	psect	config
  2808                           
  2809                           ;Config register CONFIG @ 0x2007
  2810                           ;	Oscillator Selection bits
  2811                           ;	FOSC = INTRCIO, INTOSCIO oscillator: I/O function on RA4/OSC2/CLKOUT pin, I/O function
      +                           on RA5/OSC1/CLKIN
  2812                           ;	Watchdog Timer Enable bit
  2813                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2814                           ;	Power-up Timer Enable bit
  2815                           ;	PWRTE = OFF, PWRT disabled
  2816                           ;	MCLR Pin Function Select bit
  2817                           ;	MCLRE = OFF, MCLR pin function is digital input, MCLR internally tied to VDD
  2818                           ;	Code Protection bit
  2819                           ;	CP = OFF, Program memory code protection is disabled
  2820                           ;	Data Code Protection bit
  2821                           ;	CPD = OFF, Data memory code protection is disabled
  2822                           ;	Brown-out Reset Selection bits
  2823                           ;	BOREN = OFF, BOR disabled
  2824                           ;	Internal External Switchover bit
  2825                           ;	IESO = ON, Internal External Switchover mode is enabled
  2826                           ;	Fail-Safe Clock Monitor Enabled bit
  2827                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2828  2007                     	org	8199
  2829  2007  34D4               	dw	13524

Data Sizes:
    Strings     0
    Constant    0
    Data        6
    BSS         37
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      11
    BANK0            80     12      50
    BANK1            32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _my_isr_routine in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_shiftDisplays
    _writeCharOnDisplay->___bmul
    _shiftDisplays->_clearPin
    _shiftDisplays->_setPin
    _setPin->___bmul
    _clearPin->___bmul

Critical Paths under _my_isr_routine in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _my_isr_routine in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    3774
                                             11 BANK0      1     1      0
                            ___llmod
                        _configBoard
                        _initButtons
                        _initDisplay
                      _shiftDisplays
                 _writeCharOnDisplay
 ---------------------------------------------------------------------------------
 (1) _writeCharOnDisplay                                   4     3      1    1975
                                              4 BANK0      4     3      1
                             ___bmul
 ---------------------------------------------------------------------------------
 (1) _shiftDisplays                                        3     3      0    1387
                                              8 BANK0      3     3      0
                             ___bmul
                           _clearPin
                             _setPin
 ---------------------------------------------------------------------------------
 (2) _setPin                                               4     3      1     328
                                              4 BANK0      4     3      1
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _clearPin                                             4     3      1     328
                                              4 BANK0      4     3      1
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     731
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _initDisplay                                          1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _initButtons                                          1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _configBoard                                          1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) ___llmod                                             10     2      8     412
                                              0 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _my_isr_routine                                       6     6      0       0
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___llmod
   _configBoard
   _initButtons
   _initDisplay
   _shiftDisplays
     ___bmul
     _clearPin
       ___bmul (ARG)
     _setPin
       ___bmul (ARG)
   _writeCharOnDisplay
     ___bmul

 _my_isr_routine (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               20      0       0       6        0.0%
BITBANK1            20      0       0       5        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      C      32       4       62.5%
BITBANK0            50      0       0       3        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      3D       8        0.0%
ABS                  0      0      3D       7        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Nov 19 14:59:03 2021

               ___bmul@product 0043                             l50 017A                             l53 019E  
                           l47 0136                             l56 01C2                             l59 01E6  
                           fsr 0004                            l210 0474                            l322 04B5  
                          l154 0372                            l139 03CC                            l180 04CB  
                          l183 049E                            l193 0117                            l189 0315  
                          l518 0422                            _GIE 005F                            _PS0 0408  
                          _PS1 0409                            _PS2 040A                            u700 0320  
                          u701 031F                            u630 037D                            u631 037C  
                          u720 0335                            u721 0334                            u730 033B  
                          u714 0326                            u650 0391                            u731 033A  
                          u715 0324                            u651 0390                            u660 0397  
                          u644 0383                            u661 0396                            u645 0381  
                          u750 0350                            u751 034F                            _PSA 040B  
                          u744 0341                            u680 03AB                            u745 033F  
                          u681 03AA                            u674 039D                            u675 039B  
                          u764 0356                            u765 0354                            u694 03B1  
                          u695 03AF                 clearPin@ucPort 0045                            fsr0 0004  
                          indf 0000                           l1220 0376                           l1230 0397  
                         l1222 0377                           l1232 03A5                           l1224 037D  
                         l1240 03B9                           l1250 031A                           l1234 03AB  
                         l1226 038B                           l1260 034A                           l1252 0320  
                         l1228 0391                           l1262 0350                           l1254 032F  
                         l1256 0335                           l1248 0319                           l1258 033B  
                         l1700 0466                           l1268 035F                           l1710 0470  
                         l1702 0469                           l1704 046A                           l1720 04C2  
                         l1712 04B6                           l1640 04A7                           l1800 0306  
                         l1810 03DA                           l1706 046B                           l1650 0423  
                         l1730 047B                           l1722 04C4                           l1714 04BC  
                         l1642 04AB                           l1802 030E                           l1820 0414  
                         l1812 03E7                           l1708 046C                           l1660 0443  
                         l1652 0426                           l1740 048D                           l1732 047D  
                         l1724 04C5                           l1716 04C0                           l1644 04AD  
                         l1636 04A2                           l1804 0312                           l1814 03EB  
                         l1822 041A                           l1806 03CD                           l1670 0450  
                         l1662 0447                           l1654 042E                           l1750 049C  
                         l1742 0493                           l1734 0483                           l1726 04C6  
                         l1718 04C1                           l1646 04B4                           l1638 04A3  
                         l1830 0120                           l1816 03FD                           l1808 03D7  
                         l1680 0457                           l1672 0451                           l1664 0449  
                         l1656 043F                           l1744 0494                           l1736 0485  
                         l1728 0475                           l1760 004C                           l1752 0025  
                         l1840 015C                           l1832 0126                           l1818 040B  
                         l1690 045F                           l1682 0458                           l1674 0454  
                         l1666 044A                           l1658 0442                           l1746 0496  
                         l1738 048B                           l1770 009C                           l1762 005C  
                         l1842 0161                           l1834 012E                           l1826 0118  
                         l1692 0460                           l1684 0459                           l1676 0455  
                         l1668 044E                           l1748 049A                           l1772 00AC  
                         l1764 006C                           l1756 002C                           l1860 0198  
                         l1852 0180                           l1844 0167                           l1836 0153  
                         l1828 011B                           l1694 0461                           l1686 045D  
                         l1678 0456                           l1790 02C4                           l1774 00BC  
                         l1766 007C                           l1758 003C                           l1782 00EC  
                         l1870 01B6                           l1854 0185                           l1846 016E  
                         l1838 0154                           l1696 0462                           l1688 045E  
                         l1792 02CC                           l1776 00CC                           l1768 008C  
                         l1880 01D3                           l1872 01BC                           l1864 01A4  
                         l1856 018B                           l1848 0174                           l1698 0463  
                         l1794 02D9                           l1778 00DC                           l1890 01F1  
                         l1882 01DA                           l1866 01A9                           l1858 0192  
                         l1796 02DD                           l1788 02A8                           l1980 00F4  
                         l1892 01F7                           l1884 01E0                           l1876 01C8  
                         l1868 01AF                           l1982 03C1                           l1798 02EC  
                         l1894 01FE                           l1878 01CD                           l1984 0367  
                         l1896 0204                           l1888 01EC                           _T0IE 005D  
                         _T0IF 005A                           _T0CS 040D                           u1200 002B  
                         u1201 002A                           u1210 02D9                           u1211 02D8  
                         u1220 030E                           u1300 015C                           u1221 030D  
                         u1301 015B                           u1230 03D7                           u1310 0161  
                         u1231 03D6                           u1215 02D5                           u1311 0160  
                         u1400 01BC                           u1320 0174                           u1401 01BB  
                         u1321 0173                           u1250 03EB                           u1410 01C1  
                         u1330 0179                           u1251 03EA                           u1411 01C0  
                         u1331 0178                           _IOCA 0096                           u1260 03FD  
                         u1180 04A7                           u1420 01C8                           u1340 0180  
                         _IOCB 0116                           u1261 03FC                           u1245 03DC  
                         u1181 04A6                           u1421 01C7                           u1341 017F  
                         u1190 04B4                           u1430 01CD                           u1350 0185  
                         u1191 04B3                           u1431 01CC                           u1351 0184  
                         u1280 041A                           u1440 01E0                           u1360 0198  
                         u1281 0419                           u1265 03F9                           u1441 01DF  
                         u1361 0197                           u1450 01E5                           u1370 019D  
                         u1290 0153                           u1275 040C                           u1451 01E4  
                         u1371 019C                           u1291 0152                           u1460 01EC  
                         u1380 01A4                           u1461 01EB                           u1381 01A3  
                         u1470 01F1                           u1390 01A9                           u1471 01F0  
                         u1391 01A8                           u1480 0204                           u1481 0203  
                         u1490 0209                           u1491 0208                           _PEIE 005E  
                         i1l42 02A1                           _TMR0 0001                           _main 0118  
                         btemp 007E                           start 000A              ___bmul@multiplier 0044  
                 ?_initDisplay 0070                   ?_initButtons 0070               _readButtonStatus 004D  
                        ?_main 0070                          _ANSEL 011E                __end_of___llmod 0423  
                        _RABIE 005B                          _RABIF 0058                          _PORTA 0005  
                        _PORTB 0006                          _PORTC 0007                          _TRISA 0085  
                        _TRISB 0086                          _TRISC 0087                          u90_21 0237  
                        u90_22 0238                          u90_23 023D                          u90_24 023E  
                        u90_25 0243                          u90_26 0244                          u91_20 0255  
                        u91_21 0254                          u91_23 0251                          u92_25 025A  
                        _WPUA4 04AC                          _WPUB4 08AC                          u93_25 0267  
                        _WPUB5 08AD                          _WPUB6 08AE                          _WPUB7 08AF  
                        u94_25 0274                          u95_25 0281                          u88_20 020F  
                        u88_21 020E                          u96_25 028E                          u89_20 0226  
                        u89_21 0225                  _indiceDisplay 003F                          pclath 000A  
                        status 0003     __end_of_writeCharOnDisplay 0118                          wtemp0 007E  
              __initialization 000B                   __end_of_main 020B                         ??_main 004C  
             ___llmod@dividend 0045                         _ANSELH 011F                         i1l1470 0210  
                       i1l1480 02A0                         i1l1472 0222                         i1l1474 0226  
                       i1l1466 020B                         i1l1476 0255                         i1l1468 020F  
                       i1l1478 0298                         _OSCCON 008F               __end_of_clearPin 0373  
                       _Botoes 0020                         _nRABPU 040F           __size_of_configBoard 0052  
                       ___bmul 049F          __end_of_shiftDisplays 0316                      ??___llmod 0049  
                       _setPin 0373                   __pdataCOMMON 007A                         saved_w 007E  
      __end_of__initialization 0020               _uiButtonDebounce 0076            ___bmul@multiplicand 0041  
               __pcstackCOMMON 0070                   __pidataBANK0 04D4           __size_of_initDisplay 0016  
         __size_of_initButtons 002A                     __pbssBANK0 0020                     __pmaintext 0118  
                      ?___bmul 0041                     __pintentry 0004                        ?_setPin 0045  
                  setPin@ucPin 0048                      ?_clearPin 0045        __size_of_my_isr_routine 009D  
              __size_of___bmul 0017                        ___llmod 03CD             _writeCharOnDisplay 0022  
              __size_of_setPin 005A                        __ptext1 0022                        __ptext2 02A8  
                      __ptext3 0373                        __ptext4 0316                        __ptext5 049F  
                      __ptext6 04B6                        __ptext7 0475                        __ptext8 0423  
                      __ptext9 03CD            ?_writeCharOnDisplay 0045                     ??_clearPin 0046  
                      clrloop0 04CD           end_of_initialization 0020           ??_writeCharOnDisplay 0046  
writeCharOnDisplay@ucCharacter 0048             _deviceCurrentState 007A                  clearPin@ucPin 0048  
                ??_configBoard 0041                 __end_of___bmul 04B6                  __pidataCOMMON 04D9  
               __end_of_setPin 03CD            start_initialization 000B                 _my_isr_routine 020B  
       __size_of_shiftDisplays 006E                ___llmod@divisor 0041                ___llmod@counter 004A  
                ??_initDisplay 0041                       ??___bmul 0042                  ??_initButtons 0041  
          __end_of_configBoard 0475                    __pdataBANK0 004D                       ??_setPin 0046  
                  __pbssCOMMON 0076                      ___latbits 0000                  __pcstackBANK0 0041  
       __end_of_my_isr_routine 02A8              __size_of_clearPin 005D                       ?___llmod 0041  
                _shiftDisplays 02A8            __end_of_initDisplay 04CC            __end_of_initButtons 049F  
              ?_my_isr_routine 0070                   setPin@ucPort 0045              interrupt_function 0004  
                  _configBoard 0423                      clear_ram0 04CC                 ?_shiftDisplays 0070  
  __size_of_writeCharOnDisplay 00F6                    _initDisplay 04B6                    _initButtons 0475  
             __size_of___llmod 0056        _Display7seg4digitsVetor 002F                       _clearPin 0316  
                     __ptext10 020B                    _uiCounterms 003B                  __size_of_main 00F3  
              ??_shiftDisplays 0049    writeCharOnDisplay@ucDisplay 0045                       intlevel1 0000  
             ??_my_isr_routine 0070                   ?_configBoard 0070  



Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Nov 18 10:46:17 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F687
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    22                           	dabs	1,0x7E,2
    23  0000                     
    24                           ; Version 2.20
    25                           ; Generated 12/02/2020 GMT
    26                           ; 
    27                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F687 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     	;# 
    59  0001                     	;# 
    60  0002                     	;# 
    61  0003                     	;# 
    62  0004                     	;# 
    63  0005                     	;# 
    64  0006                     	;# 
    65  0007                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  000E                     	;# 
    72  000F                     	;# 
    73  0010                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001E                     	;# 
    80  001F                     	;# 
    81  0081                     	;# 
    82  0085                     	;# 
    83  0086                     	;# 
    84  0087                     	;# 
    85  008C                     	;# 
    86  008D                     	;# 
    87  008E                     	;# 
    88  008F                     	;# 
    89  0090                     	;# 
    90  0093                     	;# 
    91  0093                     	;# 
    92  0093                     	;# 
    93  0094                     	;# 
    94  0095                     	;# 
    95  0095                     	;# 
    96  0096                     	;# 
    97  0096                     	;# 
    98  0097                     	;# 
    99  0098                     	;# 
   100  0099                     	;# 
   101  009A                     	;# 
   102  009B                     	;# 
   103  009E                     	;# 
   104  009F                     	;# 
   105  010C                     	;# 
   106  010C                     	;# 
   107  010D                     	;# 
   108  0115                     	;# 
   109  0116                     	;# 
   110  0118                     	;# 
   111  0119                     	;# 
   112  011A                     	;# 
   113  011B                     	;# 
   114  011E                     	;# 
   115  011F                     	;# 
   116  018C                     	;# 
   117  018D                     	;# 
   118  019E                     	;# 
   119  0000                     	;# 
   120  0001                     	;# 
   121  0002                     	;# 
   122  0003                     	;# 
   123  0004                     	;# 
   124  0005                     	;# 
   125  0006                     	;# 
   126  0007                     	;# 
   127  000A                     	;# 
   128  000B                     	;# 
   129  000C                     	;# 
   130  000D                     	;# 
   131  000E                     	;# 
   132  000E                     	;# 
   133  000F                     	;# 
   134  0010                     	;# 
   135  0013                     	;# 
   136  0014                     	;# 
   137  0018                     	;# 
   138  0019                     	;# 
   139  001A                     	;# 
   140  001E                     	;# 
   141  001F                     	;# 
   142  0081                     	;# 
   143  0085                     	;# 
   144  0086                     	;# 
   145  0087                     	;# 
   146  008C                     	;# 
   147  008D                     	;# 
   148  008E                     	;# 
   149  008F                     	;# 
   150  0090                     	;# 
   151  0093                     	;# 
   152  0093                     	;# 
   153  0093                     	;# 
   154  0094                     	;# 
   155  0095                     	;# 
   156  0095                     	;# 
   157  0096                     	;# 
   158  0096                     	;# 
   159  0097                     	;# 
   160  0098                     	;# 
   161  0099                     	;# 
   162  009A                     	;# 
   163  009B                     	;# 
   164  009E                     	;# 
   165  009F                     	;# 
   166  010C                     	;# 
   167  010C                     	;# 
   168  010D                     	;# 
   169  0115                     	;# 
   170  0116                     	;# 
   171  0118                     	;# 
   172  0119                     	;# 
   173  011A                     	;# 
   174  011B                     	;# 
   175  011E                     	;# 
   176  011F                     	;# 
   177  018C                     	;# 
   178  018D                     	;# 
   179  019E                     	;# 
   180  0000                     	;# 
   181  0001                     	;# 
   182  0002                     	;# 
   183  0003                     	;# 
   184  0004                     	;# 
   185  0005                     	;# 
   186  0006                     	;# 
   187  0007                     	;# 
   188  000A                     	;# 
   189  000B                     	;# 
   190  000C                     	;# 
   191  000D                     	;# 
   192  000E                     	;# 
   193  000E                     	;# 
   194  000F                     	;# 
   195  0010                     	;# 
   196  0013                     	;# 
   197  0014                     	;# 
   198  0018                     	;# 
   199  0019                     	;# 
   200  001A                     	;# 
   201  001E                     	;# 
   202  001F                     	;# 
   203  0081                     	;# 
   204  0085                     	;# 
   205  0086                     	;# 
   206  0087                     	;# 
   207  008C                     	;# 
   208  008D                     	;# 
   209  008E                     	;# 
   210  008F                     	;# 
   211  0090                     	;# 
   212  0093                     	;# 
   213  0093                     	;# 
   214  0093                     	;# 
   215  0094                     	;# 
   216  0095                     	;# 
   217  0095                     	;# 
   218  0096                     	;# 
   219  0096                     	;# 
   220  0097                     	;# 
   221  0098                     	;# 
   222  0099                     	;# 
   223  009A                     	;# 
   224  009B                     	;# 
   225  009E                     	;# 
   226  009F                     	;# 
   227  010C                     	;# 
   228  010C                     	;# 
   229  010D                     	;# 
   230  0115                     	;# 
   231  0116                     	;# 
   232  0118                     	;# 
   233  0119                     	;# 
   234  011A                     	;# 
   235  011B                     	;# 
   236  011E                     	;# 
   237  011F                     	;# 
   238  018C                     	;# 
   239  018D                     	;# 
   240  019E                     	;# 
   241                           
   242                           	psect	nvBANK0
   243  0049                     __pnvBANK0:
   244  0049                     _Display7seg4digitsVetor:
   245  0049                     	ds	1
   246  0007                     _PORTC	set	7
   247  0005                     _PORTA	set	5
   248  0006                     _PORTB	set	6
   249  0001                     _TMR0	set	1
   250  005C                     _INTE	set	92
   251  005D                     _T0IE	set	93
   252  005E                     _PEIE	set	94
   253  005F                     _GIE	set	95
   254  005A                     _T0IF	set	90
   255  0087                     _TRISC	set	135
   256  0086                     _TRISB	set	134
   257  0085                     _TRISA	set	133
   258  0081                     _OPTION_REG	set	129
   259  008F                     _OSCCON	set	143
   260                           
   261                           	psect	cinit
   262  0011                     start_initialization:	
   263                           ; #config settings
   264                           
   265  0011                     __initialization:
   266                           
   267                           ; Clear objects allocated to BANK0
   268  0011  1283               	bcf	3,5	;RP0=0, select bank0
   269  0012  1303               	bcf	3,6	;RP1=0, select bank0
   270  0013  01C3               	clrf	__pbssBANK0& (0+127)
   271  0014  01C4               	clrf	(__pbssBANK0+1)& (0+127)
   272  0015  01C5               	clrf	(__pbssBANK0+2)& (0+127)
   273  0016  01C6               	clrf	(__pbssBANK0+3)& (0+127)
   274  0017  01C7               	clrf	(__pbssBANK0+4)& (0+127)
   275  0018  01C8               	clrf	(__pbssBANK0+5)& (0+127)
   276  0019                     end_of_initialization:	
   277                           ;End of C runtime variable initialization code
   278                           
   279  0019                     __end_of__initialization:
   280  0019  0183               	clrf	3
   281  001A  2BD7               	ljmp	_main	;jump to C main() function
   282                           
   283                           	psect	bssBANK0
   284  0043                     __pbssBANK0:
   285  0043                     _uiCounterms:
   286  0043                     	ds	4
   287  0047                     _indiceDisplay:
   288  0047                     	ds	2
   289                           
   290                           	psect	cstackCOMMON
   291  0070                     __pcstackCOMMON:
   292  0070                     ?_shiftDisplays:
   293  0070                     ?_configBoard:	
   294                           ; 1 bytes @ 0x0
   295                           
   296  0070                     ?_initDisplay:	
   297                           ; 1 bytes @ 0x0
   298                           
   299  0070                     ?_my_isr_routine:	
   300                           ; 1 bytes @ 0x0
   301                           
   302  0070                     ?_main:	
   303                           ; 1 bytes @ 0x0
   304                           
   305  0070                     ?i1___bmul:	
   306                           ; 1 bytes @ 0x0
   307                           
   308  0070                     ?___llmod:	
   309                           ; 1 bytes @ 0x0
   310                           
   311  0070                     i1___bmul@multiplicand:	
   312                           ; 4 bytes @ 0x0
   313                           
   314  0070                     ___llmod@divisor:	
   315                           ; 1 bytes @ 0x0
   316                           
   317                           
   318                           ; 4 bytes @ 0x0
   319  0070                     	ds	1
   320  0071                     ??i1___bmul:
   321                           
   322                           ; 1 bytes @ 0x1
   323  0071                     	ds	1
   324  0072                     i1___bmul@product:
   325                           
   326                           ; 1 bytes @ 0x2
   327  0072                     	ds	1
   328  0073                     i1___bmul@multiplier:
   329                           
   330                           ; 1 bytes @ 0x3
   331  0073                     	ds	1
   332  0074                     ?_setPin:
   333  0074                     ?_clearPin:	
   334                           ; 1 bytes @ 0x4
   335                           
   336  0074                     setPin@iPin:	
   337                           ; 1 bytes @ 0x4
   338                           
   339  0074                     clearPin@iPin:	
   340                           ; 2 bytes @ 0x4
   341                           
   342  0074                     ___llmod@dividend:	
   343                           ; 2 bytes @ 0x4
   344                           
   345                           
   346                           ; 4 bytes @ 0x4
   347  0074                     	ds	2
   348  0076                     setPin@iPort:
   349  0076                     clearPin@iPort:	
   350                           ; 2 bytes @ 0x6
   351                           
   352                           
   353                           ; 2 bytes @ 0x6
   354  0076                     	ds	2
   355  0078                     ??_setPin:
   356  0078                     ??_clearPin:	
   357                           ; 1 bytes @ 0x8
   358                           
   359  0078                     ??___llmod:	
   360                           ; 1 bytes @ 0x8
   361                           
   362                           
   363                           ; 1 bytes @ 0x8
   364  0078                     	ds	1
   365  0079                     ___llmod@counter:
   366                           
   367                           ; 1 bytes @ 0x9
   368  0079                     	ds	1
   369  007A                     ??_shiftDisplays:
   370                           
   371                           ; 1 bytes @ 0xA
   372  007A                     	ds	4
   373                           
   374                           	psect	cstackBANK0
   375  0020                     __pcstackBANK0:
   376  0020                     ??_my_isr_routine:
   377                           
   378                           ; 1 bytes @ 0x0
   379  0020                     	ds	4
   380  0024                     ??_configBoard:
   381  0024                     ??_initDisplay:	
   382                           ; 1 bytes @ 0x4
   383                           
   384  0024                     ?___bmul:	
   385                           ; 1 bytes @ 0x4
   386                           
   387  0024                     ___bmul@multiplicand:	
   388                           ; 1 bytes @ 0x4
   389                           
   390                           
   391                           ; 1 bytes @ 0x4
   392  0024                     	ds	1
   393  0025                     ??___bmul:
   394                           
   395                           ; 1 bytes @ 0x5
   396  0025                     	ds	1
   397  0026                     ___bmul@product:
   398                           
   399                           ; 1 bytes @ 0x6
   400  0026                     	ds	1
   401  0027                     ___bmul@multiplier:
   402                           
   403                           ; 1 bytes @ 0x7
   404  0027                     	ds	1
   405  0028                     ?_writeCharOnDisplay:
   406  0028                     writeCharOnDisplay@iDisplay:	
   407                           ; 1 bytes @ 0x8
   408                           
   409                           
   410                           ; 2 bytes @ 0x8
   411  0028                     	ds	2
   412  002A                     ??_writeCharOnDisplay:
   413                           
   414                           ; 1 bytes @ 0xA
   415  002A                     	ds	3
   416  002D                     writeCharOnDisplay@chCharacter:
   417                           
   418                           ; 1 bytes @ 0xD
   419  002D                     	ds	1
   420  002E                     ??_main:
   421                           
   422                           ; 1 bytes @ 0xE
   423  002E                     	ds	1
   424  002F                     main@display7seg:
   425                           
   426                           ; 20 bytes @ 0xF
   427  002F                     	ds	20
   428                           
   429                           	psect	maintext
   430  03D7                     __pmaintext:	
   431 ;;
   432 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   433 ;;
   434 ;; *************** function _main *****************
   435 ;; Defined at:
   436 ;;		line 52 in file "main.c"
   437 ;; Parameters:    Size  Location     Type
   438 ;;		None
   439 ;; Auto vars:     Size  Location     Type
   440 ;;  display7seg    20   15[BANK0 ] struct Display[4]
   441 ;; Return value:  Size  Location     Type
   442 ;;                  1    wreg      void 
   443 ;; Registers used:
   444 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   445 ;; Tracked objects:
   446 ;;		On entry : B00/0
   447 ;;		On exit  : 0/0
   448 ;;		Unchanged: 0/0
   449 ;; Data sizes:     COMMON   BANK0   BANK1
   450 ;;      Params:         0       0       0
   451 ;;      Locals:         0      20       0
   452 ;;      Temps:          0       1       0
   453 ;;      Totals:         0      21       0
   454 ;;Total ram usage:       21 bytes
   455 ;; Hardware stack levels required when called: 5
   456 ;; This function calls:
   457 ;;		_configBoard
   458 ;;		_initDisplay
   459 ;;		_writeCharOnDisplay
   460 ;; This function is called by:
   461 ;;		Startup code after reset
   462 ;; This function uses a non-reentrant model
   463 ;;
   464                           
   465                           
   466                           ;psect for function _main
   467  03D7                     _main:
   468  03D7                     l1208:	
   469                           ;incstack = 0
   470                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   471                           
   472                           
   473                           ;main.c: 54:     configBoard();
   474  03D7  23A8               	fcall	_configBoard
   475  03D8                     l1210:
   476                           
   477                           ;main.c: 57:     PORTB = 0b11100000;
   478  03D8  30E0               	movlw	224
   479  03D9  1283               	bcf	3,5	;RP0=0, select bank0
   480  03DA  1303               	bcf	3,6	;RP1=0, select bank0
   481  03DB  0086               	movwf	6	;volatile
   482  03DC                     l1212:
   483                           
   484                           ;main.c: 58:     PORTA = 0b100000;
   485  03DC  3020               	movlw	32
   486  03DD  0085               	movwf	5	;volatile
   487  03DE                     l1214:
   488                           
   489                           ;main.c: 59:     PORTC = 0x00;
   490  03DE  0187               	clrf	7	;volatile
   491  03DF                     l1216:
   492                           
   493                           ;main.c: 63:     Display display7seg[4];;main.c: 64:     Display7seg4digitsVetor = displ
      +                          ay7seg;
   494  03DF  302F               	movlw	(low (main@display7seg| 0))& (0+255)
   495  03E0  00AE               	movwf	??_main
   496  03E1  082E               	movf	??_main,w
   497  03E2  00C9               	movwf	_Display7seg4digitsVetor
   498  03E3                     l1218:
   499                           
   500                           ;main.c: 65:     initDisplay();
   501  03E3  22BB               	fcall	_initDisplay
   502  03E4                     l1220:
   503                           
   504                           ;main.c: 68:     writeCharOnDisplay('4', 0);
   505  03E4  3000               	movlw	0
   506  03E5  1283               	bcf	3,5	;RP0=0, select bank0
   507  03E6  1303               	bcf	3,6	;RP1=0, select bank0
   508  03E7  00A8               	movwf	writeCharOnDisplay@iDisplay
   509  03E8  00A9               	movwf	writeCharOnDisplay@iDisplay+1
   510  03E9  3034               	movlw	52
   511  03EA  201B               	fcall	_writeCharOnDisplay
   512  03EB                     l1222:
   513                           
   514                           ;main.c: 69:     writeCharOnDisplay('d', 1);
   515  03EB  3001               	movlw	1
   516  03EC  1283               	bcf	3,5	;RP0=0, select bank0
   517  03ED  1303               	bcf	3,6	;RP1=0, select bank0
   518  03EE  00A8               	movwf	writeCharOnDisplay@iDisplay
   519  03EF  3000               	movlw	0
   520  03F0  00A9               	movwf	writeCharOnDisplay@iDisplay+1
   521  03F1  3064               	movlw	100
   522  03F2  201B               	fcall	_writeCharOnDisplay
   523  03F3                     l1224:
   524                           
   525                           ;main.c: 70:     writeCharOnDisplay('9', 2);
   526  03F3  3002               	movlw	2
   527  03F4  1283               	bcf	3,5	;RP0=0, select bank0
   528  03F5  1303               	bcf	3,6	;RP1=0, select bank0
   529  03F6  00A8               	movwf	writeCharOnDisplay@iDisplay
   530  03F7  3000               	movlw	0
   531  03F8  00A9               	movwf	writeCharOnDisplay@iDisplay+1
   532  03F9  3039               	movlw	57
   533  03FA  201B               	fcall	_writeCharOnDisplay
   534  03FB                     l1226:
   535                           
   536                           ;main.c: 71:     writeCharOnDisplay('p', 3);
   537  03FB  3003               	movlw	3
   538  03FC  1283               	bcf	3,5	;RP0=0, select bank0
   539  03FD  1303               	bcf	3,6	;RP1=0, select bank0
   540  03FE  00A8               	movwf	writeCharOnDisplay@iDisplay
   541  03FF  3000               	movlw	0
   542  0400  00A9               	movwf	writeCharOnDisplay@iDisplay+1
   543  0401  3070               	movlw	112
   544  0402  201B               	fcall	_writeCharOnDisplay
   545  0403                     l54:	
   546                           ;main.c: 73:     while(1){
   547                           
   548  0403                     l55:	
   549                           ;main.c: 76:     }
   550                           
   551  0403  2C03               	goto	l54
   552  0404  2810               	ljmp	start
   553  0405                     __end_of_main:
   554                           
   555                           	psect	text1
   556  001B                     __ptext1:	
   557 ;; *************** function _writeCharOnDisplay *****************
   558 ;; Defined at:
   559 ;;		line 148 in file "utils.c"
   560 ;; Parameters:    Size  Location     Type
   561 ;;  chCharacter     1    wreg     unsigned char 
   562 ;;  iDisplay        2    8[BANK0 ] int 
   563 ;; Auto vars:     Size  Location     Type
   564 ;;  chCharacter     1   13[BANK0 ] unsigned char 
   565 ;; Return value:  Size  Location     Type
   566 ;;                  1    wreg      void 
   567 ;; Registers used:
   568 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   569 ;; Tracked objects:
   570 ;;		On entry : 0/0
   571 ;;		On exit  : 0/0
   572 ;;		Unchanged: 0/0
   573 ;; Data sizes:     COMMON   BANK0   BANK1
   574 ;;      Params:         0       2       0
   575 ;;      Locals:         0       1       0
   576 ;;      Temps:          0       3       0
   577 ;;      Totals:         0       6       0
   578 ;;Total ram usage:        6 bytes
   579 ;; Hardware stack levels used: 1
   580 ;; Hardware stack levels required when called: 4
   581 ;; This function calls:
   582 ;;		___bmul
   583 ;; This function is called by:
   584 ;;		_main
   585 ;; This function uses a non-reentrant model
   586 ;;
   587                           
   588                           
   589                           ;psect for function _writeCharOnDisplay
   590  001B                     _writeCharOnDisplay:
   591                           
   592                           ;incstack = 0
   593                           ; Regs used in _writeCharOnDisplay: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   594                           ;writeCharOnDisplay@chCharacter stored from wreg
   595  001B  1283               	bcf	3,5	;RP0=0, select bank0
   596  001C  1303               	bcf	3,6	;RP1=0, select bank0
   597  001D  00AD               	movwf	writeCharOnDisplay@chCharacter
   598  001E                     l1142:
   599                           
   600                           ;utils.c: 150:     if(iDisplay < 0 || iDisplay > 3){
   601  001E  1BA9               	btfsc	writeCharOnDisplay@iDisplay+1,7
   602  001F  2821               	goto	u661
   603  0020  2822               	goto	u660
   604  0021                     u661:
   605  0021  2941               	goto	l128
   606  0022                     u660:
   607  0022                     l1144:
   608  0022  0829               	movf	writeCharOnDisplay@iDisplay+1,w
   609  0023  3A80               	xorlw	128
   610  0024  00FF               	movwf	btemp+1
   611  0025  3080               	movlw	128
   612  0026  027F               	subwf	btemp+1,w
   613  0027  1D03               	skipz
   614  0028  282B               	goto	u675
   615  0029  3004               	movlw	4
   616  002A  0228               	subwf	writeCharOnDisplay@iDisplay,w
   617  002B                     u675:
   618  002B  1C03               	skipc
   619  002C  282E               	goto	u671
   620  002D  282F               	goto	u670
   621  002E                     u671:
   622  002E  2914               	goto	l1172
   623  002F                     u670:
   624  002F  2941               	goto	l128
   625  0030                     l1146:
   626                           
   627                           ;utils.c: 160:             Display7seg4digitsVetor[iDisplay].data = 0b00111111;
   628  0030  303F               	movlw	63
   629  0031  00AA               	movwf	??_writeCharOnDisplay
   630  0032  3005               	movlw	5
   631  0033  00AB               	movwf	??_writeCharOnDisplay+1
   632  0034  082B               	movf	??_writeCharOnDisplay+1,w
   633  0035  00A4               	movwf	___bmul@multiplicand
   634  0036  0828               	movf	writeCharOnDisplay@iDisplay,w
   635  0037  2405               	fcall	___bmul
   636  0038  1283               	bcf	3,5	;RP0=0, select bank0
   637  0039  1303               	bcf	3,6	;RP1=0, select bank0
   638  003A  0749               	addwf	_Display7seg4digitsVetor,w
   639  003B  00AC               	movwf	??_writeCharOnDisplay+2
   640  003C  082C               	movf	??_writeCharOnDisplay+2,w
   641  003D  3E04               	addlw	4
   642  003E  0084               	movwf	4
   643  003F  082A               	movf	??_writeCharOnDisplay,w
   644  0040  1383               	bcf	3,7	;select IRP bank0
   645  0041  0080               	movwf	0
   646                           
   647                           ;utils.c: 161:             break;
   648  0042  2941               	goto	l128
   649  0043                     l1148:
   650                           
   651                           ;utils.c: 163:             Display7seg4digitsVetor[iDisplay].data = 0b00000110;
   652  0043  3006               	movlw	6
   653  0044  00AA               	movwf	??_writeCharOnDisplay
   654  0045  3005               	movlw	5
   655  0046  00AB               	movwf	??_writeCharOnDisplay+1
   656  0047  082B               	movf	??_writeCharOnDisplay+1,w
   657  0048  00A4               	movwf	___bmul@multiplicand
   658  0049  0828               	movf	writeCharOnDisplay@iDisplay,w
   659  004A  2405               	fcall	___bmul
   660  004B  1283               	bcf	3,5	;RP0=0, select bank0
   661  004C  1303               	bcf	3,6	;RP1=0, select bank0
   662  004D  0749               	addwf	_Display7seg4digitsVetor,w
   663  004E  00AC               	movwf	??_writeCharOnDisplay+2
   664  004F  082C               	movf	??_writeCharOnDisplay+2,w
   665  0050  3E04               	addlw	4
   666  0051  0084               	movwf	4
   667  0052  082A               	movf	??_writeCharOnDisplay,w
   668  0053  1383               	bcf	3,7	;select IRP bank0
   669  0054  0080               	movwf	0
   670                           
   671                           ;utils.c: 164:             break;
   672  0055  2941               	goto	l128
   673  0056                     l1150:
   674                           
   675                           ;utils.c: 166:             Display7seg4digitsVetor[iDisplay].data = 0b01011011;
   676  0056  305B               	movlw	91
   677  0057  00AA               	movwf	??_writeCharOnDisplay
   678  0058  3005               	movlw	5
   679  0059  00AB               	movwf	??_writeCharOnDisplay+1
   680  005A  082B               	movf	??_writeCharOnDisplay+1,w
   681  005B  00A4               	movwf	___bmul@multiplicand
   682  005C  0828               	movf	writeCharOnDisplay@iDisplay,w
   683  005D  2405               	fcall	___bmul
   684  005E  1283               	bcf	3,5	;RP0=0, select bank0
   685  005F  1303               	bcf	3,6	;RP1=0, select bank0
   686  0060  0749               	addwf	_Display7seg4digitsVetor,w
   687  0061  00AC               	movwf	??_writeCharOnDisplay+2
   688  0062  082C               	movf	??_writeCharOnDisplay+2,w
   689  0063  3E04               	addlw	4
   690  0064  0084               	movwf	4
   691  0065  082A               	movf	??_writeCharOnDisplay,w
   692  0066  1383               	bcf	3,7	;select IRP bank0
   693  0067  0080               	movwf	0
   694                           
   695                           ;utils.c: 167:             break;
   696  0068  2941               	goto	l128
   697  0069                     l1152:
   698                           
   699                           ;utils.c: 169:             Display7seg4digitsVetor[iDisplay].data = 0b01001111;
   700  0069  304F               	movlw	79
   701  006A  00AA               	movwf	??_writeCharOnDisplay
   702  006B  3005               	movlw	5
   703  006C  00AB               	movwf	??_writeCharOnDisplay+1
   704  006D  082B               	movf	??_writeCharOnDisplay+1,w
   705  006E  00A4               	movwf	___bmul@multiplicand
   706  006F  0828               	movf	writeCharOnDisplay@iDisplay,w
   707  0070  2405               	fcall	___bmul
   708  0071  1283               	bcf	3,5	;RP0=0, select bank0
   709  0072  1303               	bcf	3,6	;RP1=0, select bank0
   710  0073  0749               	addwf	_Display7seg4digitsVetor,w
   711  0074  00AC               	movwf	??_writeCharOnDisplay+2
   712  0075  082C               	movf	??_writeCharOnDisplay+2,w
   713  0076  3E04               	addlw	4
   714  0077  0084               	movwf	4
   715  0078  082A               	movf	??_writeCharOnDisplay,w
   716  0079  1383               	bcf	3,7	;select IRP bank0
   717  007A  0080               	movwf	0
   718                           
   719                           ;utils.c: 170:             break;
   720  007B  2941               	goto	l128
   721  007C                     l1154:
   722                           
   723                           ;utils.c: 172:             Display7seg4digitsVetor[iDisplay].data = 0b01100110;
   724  007C  3066               	movlw	102
   725  007D  00AA               	movwf	??_writeCharOnDisplay
   726  007E  3005               	movlw	5
   727  007F  00AB               	movwf	??_writeCharOnDisplay+1
   728  0080  082B               	movf	??_writeCharOnDisplay+1,w
   729  0081  00A4               	movwf	___bmul@multiplicand
   730  0082  0828               	movf	writeCharOnDisplay@iDisplay,w
   731  0083  2405               	fcall	___bmul
   732  0084  1283               	bcf	3,5	;RP0=0, select bank0
   733  0085  1303               	bcf	3,6	;RP1=0, select bank0
   734  0086  0749               	addwf	_Display7seg4digitsVetor,w
   735  0087  00AC               	movwf	??_writeCharOnDisplay+2
   736  0088  082C               	movf	??_writeCharOnDisplay+2,w
   737  0089  3E04               	addlw	4
   738  008A  0084               	movwf	4
   739  008B  082A               	movf	??_writeCharOnDisplay,w
   740  008C  1383               	bcf	3,7	;select IRP bank0
   741  008D  0080               	movwf	0
   742                           
   743                           ;utils.c: 173:             break;
   744  008E  2941               	goto	l128
   745  008F                     l1156:
   746                           
   747                           ;utils.c: 175:             Display7seg4digitsVetor[iDisplay].data = 0b01101101;
   748  008F  306D               	movlw	109
   749  0090  00AA               	movwf	??_writeCharOnDisplay
   750  0091  3005               	movlw	5
   751  0092  00AB               	movwf	??_writeCharOnDisplay+1
   752  0093  082B               	movf	??_writeCharOnDisplay+1,w
   753  0094  00A4               	movwf	___bmul@multiplicand
   754  0095  0828               	movf	writeCharOnDisplay@iDisplay,w
   755  0096  2405               	fcall	___bmul
   756  0097  1283               	bcf	3,5	;RP0=0, select bank0
   757  0098  1303               	bcf	3,6	;RP1=0, select bank0
   758  0099  0749               	addwf	_Display7seg4digitsVetor,w
   759  009A  00AC               	movwf	??_writeCharOnDisplay+2
   760  009B  082C               	movf	??_writeCharOnDisplay+2,w
   761  009C  3E04               	addlw	4
   762  009D  0084               	movwf	4
   763  009E  082A               	movf	??_writeCharOnDisplay,w
   764  009F  1383               	bcf	3,7	;select IRP bank0
   765  00A0  0080               	movwf	0
   766                           
   767                           ;utils.c: 176:             break;
   768  00A1  2941               	goto	l128
   769  00A2                     l1158:
   770                           
   771                           ;utils.c: 178:             Display7seg4digitsVetor[iDisplay].data = 0b01111101;
   772  00A2  307D               	movlw	125
   773  00A3  00AA               	movwf	??_writeCharOnDisplay
   774  00A4  3005               	movlw	5
   775  00A5  00AB               	movwf	??_writeCharOnDisplay+1
   776  00A6  082B               	movf	??_writeCharOnDisplay+1,w
   777  00A7  00A4               	movwf	___bmul@multiplicand
   778  00A8  0828               	movf	writeCharOnDisplay@iDisplay,w
   779  00A9  2405               	fcall	___bmul
   780  00AA  1283               	bcf	3,5	;RP0=0, select bank0
   781  00AB  1303               	bcf	3,6	;RP1=0, select bank0
   782  00AC  0749               	addwf	_Display7seg4digitsVetor,w
   783  00AD  00AC               	movwf	??_writeCharOnDisplay+2
   784  00AE  082C               	movf	??_writeCharOnDisplay+2,w
   785  00AF  3E04               	addlw	4
   786  00B0  0084               	movwf	4
   787  00B1  082A               	movf	??_writeCharOnDisplay,w
   788  00B2  1383               	bcf	3,7	;select IRP bank0
   789  00B3  0080               	movwf	0
   790                           
   791                           ;utils.c: 179:             break;
   792  00B4  2941               	goto	l128
   793  00B5                     l1160:
   794                           
   795                           ;utils.c: 181:             Display7seg4digitsVetor[iDisplay].data = 0b01000111;
   796  00B5  3047               	movlw	71
   797  00B6  00AA               	movwf	??_writeCharOnDisplay
   798  00B7  3005               	movlw	5
   799  00B8  00AB               	movwf	??_writeCharOnDisplay+1
   800  00B9  082B               	movf	??_writeCharOnDisplay+1,w
   801  00BA  00A4               	movwf	___bmul@multiplicand
   802  00BB  0828               	movf	writeCharOnDisplay@iDisplay,w
   803  00BC  2405               	fcall	___bmul
   804  00BD  1283               	bcf	3,5	;RP0=0, select bank0
   805  00BE  1303               	bcf	3,6	;RP1=0, select bank0
   806  00BF  0749               	addwf	_Display7seg4digitsVetor,w
   807  00C0  00AC               	movwf	??_writeCharOnDisplay+2
   808  00C1  082C               	movf	??_writeCharOnDisplay+2,w
   809  00C2  3E04               	addlw	4
   810  00C3  0084               	movwf	4
   811  00C4  082A               	movf	??_writeCharOnDisplay,w
   812  00C5  1383               	bcf	3,7	;select IRP bank0
   813  00C6  0080               	movwf	0
   814                           
   815                           ;utils.c: 182:             break;
   816  00C7  2941               	goto	l128
   817  00C8                     l1162:
   818                           
   819                           ;utils.c: 184:             Display7seg4digitsVetor[iDisplay].data = 0b01111111;
   820  00C8  307F               	movlw	127
   821  00C9  00AA               	movwf	??_writeCharOnDisplay
   822  00CA  3005               	movlw	5
   823  00CB  00AB               	movwf	??_writeCharOnDisplay+1
   824  00CC  082B               	movf	??_writeCharOnDisplay+1,w
   825  00CD  00A4               	movwf	___bmul@multiplicand
   826  00CE  0828               	movf	writeCharOnDisplay@iDisplay,w
   827  00CF  2405               	fcall	___bmul
   828  00D0  1283               	bcf	3,5	;RP0=0, select bank0
   829  00D1  1303               	bcf	3,6	;RP1=0, select bank0
   830  00D2  0749               	addwf	_Display7seg4digitsVetor,w
   831  00D3  00AC               	movwf	??_writeCharOnDisplay+2
   832  00D4  082C               	movf	??_writeCharOnDisplay+2,w
   833  00D5  3E04               	addlw	4
   834  00D6  0084               	movwf	4
   835  00D7  082A               	movf	??_writeCharOnDisplay,w
   836  00D8  1383               	bcf	3,7	;select IRP bank0
   837  00D9  0080               	movwf	0
   838                           
   839                           ;utils.c: 185:             break;
   840  00DA  2941               	goto	l128
   841  00DB                     l1164:
   842                           
   843                           ;utils.c: 187:             Display7seg4digitsVetor[iDisplay].data = 0b01100111;
   844  00DB  3067               	movlw	103
   845  00DC  00AA               	movwf	??_writeCharOnDisplay
   846  00DD  3005               	movlw	5
   847  00DE  00AB               	movwf	??_writeCharOnDisplay+1
   848  00DF  082B               	movf	??_writeCharOnDisplay+1,w
   849  00E0  00A4               	movwf	___bmul@multiplicand
   850  00E1  0828               	movf	writeCharOnDisplay@iDisplay,w
   851  00E2  2405               	fcall	___bmul
   852  00E3  1283               	bcf	3,5	;RP0=0, select bank0
   853  00E4  1303               	bcf	3,6	;RP1=0, select bank0
   854  00E5  0749               	addwf	_Display7seg4digitsVetor,w
   855  00E6  00AC               	movwf	??_writeCharOnDisplay+2
   856  00E7  082C               	movf	??_writeCharOnDisplay+2,w
   857  00E8  3E04               	addlw	4
   858  00E9  0084               	movwf	4
   859  00EA  082A               	movf	??_writeCharOnDisplay,w
   860  00EB  1383               	bcf	3,7	;select IRP bank0
   861  00EC  0080               	movwf	0
   862                           
   863                           ;utils.c: 188:             break;
   864  00ED  2941               	goto	l128
   865  00EE                     l1166:
   866                           
   867                           ;utils.c: 190:             Display7seg4digitsVetor[iDisplay].data = 0b01011110;
   868  00EE  305E               	movlw	94
   869  00EF  00AA               	movwf	??_writeCharOnDisplay
   870  00F0  3005               	movlw	5
   871  00F1  00AB               	movwf	??_writeCharOnDisplay+1
   872  00F2  082B               	movf	??_writeCharOnDisplay+1,w
   873  00F3  00A4               	movwf	___bmul@multiplicand
   874  00F4  0828               	movf	writeCharOnDisplay@iDisplay,w
   875  00F5  2405               	fcall	___bmul
   876  00F6  1283               	bcf	3,5	;RP0=0, select bank0
   877  00F7  1303               	bcf	3,6	;RP1=0, select bank0
   878  00F8  0749               	addwf	_Display7seg4digitsVetor,w
   879  00F9  00AC               	movwf	??_writeCharOnDisplay+2
   880  00FA  082C               	movf	??_writeCharOnDisplay+2,w
   881  00FB  3E04               	addlw	4
   882  00FC  0084               	movwf	4
   883  00FD  082A               	movf	??_writeCharOnDisplay,w
   884  00FE  1383               	bcf	3,7	;select IRP bank0
   885  00FF  0080               	movwf	0
   886                           
   887                           ;utils.c: 191:             break;
   888  0100  2941               	goto	l128
   889  0101                     l1168:
   890                           
   891                           ;utils.c: 193:             Display7seg4digitsVetor[iDisplay].data = 0b01110111;
   892  0101  3077               	movlw	119
   893  0102  00AA               	movwf	??_writeCharOnDisplay
   894  0103  3005               	movlw	5
   895  0104  00AB               	movwf	??_writeCharOnDisplay+1
   896  0105  082B               	movf	??_writeCharOnDisplay+1,w
   897  0106  00A4               	movwf	___bmul@multiplicand
   898  0107  0828               	movf	writeCharOnDisplay@iDisplay,w
   899  0108  2405               	fcall	___bmul
   900  0109  1283               	bcf	3,5	;RP0=0, select bank0
   901  010A  1303               	bcf	3,6	;RP1=0, select bank0
   902  010B  0749               	addwf	_Display7seg4digitsVetor,w
   903  010C  00AC               	movwf	??_writeCharOnDisplay+2
   904  010D  082C               	movf	??_writeCharOnDisplay+2,w
   905  010E  3E04               	addlw	4
   906  010F  0084               	movwf	4
   907  0110  082A               	movf	??_writeCharOnDisplay,w
   908  0111  1383               	bcf	3,7	;select IRP bank0
   909  0112  0080               	movwf	0
   910                           
   911                           ;utils.c: 194:             break;
   912  0113  2941               	goto	l128
   913  0114                     l1172:
   914  0114  1283               	bcf	3,5	;RP0=0, select bank0
   915  0115  1303               	bcf	3,6	;RP1=0, select bank0
   916  0116  082D               	movf	writeCharOnDisplay@chCharacter,w
   917  0117  00AA               	movwf	??_writeCharOnDisplay
   918  0118  01AB               	clrf	??_writeCharOnDisplay+1
   919                           
   920                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   921                           ; Switch size 1, requested type "simple"
   922                           ; Number of cases is 1, Range of values is 0 to 0
   923                           ; switch strategies available:
   924                           ; Name         Instructions Cycles
   925                           ; simple_byte            4     3 (average)
   926                           ; direct_byte            7     6 (fixed)
   927                           ; jumptable            260     6 (fixed)
   928                           ;	Chosen strategy is simple_byte
   929  0119  082B               	movf	??_writeCharOnDisplay+1,w
   930  011A  3A00               	xorlw	0	; case 0
   931  011B  1903               	skipnz
   932  011C  291E               	goto	l1288
   933  011D  2901               	goto	l1168
   934  011E                     l1288:
   935                           
   936                           ; Switch size 1, requested type "simple"
   937                           ; Number of cases is 11, Range of values is 48 to 100
   938                           ; switch strategies available:
   939                           ; Name         Instructions Cycles
   940                           ; simple_byte           34    18 (average)
   941                           ; direct_byte           62     9 (fixed)
   942                           ; jumptable            263     9 (fixed)
   943                           ;	Chosen strategy is simple_byte
   944  011E  082A               	movf	??_writeCharOnDisplay,w
   945  011F  3A30               	xorlw	48	; case 48
   946  0120  1903               	skipnz
   947  0121  2830               	goto	l1146
   948  0122  3A01               	xorlw	1	; case 49
   949  0123  1903               	skipnz
   950  0124  2843               	goto	l1148
   951  0125  3A03               	xorlw	3	; case 50
   952  0126  1903               	skipnz
   953  0127  2856               	goto	l1150
   954  0128  3A01               	xorlw	1	; case 51
   955  0129  1903               	skipnz
   956  012A  2869               	goto	l1152
   957  012B  3A07               	xorlw	7	; case 52
   958  012C  1903               	skipnz
   959  012D  287C               	goto	l1154
   960  012E  3A01               	xorlw	1	; case 53
   961  012F  1903               	skipnz
   962  0130  288F               	goto	l1156
   963  0131  3A03               	xorlw	3	; case 54
   964  0132  1903               	skipnz
   965  0133  28A2               	goto	l1158
   966  0134  3A01               	xorlw	1	; case 55
   967  0135  1903               	skipnz
   968  0136  28B5               	goto	l1160
   969  0137  3A0F               	xorlw	15	; case 56
   970  0138  1903               	skipnz
   971  0139  28C8               	goto	l1162
   972  013A  3A01               	xorlw	1	; case 57
   973  013B  1903               	skipnz
   974  013C  28DB               	goto	l1164
   975  013D  3A5D               	xorlw	93	; case 100
   976  013E  1903               	skipnz
   977  013F  28EE               	goto	l1166
   978  0140  2901               	goto	l1168
   979  0141                     l128:
   980  0141  0008               	return
   981  0142                     __end_of_writeCharOnDisplay:
   982                           
   983                           	psect	text2
   984  0405                     __ptext2:	
   985 ;; *************** function ___bmul *****************
   986 ;; Defined at:
   987 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul8.c"
   988 ;; Parameters:    Size  Location     Type
   989 ;;  multiplier      1    wreg     unsigned char 
   990 ;;  multiplicand    1    4[BANK0 ] unsigned char 
   991 ;; Auto vars:     Size  Location     Type
   992 ;;  multiplier      1    7[BANK0 ] unsigned char 
   993 ;;  product         1    6[BANK0 ] unsigned char 
   994 ;; Return value:  Size  Location     Type
   995 ;;                  1    wreg      unsigned char 
   996 ;; Registers used:
   997 ;;		wreg, status,2, status,0
   998 ;; Tracked objects:
   999 ;;		On entry : 0/0
  1000 ;;		On exit  : 0/0
  1001 ;;		Unchanged: 0/0
  1002 ;; Data sizes:     COMMON   BANK0   BANK1
  1003 ;;      Params:         0       1       0
  1004 ;;      Locals:         0       2       0
  1005 ;;      Temps:          0       1       0
  1006 ;;      Totals:         0       4       0
  1007 ;;Total ram usage:        4 bytes
  1008 ;; Hardware stack levels used: 1
  1009 ;; Hardware stack levels required when called: 3
  1010 ;; This function calls:
  1011 ;;		Nothing
  1012 ;; This function is called by:
  1013 ;;		_writeCharOnDisplay
  1014 ;; This function uses a non-reentrant model
  1015 ;;
  1016                           
  1017                           
  1018                           ;psect for function ___bmul
  1019  0405                     ___bmul:
  1020                           
  1021                           ;incstack = 0
  1022                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1023                           ;___bmul@multiplier stored from wreg
  1024  0405  1283               	bcf	3,5	;RP0=0, select bank0
  1025  0406  1303               	bcf	3,6	;RP1=0, select bank0
  1026  0407  00A7               	movwf	___bmul@multiplier
  1027  0408                     l1076:
  1028  0408  01A6               	clrf	___bmul@product
  1029  0409                     l1078:
  1030  0409  1C27               	btfss	___bmul@multiplier,0
  1031  040A  2C0C               	goto	u611
  1032  040B  2C0D               	goto	u610
  1033  040C                     u611:
  1034  040C  2C11               	goto	l1082
  1035  040D                     u610:
  1036  040D                     l1080:
  1037  040D  0824               	movf	___bmul@multiplicand,w
  1038  040E  00A5               	movwf	??___bmul
  1039  040F  0825               	movf	??___bmul,w
  1040  0410  07A6               	addwf	___bmul@product,f
  1041  0411                     l1082:
  1042  0411  1003               	clrc
  1043  0412  0DA4               	rlf	___bmul@multiplicand,f
  1044  0413                     l1084:
  1045  0413  1003               	clrc
  1046  0414  0CA7               	rrf	___bmul@multiplier,f
  1047  0415  0827               	movf	___bmul@multiplier,w
  1048  0416  1D03               	btfss	3,2
  1049  0417  2C19               	goto	u621
  1050  0418  2C1A               	goto	u620
  1051  0419                     u621:
  1052  0419  2C09               	goto	l1078
  1053  041A                     u620:
  1054  041A                     l1086:
  1055  041A  0826               	movf	___bmul@product,w
  1056  041B                     l254:
  1057  041B  0008               	return
  1058  041C                     __end_of___bmul:
  1059                           
  1060                           	psect	text3
  1061  02BB                     __ptext3:	
  1062 ;; *************** function _initDisplay *****************
  1063 ;; Defined at:
  1064 ;;		line 129 in file "utils.c"
  1065 ;; Parameters:    Size  Location     Type
  1066 ;;		None
  1067 ;; Auto vars:     Size  Location     Type
  1068 ;;		None
  1069 ;; Return value:  Size  Location     Type
  1070 ;;                  1    wreg      void 
  1071 ;; Registers used:
  1072 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1073 ;; Tracked objects:
  1074 ;;		On entry : 0/0
  1075 ;;		On exit  : 0/0
  1076 ;;		Unchanged: 0/0
  1077 ;; Data sizes:     COMMON   BANK0   BANK1
  1078 ;;      Params:         0       0       0
  1079 ;;      Locals:         0       0       0
  1080 ;;      Temps:          0       1       0
  1081 ;;      Totals:         0       1       0
  1082 ;;Total ram usage:        1 bytes
  1083 ;; Hardware stack levels used: 1
  1084 ;; Hardware stack levels required when called: 3
  1085 ;; This function calls:
  1086 ;;		Nothing
  1087 ;; This function is called by:
  1088 ;;		_main
  1089 ;; This function uses a non-reentrant model
  1090 ;;
  1091                           
  1092                           
  1093                           ;psect for function _initDisplay
  1094  02BB                     _initDisplay:
  1095  02BB                     l1140:	
  1096                           ;incstack = 0
  1097                           ; Regs used in _initDisplay: [wreg-fsr0h+status,2+status,0]
  1098                           
  1099                           
  1100                           ;utils.c: 131:     Display7seg4digitsVetor[0].data = 0b01110111;
  1101  02BB  3077               	movlw	119
  1102  02BC  1283               	bcf	3,5	;RP0=0, select bank0
  1103  02BD  1303               	bcf	3,6	;RP1=0, select bank0
  1104  02BE  00A4               	movwf	??_initDisplay
  1105  02BF  0849               	movf	_Display7seg4digitsVetor,w
  1106  02C0  3E04               	addlw	4
  1107  02C1  0084               	movwf	4
  1108  02C2  0824               	movf	??_initDisplay,w
  1109  02C3  1383               	bcf	3,7	;select IRP bank0
  1110  02C4  0080               	movwf	0
  1111                           
  1112                           ;utils.c: 132:     Display7seg4digitsVetor[0].pin = 4;
  1113  02C5  0849               	movf	_Display7seg4digitsVetor,w
  1114  02C6  0084               	movwf	4
  1115  02C7  3004               	movlw	4
  1116  02C8  0080               	movwf	0
  1117  02C9  0A84               	incf	4,f
  1118  02CA  3000               	movlw	0
  1119  02CB  0080               	movwf	0
  1120                           
  1121                           ;utils.c: 133:     Display7seg4digitsVetor[0].port = 1;
  1122  02CC  0849               	movf	_Display7seg4digitsVetor,w
  1123  02CD  3E02               	addlw	2
  1124  02CE  0084               	movwf	4
  1125  02CF  3001               	movlw	1
  1126  02D0  0080               	movwf	0
  1127  02D1  0A84               	incf	4,f
  1128  02D2  3000               	movlw	0
  1129  02D3  0080               	movwf	0
  1130                           
  1131                           ;utils.c: 135:     Display7seg4digitsVetor[1].data = 0b01111100;
  1132  02D4  307C               	movlw	124
  1133  02D5  00A4               	movwf	??_initDisplay
  1134  02D6  0849               	movf	_Display7seg4digitsVetor,w
  1135  02D7  3E09               	addlw	9
  1136  02D8  0084               	movwf	4
  1137  02D9  0824               	movf	??_initDisplay,w
  1138  02DA  0080               	movwf	0
  1139                           
  1140                           ;utils.c: 136:     Display7seg4digitsVetor[1].pin = 5;
  1141  02DB  0849               	movf	_Display7seg4digitsVetor,w
  1142  02DC  3E05               	addlw	5
  1143  02DD  0084               	movwf	4
  1144  02DE  3005               	movlw	5
  1145  02DF  0080               	movwf	0
  1146  02E0  0A84               	incf	4,f
  1147  02E1  3000               	movlw	0
  1148  02E2  0080               	movwf	0
  1149                           
  1150                           ;utils.c: 137:     Display7seg4digitsVetor[1].port = 0;
  1151  02E3  0849               	movf	_Display7seg4digitsVetor,w
  1152  02E4  3E07               	addlw	7
  1153  02E5  0084               	movwf	4
  1154  02E6  0180               	clrf	0
  1155  02E7  0A84               	incf	4,f
  1156  02E8  0180               	clrf	0
  1157                           
  1158                           ;utils.c: 139:     Display7seg4digitsVetor[2].data = 0b00111111;
  1159  02E9  303F               	movlw	63
  1160  02EA  00A4               	movwf	??_initDisplay
  1161  02EB  0849               	movf	_Display7seg4digitsVetor,w
  1162  02EC  3E0E               	addlw	14
  1163  02ED  0084               	movwf	4
  1164  02EE  0824               	movf	??_initDisplay,w
  1165  02EF  0080               	movwf	0
  1166                           
  1167                           ;utils.c: 140:     Display7seg4digitsVetor[2].pin = 6;
  1168  02F0  0849               	movf	_Display7seg4digitsVetor,w
  1169  02F1  3E0A               	addlw	10
  1170  02F2  0084               	movwf	4
  1171  02F3  3006               	movlw	6
  1172  02F4  0080               	movwf	0
  1173  02F5  0A84               	incf	4,f
  1174  02F6  3000               	movlw	0
  1175  02F7  0080               	movwf	0
  1176                           
  1177                           ;utils.c: 141:     Display7seg4digitsVetor[2].port = 1;
  1178  02F8  0849               	movf	_Display7seg4digitsVetor,w
  1179  02F9  3E0C               	addlw	12
  1180  02FA  0084               	movwf	4
  1181  02FB  3001               	movlw	1
  1182  02FC  0080               	movwf	0
  1183  02FD  0A84               	incf	4,f
  1184  02FE  3000               	movlw	0
  1185  02FF  0080               	movwf	0
  1186                           
  1187                           ;utils.c: 143:     Display7seg4digitsVetor[3].data = 0b00000110;
  1188  0300  3006               	movlw	6
  1189  0301  00A4               	movwf	??_initDisplay
  1190  0302  0849               	movf	_Display7seg4digitsVetor,w
  1191  0303  3E13               	addlw	19
  1192  0304  0084               	movwf	4
  1193  0305  0824               	movf	??_initDisplay,w
  1194  0306  0080               	movwf	0
  1195                           
  1196                           ;utils.c: 144:     Display7seg4digitsVetor[3].pin = 7;
  1197  0307  0849               	movf	_Display7seg4digitsVetor,w
  1198  0308  3E0F               	addlw	15
  1199  0309  0084               	movwf	4
  1200  030A  3007               	movlw	7
  1201  030B  0080               	movwf	0
  1202  030C  0A84               	incf	4,f
  1203  030D  3000               	movlw	0
  1204  030E  0080               	movwf	0
  1205                           
  1206                           ;utils.c: 145:     Display7seg4digitsVetor[3].port = 1;
  1207  030F  0849               	movf	_Display7seg4digitsVetor,w
  1208  0310  3E11               	addlw	17
  1209  0311  0084               	movwf	4
  1210  0312  3001               	movlw	1
  1211  0313  0080               	movwf	0
  1212  0314  0A84               	incf	4,f
  1213  0315  3000               	movlw	0
  1214  0316  0080               	movwf	0
  1215  0317                     l122:
  1216  0317  0008               	return
  1217  0318                     __end_of_initDisplay:
  1218                           
  1219                           	psect	text4
  1220  03A8                     __ptext4:	
  1221 ;; *************** function _configBoard *****************
  1222 ;; Defined at:
  1223 ;;		line 82 in file "main.c"
  1224 ;; Parameters:    Size  Location     Type
  1225 ;;		None
  1226 ;; Auto vars:     Size  Location     Type
  1227 ;;		None
  1228 ;; Return value:  Size  Location     Type
  1229 ;;                  1    wreg      void 
  1230 ;; Registers used:
  1231 ;;		wreg, status,2, status,0
  1232 ;; Tracked objects:
  1233 ;;		On entry : 0/0
  1234 ;;		On exit  : 0/0
  1235 ;;		Unchanged: 0/0
  1236 ;; Data sizes:     COMMON   BANK0   BANK1
  1237 ;;      Params:         0       0       0
  1238 ;;      Locals:         0       0       0
  1239 ;;      Temps:          0       1       0
  1240 ;;      Totals:         0       1       0
  1241 ;;Total ram usage:        1 bytes
  1242 ;; Hardware stack levels used: 1
  1243 ;; Hardware stack levels required when called: 3
  1244 ;; This function calls:
  1245 ;;		Nothing
  1246 ;; This function is called by:
  1247 ;;		_main
  1248 ;; This function uses a non-reentrant model
  1249 ;;
  1250                           
  1251                           
  1252                           ;psect for function _configBoard
  1253  03A8                     _configBoard:
  1254  03A8                     l1114:	
  1255                           ;incstack = 0
  1256                           ; Regs used in _configBoard: [wreg+status,2+status,0]
  1257                           
  1258                           
  1259                           ;main.c: 92:     OSCCON |= (1<<0);
  1260  03A8  1683               	bsf	3,5	;RP0=1, select bank1
  1261  03A9  1303               	bcf	3,6	;RP1=0, select bank1
  1262  03AA  140F               	bsf	15,0	;volatile
  1263  03AB                     l1116:
  1264                           
  1265                           ;main.c: 93:     OSCCON &= ~(1<<1);
  1266  03AB  30FD               	movlw	253
  1267  03AC  1283               	bcf	3,5	;RP0=0, select bank0
  1268  03AD  1303               	bcf	3,6	;RP1=0, select bank0
  1269  03AE  00A4               	movwf	??_configBoard
  1270  03AF  0824               	movf	??_configBoard,w
  1271  03B0  1683               	bsf	3,5	;RP0=1, select bank1
  1272  03B1  1303               	bcf	3,6	;RP1=0, select bank1
  1273  03B2  058F               	andwf	15,f	;volatile
  1274  03B3                     l1118:
  1275                           
  1276                           ;main.c: 94:     OSCCON |= (1<<2);
  1277  03B3  150F               	bsf	15,2	;volatile
  1278                           
  1279                           ;main.c: 95:     OSCCON &= ~(1<<3);
  1280  03B4  30F7               	movlw	247
  1281  03B5  1283               	bcf	3,5	;RP0=0, select bank0
  1282  03B6  1303               	bcf	3,6	;RP1=0, select bank0
  1283  03B7  00A4               	movwf	??_configBoard
  1284  03B8  0824               	movf	??_configBoard,w
  1285  03B9  1683               	bsf	3,5	;RP0=1, select bank1
  1286  03BA  1303               	bcf	3,6	;RP1=0, select bank1
  1287  03BB  058F               	andwf	15,f	;volatile
  1288                           
  1289                           ;main.c: 96:     OSCCON |= (0b01110000);
  1290  03BC  3070               	movlw	112
  1291  03BD  1283               	bcf	3,5	;RP0=0, select bank0
  1292  03BE  1303               	bcf	3,6	;RP1=0, select bank0
  1293  03BF  00A4               	movwf	??_configBoard
  1294  03C0  0824               	movf	??_configBoard,w
  1295  03C1  1683               	bsf	3,5	;RP0=1, select bank1
  1296  03C2  1303               	bcf	3,6	;RP1=0, select bank1
  1297  03C3  048F               	iorwf	15,f	;volatile
  1298  03C4                     l1120:
  1299                           
  1300                           ;main.c: 104:     OPTION_REG = 0b00000011;
  1301  03C4  3003               	movlw	3
  1302  03C5  0081               	movwf	1	;volatile
  1303  03C6                     l1122:
  1304                           
  1305                           ;main.c: 105:     TMR0= 133;
  1306  03C6  3085               	movlw	133
  1307  03C7  1283               	bcf	3,5	;RP0=0, select bank0
  1308  03C8  1303               	bcf	3,6	;RP1=0, select bank0
  1309  03C9  0081               	movwf	1	;volatile
  1310  03CA                     l1124:
  1311                           
  1312                           ;main.c: 107:     GIE=1;
  1313  03CA  178B               	bsf	11,7	;volatile
  1314  03CB                     l1126:
  1315                           
  1316                           ;main.c: 108:     PEIE=1;
  1317  03CB  170B               	bsf	11,6	;volatile
  1318  03CC                     l1128:
  1319                           
  1320                           ;main.c: 109:     T0IE=1;
  1321  03CC  168B               	bsf	11,5	;volatile
  1322  03CD                     l1130:
  1323                           
  1324                           ;main.c: 110:     INTE = 0;
  1325  03CD  120B               	bcf	11,4	;volatile
  1326  03CE                     l1132:
  1327                           
  1328                           ;main.c: 111:     T0IF = 0;
  1329  03CE  110B               	bcf	11,2	;volatile
  1330  03CF                     l1134:
  1331                           
  1332                           ;main.c: 114:     TRISA = 0b010111;
  1333  03CF  3017               	movlw	23
  1334  03D0  1683               	bsf	3,5	;RP0=1, select bank1
  1335  03D1  1303               	bcf	3,6	;RP1=0, select bank1
  1336  03D2  0085               	movwf	5	;volatile
  1337  03D3                     l1136:
  1338                           
  1339                           ;main.c: 115:     TRISB = 0b00100000;
  1340  03D3  3020               	movlw	32
  1341  03D4  0086               	movwf	6	;volatile
  1342  03D5                     l1138:
  1343                           
  1344                           ;main.c: 116:     TRISC = 0x00;
  1345  03D5  0187               	clrf	7	;volatile
  1346  03D6                     l60:
  1347  03D6  0008               	return
  1348  03D7                     __end_of_configBoard:
  1349                           
  1350                           	psect	text5
  1351  036C                     __ptext5:	
  1352 ;; *************** function _my_isr_routine *****************
  1353 ;; Defined at:
  1354 ;;		line 30 in file "main.c"
  1355 ;; Parameters:    Size  Location     Type
  1356 ;;		None
  1357 ;; Auto vars:     Size  Location     Type
  1358 ;;		None
  1359 ;; Return value:  Size  Location     Type
  1360 ;;                  1    wreg      void 
  1361 ;; Registers used:
  1362 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1363 ;; Tracked objects:
  1364 ;;		On entry : 0/0
  1365 ;;		On exit  : 0/0
  1366 ;;		Unchanged: 0/0
  1367 ;; Data sizes:     COMMON   BANK0   BANK1
  1368 ;;      Params:         0       0       0
  1369 ;;      Locals:         0       0       0
  1370 ;;      Temps:          0       4       0
  1371 ;;      Totals:         0       4       0
  1372 ;;Total ram usage:        4 bytes
  1373 ;; Hardware stack levels used: 1
  1374 ;; Hardware stack levels required when called: 2
  1375 ;; This function calls:
  1376 ;;		___llmod
  1377 ;;		_shiftDisplays
  1378 ;; This function is called by:
  1379 ;;		Interrupt level 1
  1380 ;; This function uses a non-reentrant model
  1381 ;;
  1382                           
  1383                           
  1384                           ;psect for function _my_isr_routine
  1385  036C                     _my_isr_routine:
  1386  036C                     i1l1198:
  1387                           
  1388                           ;main.c: 33:     if(T0IF)
  1389  036C  1D0B               	btfss	11,2	;volatile
  1390  036D  2B6F               	goto	u74_21
  1391  036E  2B70               	goto	u74_20
  1392  036F                     u74_21:
  1393  036F  2B9B               	goto	i1l49
  1394  0370                     u74_20:
  1395  0370                     i1l1200:
  1396                           
  1397                           ;main.c: 34:     {;main.c: 35:         T0IF = 0;
  1398  0370  110B               	bcf	11,2	;volatile
  1399  0371                     i1l1202:
  1400                           
  1401                           ;main.c: 36:         TMR0 = 133;
  1402  0371  3085               	movlw	133
  1403  0372  0081               	movwf	1	;volatile
  1404                           
  1405                           ;main.c: 38:         uiCounterms++;
  1406  0373  3001               	movlw	1
  1407  0374  07C3               	addwf	_uiCounterms,f
  1408  0375  3000               	movlw	0
  1409  0376  1803               	skipnc
  1410  0377  3001               	movlw	1
  1411  0378  07C4               	addwf	_uiCounterms+1,f
  1412  0379  3000               	movlw	0
  1413  037A  1803               	skipnc
  1414  037B  3001               	movlw	1
  1415  037C  07C5               	addwf	_uiCounterms+2,f
  1416  037D  3000               	movlw	0
  1417  037E  1803               	skipnc
  1418  037F  3001               	movlw	1
  1419  0380  07C6               	addwf	_uiCounterms+3,f
  1420  0381                     i1l1204:
  1421                           
  1422                           ;main.c: 41:         if(0 == (uiCounterms%5)){
  1423  0381  3000               	movlw	0
  1424  0382  00F3               	movwf	___llmod@divisor+3
  1425  0383  3000               	movlw	0
  1426  0384  00F2               	movwf	___llmod@divisor+2
  1427  0385  3000               	movlw	0
  1428  0386  00F1               	movwf	___llmod@divisor+1
  1429  0387  3005               	movlw	5
  1430  0388  00F0               	movwf	___llmod@divisor
  1431  0389  0846               	movf	_uiCounterms+3,w
  1432  038A  00F7               	movwf	___llmod@dividend+3
  1433  038B  0845               	movf	_uiCounterms+2,w
  1434  038C  00F6               	movwf	___llmod@dividend+2
  1435  038D  0844               	movf	_uiCounterms+1,w
  1436  038E  00F5               	movwf	___llmod@dividend+1
  1437  038F  0843               	movf	_uiCounterms,w
  1438  0390  00F4               	movwf	___llmod@dividend
  1439  0391  2318               	fcall	___llmod
  1440  0392  0873               	movf	?___llmod+3,w
  1441  0393  0472               	iorwf	?___llmod+2,w
  1442  0394  0471               	iorwf	?___llmod+1,w
  1443  0395  0470               	iorwf	?___llmod,w
  1444  0396  1D03               	skipz
  1445  0397  2B99               	goto	u75_21
  1446  0398  2B9A               	goto	u75_20
  1447  0399                     u75_21:
  1448  0399  2B9B               	goto	i1l49
  1449  039A                     u75_20:
  1450  039A                     i1l1206:
  1451                           
  1452                           ;main.c: 42:             shiftDisplays();
  1453  039A  2241               	fcall	_shiftDisplays
  1454  039B                     i1l49:
  1455  039B  1283               	bcf	3,5	;RP0=0, select bank0
  1456  039C  1303               	bcf	3,6	;RP1=0, select bank0
  1457  039D  0823               	movf	??_my_isr_routine+3,w
  1458  039E  00FF               	movwf	btemp+1
  1459  039F  0822               	movf	??_my_isr_routine+2,w
  1460  03A0  008A               	movwf	10
  1461  03A1  0821               	movf	??_my_isr_routine+1,w
  1462  03A2  0084               	movwf	4
  1463  03A3  0E20               	swapf	??_my_isr_routine,w
  1464  03A4  0083               	movwf	3
  1465  03A5  0EFE               	swapf	btemp,f
  1466  03A6  0E7E               	swapf	btemp,w
  1467  03A7  0009               	retfie
  1468  03A8                     __end_of_my_isr_routine:
  1469                           
  1470                           	psect	intentry
  1471  0004                     __pintentry:	
  1472                           ;incstack = 0
  1473                           ; Regs used in _my_isr_routine: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1474                           
  1475  0004                     interrupt_function:
  1476  007E                     saved_w	set	btemp
  1477  0004  00FE               	movwf	btemp
  1478  0005  0E03               	swapf	3,w
  1479  0006  1283               	bcf	3,5	;RP0=0, select bank0
  1480  0007  1303               	bcf	3,6	;RP1=0, select bank0
  1481  0008  00A0               	movwf	??_my_isr_routine
  1482  0009  0804               	movf	4,w
  1483  000A  00A1               	movwf	??_my_isr_routine+1
  1484  000B  080A               	movf	10,w
  1485  000C  00A2               	movwf	??_my_isr_routine+2
  1486  000D  087F               	movf	btemp+1,w
  1487  000E  00A3               	movwf	??_my_isr_routine+3
  1488  000F  2B6C               	ljmp	_my_isr_routine
  1489                           
  1490                           	psect	text6
  1491  0241                     __ptext6:	
  1492 ;; *************** function _shiftDisplays *****************
  1493 ;; Defined at:
  1494 ;;		line 110 in file "utils.c"
  1495 ;; Parameters:    Size  Location     Type
  1496 ;;		None
  1497 ;; Auto vars:     Size  Location     Type
  1498 ;;		None
  1499 ;; Return value:  Size  Location     Type
  1500 ;;                  1    wreg      void 
  1501 ;; Registers used:
  1502 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1503 ;; Tracked objects:
  1504 ;;		On entry : 0/0
  1505 ;;		On exit  : 0/0
  1506 ;;		Unchanged: 0/0
  1507 ;; Data sizes:     COMMON   BANK0   BANK1
  1508 ;;      Params:         0       0       0
  1509 ;;      Locals:         0       0       0
  1510 ;;      Temps:          4       0       0
  1511 ;;      Totals:         4       0       0
  1512 ;;Total ram usage:        4 bytes
  1513 ;; Hardware stack levels used: 1
  1514 ;; Hardware stack levels required when called: 1
  1515 ;; This function calls:
  1516 ;;		_clearPin
  1517 ;;		_setPin
  1518 ;;		i1___bmul
  1519 ;; This function is called by:
  1520 ;;		_my_isr_routine
  1521 ;; This function uses a non-reentrant model
  1522 ;;
  1523                           
  1524                           
  1525                           ;psect for function _shiftDisplays
  1526  0241                     _shiftDisplays:
  1527  0241                     i1l1104:	
  1528                           ;incstack = 0
  1529                           ; Regs used in _shiftDisplays: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1530                           
  1531                           
  1532                           ;utils.c: 113:     setPin((Display7seg4digitsVetor+indiceDisplay)->pin, (Display7seg4dig
      +                          itsVetor+indiceDisplay)->port);
  1533  0241  3005               	movlw	5
  1534  0242  00FA               	movwf	??_shiftDisplays
  1535  0243  087A               	movf	??_shiftDisplays,w
  1536  0244  00F0               	movwf	i1___bmul@multiplicand
  1537  0245  1283               	bcf	3,5	;RP0=0, select bank0
  1538  0246  1303               	bcf	3,6	;RP1=0, select bank0
  1539  0247  0847               	movf	_indiceDisplay,w
  1540  0248  241C               	fcall	i1___bmul
  1541  0249  1283               	bcf	3,5	;RP0=0, select bank0
  1542  024A  1303               	bcf	3,6	;RP1=0, select bank0
  1543  024B  0749               	addwf	_Display7seg4digitsVetor,w
  1544  024C  00FB               	movwf	??_shiftDisplays+1
  1545  024D  087B               	movf	??_shiftDisplays+1,w
  1546  024E  0084               	movwf	4
  1547  024F  1383               	bcf	3,7	;select IRP bank0
  1548  0250  0800               	movf	0,w
  1549  0251  00F4               	movwf	setPin@iPin
  1550  0252  0A84               	incf	4,f
  1551  0253  0800               	movf	0,w
  1552  0254  00F5               	movwf	setPin@iPin+1
  1553  0255  3005               	movlw	5
  1554  0256  00FC               	movwf	??_shiftDisplays+2
  1555  0257  087C               	movf	??_shiftDisplays+2,w
  1556  0258  00F0               	movwf	i1___bmul@multiplicand
  1557  0259  0847               	movf	_indiceDisplay,w
  1558  025A  241C               	fcall	i1___bmul
  1559  025B  1283               	bcf	3,5	;RP0=0, select bank0
  1560  025C  1303               	bcf	3,6	;RP1=0, select bank0
  1561  025D  0749               	addwf	_Display7seg4digitsVetor,w
  1562  025E  00FD               	movwf	??_shiftDisplays+3
  1563  025F  087D               	movf	??_shiftDisplays+3,w
  1564  0260  3E02               	addlw	2
  1565  0261  0084               	movwf	4
  1566  0262  1383               	bcf	3,7	;select IRP bank0
  1567  0263  0800               	movf	0,w
  1568  0264  00F6               	movwf	setPin@iPort
  1569  0265  0A84               	incf	4,f
  1570  0266  0800               	movf	0,w
  1571  0267  00F7               	movwf	setPin@iPort+1
  1572  0268  21C3               	fcall	_setPin
  1573  0269                     i1l1106:
  1574                           
  1575                           ;utils.c: 116:     if(++indiceDisplay > 3){
  1576  0269  3001               	movlw	1
  1577  026A  1283               	bcf	3,5	;RP0=0, select bank0
  1578  026B  1303               	bcf	3,6	;RP1=0, select bank0
  1579  026C  07C7               	addwf	_indiceDisplay,f
  1580  026D  1803               	skipnc
  1581  026E  0AC8               	incf	_indiceDisplay+1,f
  1582  026F  3000               	movlw	0
  1583  0270  07C8               	addwf	_indiceDisplay+1,f
  1584  0271  0848               	movf	_indiceDisplay+1,w
  1585  0272  3A80               	xorlw	128
  1586  0273  00FF               	movwf	btemp+1
  1587  0274  3080               	movlw	128
  1588  0275  027F               	subwf	btemp+1,w
  1589  0276  1D03               	skipz
  1590  0277  2A7A               	goto	u65_25
  1591  0278  3004               	movlw	4
  1592  0279  0247               	subwf	_indiceDisplay,w
  1593  027A                     u65_25:
  1594  027A  1C03               	skipc
  1595  027B  2A7D               	goto	u65_21
  1596  027C  2A7E               	goto	u65_20
  1597  027D                     u65_21:
  1598  027D  2A82               	goto	i1l1110
  1599  027E                     u65_20:
  1600  027E                     i1l1108:
  1601                           
  1602                           ;utils.c: 117:         indiceDisplay = 0;
  1603  027E  1283               	bcf	3,5	;RP0=0, select bank0
  1604  027F  1303               	bcf	3,6	;RP1=0, select bank0
  1605  0280  01C7               	clrf	_indiceDisplay
  1606  0281  01C8               	clrf	_indiceDisplay+1
  1607  0282                     i1l1110:
  1608                           
  1609                           ;utils.c: 121:     PORTC = (Display7seg4digitsVetor+indiceDisplay)->data;
  1610  0282  3005               	movlw	5
  1611  0283  00FA               	movwf	??_shiftDisplays
  1612  0284  087A               	movf	??_shiftDisplays,w
  1613  0285  00F0               	movwf	i1___bmul@multiplicand
  1614  0286  1283               	bcf	3,5	;RP0=0, select bank0
  1615  0287  1303               	bcf	3,6	;RP1=0, select bank0
  1616  0288  0847               	movf	_indiceDisplay,w
  1617  0289  241C               	fcall	i1___bmul
  1618  028A  1283               	bcf	3,5	;RP0=0, select bank0
  1619  028B  1303               	bcf	3,6	;RP1=0, select bank0
  1620  028C  0749               	addwf	_Display7seg4digitsVetor,w
  1621  028D  00FB               	movwf	??_shiftDisplays+1
  1622  028E  087B               	movf	??_shiftDisplays+1,w
  1623  028F  3E04               	addlw	4
  1624  0290  0084               	movwf	4
  1625  0291  1383               	bcf	3,7	;select IRP bank0
  1626  0292  0800               	movf	0,w
  1627  0293  0087               	movwf	7	;volatile
  1628  0294                     i1l1112:
  1629                           
  1630                           ;utils.c: 124:     clearPin((Display7seg4digitsVetor+indiceDisplay)->pin, (Display7seg4d
      +                          igitsVetor+indiceDisplay)->port);
  1631  0294  3005               	movlw	5
  1632  0295  00FA               	movwf	??_shiftDisplays
  1633  0296  087A               	movf	??_shiftDisplays,w
  1634  0297  00F0               	movwf	i1___bmul@multiplicand
  1635  0298  0847               	movf	_indiceDisplay,w
  1636  0299  241C               	fcall	i1___bmul
  1637  029A  1283               	bcf	3,5	;RP0=0, select bank0
  1638  029B  1303               	bcf	3,6	;RP1=0, select bank0
  1639  029C  0749               	addwf	_Display7seg4digitsVetor,w
  1640  029D  00FB               	movwf	??_shiftDisplays+1
  1641  029E  087B               	movf	??_shiftDisplays+1,w
  1642  029F  0084               	movwf	4
  1643  02A0  1383               	bcf	3,7	;select IRP bank0
  1644  02A1  0800               	movf	0,w
  1645  02A2  00F4               	movwf	clearPin@iPin
  1646  02A3  0A84               	incf	4,f
  1647  02A4  0800               	movf	0,w
  1648  02A5  00F5               	movwf	clearPin@iPin+1
  1649  02A6  3005               	movlw	5
  1650  02A7  00FC               	movwf	??_shiftDisplays+2
  1651  02A8  087C               	movf	??_shiftDisplays+2,w
  1652  02A9  00F0               	movwf	i1___bmul@multiplicand
  1653  02AA  0847               	movf	_indiceDisplay,w
  1654  02AB  241C               	fcall	i1___bmul
  1655  02AC  1283               	bcf	3,5	;RP0=0, select bank0
  1656  02AD  1303               	bcf	3,6	;RP1=0, select bank0
  1657  02AE  0749               	addwf	_Display7seg4digitsVetor,w
  1658  02AF  00FD               	movwf	??_shiftDisplays+3
  1659  02B0  087D               	movf	??_shiftDisplays+3,w
  1660  02B1  3E02               	addlw	2
  1661  02B2  0084               	movwf	4
  1662  02B3  1383               	bcf	3,7	;select IRP bank0
  1663  02B4  0800               	movf	0,w
  1664  02B5  00F6               	movwf	clearPin@iPort
  1665  02B6  0A84               	incf	4,f
  1666  02B7  0800               	movf	0,w
  1667  02B8  00F7               	movwf	clearPin@iPort+1
  1668  02B9  2142               	fcall	_clearPin
  1669  02BA                     i1l119:
  1670  02BA  0008               	return
  1671  02BB                     __end_of_shiftDisplays:
  1672                           
  1673                           	psect	text7
  1674  041C                     __ptext7:	
  1675 ;; *************** function i1___bmul *****************
  1676 ;; Defined at:
  1677 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul8.c"
  1678 ;; Parameters:    Size  Location     Type
  1679 ;;  multiplier      1    wreg     unsigned char 
  1680 ;;  multiplicand    1    0[COMMON] unsigned char 
  1681 ;; Auto vars:     Size  Location     Type
  1682 ;;  multiplier      1    3[COMMON] unsigned char 
  1683 ;;  product         1    2[COMMON] unsigned char 
  1684 ;; Return value:  Size  Location     Type
  1685 ;;                  1    wreg      unsigned char 
  1686 ;; Registers used:
  1687 ;;		wreg, status,2, status,0
  1688 ;; Tracked objects:
  1689 ;;		On entry : 0/0
  1690 ;;		On exit  : 0/0
  1691 ;;		Unchanged: 0/0
  1692 ;; Data sizes:     COMMON   BANK0   BANK1
  1693 ;;      Params:         1       0       0
  1694 ;;      Locals:         2       0       0
  1695 ;;      Temps:          1       0       0
  1696 ;;      Totals:         4       0       0
  1697 ;;Total ram usage:        4 bytes
  1698 ;; Hardware stack levels used: 1
  1699 ;; This function calls:
  1700 ;;		Nothing
  1701 ;; This function is called by:
  1702 ;;		_shiftDisplays
  1703 ;; This function uses a non-reentrant model
  1704 ;;
  1705                           
  1706                           
  1707                           ;psect for function i1___bmul
  1708  041C                     i1___bmul:
  1709                           
  1710                           ;incstack = 0
  1711                           ; Regs used in i1___bmul: [wreg+status,2+status,0]
  1712                           ;i1___bmul@multiplier stored from wreg
  1713  041C  00F3               	movwf	i1___bmul@multiplier
  1714  041D                     i1l1090:
  1715  041D  01F2               	clrf	i1___bmul@product
  1716  041E                     i1l1092:
  1717  041E  1C73               	btfss	i1___bmul@multiplier,0
  1718  041F  2C21               	goto	u63_21
  1719  0420  2C22               	goto	u63_20
  1720  0421                     u63_21:
  1721  0421  2C26               	goto	i1l1096
  1722  0422                     u63_20:
  1723  0422                     i1l1094:
  1724  0422  0870               	movf	i1___bmul@multiplicand,w
  1725  0423  00F1               	movwf	??i1___bmul
  1726  0424  0871               	movf	??i1___bmul,w
  1727  0425  07F2               	addwf	i1___bmul@product,f
  1728  0426                     i1l1096:
  1729  0426  1003               	clrc
  1730  0427  0DF0               	rlf	i1___bmul@multiplicand,f
  1731  0428                     i1l1098:
  1732  0428  1003               	clrc
  1733  0429  0CF3               	rrf	i1___bmul@multiplier,f
  1734  042A  0873               	movf	i1___bmul@multiplier,w
  1735  042B  1D03               	btfss	3,2
  1736  042C  2C2E               	goto	u64_21
  1737  042D  2C2F               	goto	u64_20
  1738  042E                     u64_21:
  1739  042E  2C1E               	goto	i1l1092
  1740  042F                     u64_20:
  1741  042F                     i1l1100:
  1742  042F  0872               	movf	i1___bmul@product,w
  1743  0430                     i1l254:
  1744  0430  0008               	return
  1745  0431                     __end_ofi1___bmul:
  1746                           
  1747                           	psect	text8
  1748  01C3                     __ptext8:	
  1749 ;; *************** function _setPin *****************
  1750 ;; Defined at:
  1751 ;;		line 14 in file "utils.c"
  1752 ;; Parameters:    Size  Location     Type
  1753 ;;  iPin            2    4[COMMON] int 
  1754 ;;  iPort           2    6[COMMON] int 
  1755 ;; Auto vars:     Size  Location     Type
  1756 ;;		None
  1757 ;; Return value:  Size  Location     Type
  1758 ;;                  1    wreg      void 
  1759 ;; Registers used:
  1760 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  1761 ;; Tracked objects:
  1762 ;;		On entry : 0/0
  1763 ;;		On exit  : 0/0
  1764 ;;		Unchanged: 0/0
  1765 ;; Data sizes:     COMMON   BANK0   BANK1
  1766 ;;      Params:         4       0       0
  1767 ;;      Locals:         0       0       0
  1768 ;;      Temps:          2       0       0
  1769 ;;      Totals:         6       0       0
  1770 ;;Total ram usage:        6 bytes
  1771 ;; Hardware stack levels used: 1
  1772 ;; This function calls:
  1773 ;;		Nothing
  1774 ;; This function is called by:
  1775 ;;		_shiftDisplays
  1776 ;; This function uses a non-reentrant model
  1777 ;;
  1778                           
  1779                           
  1780                           ;psect for function _setPin
  1781  01C3                     _setPin:
  1782  01C3                     i1l1024:	
  1783                           ;incstack = 0
  1784                           ; Regs used in _setPin: [wreg-fsr0h+status,2+status,0+btemp+1]
  1785                           
  1786                           
  1787                           ;utils.c: 17:     switch(iPort){
  1788  01C3  2A30               	goto	i1l1044
  1789  01C4                     i1l74:	
  1790                           ;utils.c: 18:         case 0:
  1791                           
  1792                           
  1793                           ;utils.c: 19:             if(iPin >= 0 && iPin <= 5){
  1794  01C4  1BF5               	btfsc	setPin@iPin+1,7
  1795  01C5  29C7               	goto	u43_21
  1796  01C6  29C8               	goto	u43_20
  1797  01C7                     u43_21:
  1798  01C7  2A40               	goto	i1l77
  1799  01C8                     u43_20:
  1800  01C8                     i1l1026:
  1801  01C8  0875               	movf	setPin@iPin+1,w
  1802  01C9  3A80               	xorlw	128
  1803  01CA  00FF               	movwf	btemp+1
  1804  01CB  3080               	movlw	128
  1805  01CC  027F               	subwf	btemp+1,w
  1806  01CD  1D03               	skipz
  1807  01CE  29D1               	goto	u44_25
  1808  01CF  3006               	movlw	6
  1809  01D0  0274               	subwf	setPin@iPin,w
  1810  01D1                     u44_25:
  1811  01D1  1803               	skipnc
  1812  01D2  29D4               	goto	u44_21
  1813  01D3  29D5               	goto	u44_20
  1814  01D4                     u44_21:
  1815  01D4  2A40               	goto	i1l77
  1816  01D5                     u44_20:
  1817  01D5                     i1l1028:
  1818                           
  1819                           ;utils.c: 20:                 PORTA |= (1<<iPin);
  1820  01D5  3001               	movlw	1
  1821  01D6  00F8               	movwf	??_setPin
  1822  01D7  0A74               	incf	setPin@iPin,w
  1823  01D8  29DB               	goto	u45_24
  1824  01D9                     u45_25:
  1825  01D9  1003               	clrc
  1826  01DA  0DF8               	rlf	??_setPin,f
  1827  01DB                     u45_24:
  1828  01DB  3EFF               	addlw	-1
  1829  01DC  1D03               	skipz
  1830  01DD  29D9               	goto	u45_25
  1831  01DE  0878               	movf	??_setPin,w
  1832  01DF  00F9               	movwf	??_setPin+1
  1833  01E0  0879               	movf	??_setPin+1,w
  1834  01E1  1283               	bcf	3,5	;RP0=0, select bank0
  1835  01E2  1303               	bcf	3,6	;RP1=0, select bank0
  1836  01E3  0485               	iorwf	5,f	;volatile
  1837                           
  1838                           ;utils.c: 21:             }else{
  1839  01E4  2A40               	goto	i1l77
  1840  01E5                     i1l1030:
  1841                           
  1842                           ;utils.c: 26:              if(iPin >= 4 && iPin <= 7){
  1843  01E5  0875               	movf	setPin@iPin+1,w
  1844  01E6  3A80               	xorlw	128
  1845  01E7  00FF               	movwf	btemp+1
  1846  01E8  3080               	movlw	128
  1847  01E9  027F               	subwf	btemp+1,w
  1848  01EA  1D03               	skipz
  1849  01EB  29EE               	goto	u46_25
  1850  01EC  3004               	movlw	4
  1851  01ED  0274               	subwf	setPin@iPin,w
  1852  01EE                     u46_25:
  1853  01EE  1C03               	skipc
  1854  01EF  29F1               	goto	u46_21
  1855  01F0  29F2               	goto	u46_20
  1856  01F1                     u46_21:
  1857  01F1  2A40               	goto	i1l77
  1858  01F2                     u46_20:
  1859  01F2                     i1l1032:
  1860  01F2  0875               	movf	setPin@iPin+1,w
  1861  01F3  3A80               	xorlw	128
  1862  01F4  00FF               	movwf	btemp+1
  1863  01F5  3080               	movlw	128
  1864  01F6  027F               	subwf	btemp+1,w
  1865  01F7  1D03               	skipz
  1866  01F8  29FB               	goto	u47_25
  1867  01F9  3008               	movlw	8
  1868  01FA  0274               	subwf	setPin@iPin,w
  1869  01FB                     u47_25:
  1870  01FB  1803               	skipnc
  1871  01FC  29FE               	goto	u47_21
  1872  01FD  29FF               	goto	u47_20
  1873  01FE                     u47_21:
  1874  01FE  2A40               	goto	i1l77
  1875  01FF                     u47_20:
  1876  01FF                     i1l1034:
  1877                           
  1878                           ;utils.c: 27:                 PORTB |= (1<<iPin);
  1879  01FF  3001               	movlw	1
  1880  0200  00F8               	movwf	??_setPin
  1881  0201  0A74               	incf	setPin@iPin,w
  1882  0202  2A05               	goto	u48_24
  1883  0203                     u48_25:
  1884  0203  1003               	clrc
  1885  0204  0DF8               	rlf	??_setPin,f
  1886  0205                     u48_24:
  1887  0205  3EFF               	addlw	-1
  1888  0206  1D03               	skipz
  1889  0207  2A03               	goto	u48_25
  1890  0208  0878               	movf	??_setPin,w
  1891  0209  00F9               	movwf	??_setPin+1
  1892  020A  0879               	movf	??_setPin+1,w
  1893  020B  1283               	bcf	3,5	;RP0=0, select bank0
  1894  020C  1303               	bcf	3,6	;RP1=0, select bank0
  1895  020D  0486               	iorwf	6,f	;volatile
  1896                           
  1897                           ;utils.c: 28:             }else{
  1898  020E  2A40               	goto	i1l77
  1899  020F                     i1l82:	
  1900                           ;utils.c: 32:         case 2:
  1901                           
  1902                           
  1903                           ;utils.c: 33:              if(iPin >= 0 && iPin <= 7){
  1904  020F  1BF5               	btfsc	setPin@iPin+1,7
  1905  0210  2A12               	goto	u49_21
  1906  0211  2A13               	goto	u49_20
  1907  0212                     u49_21:
  1908  0212  2A40               	goto	i1l77
  1909  0213                     u49_20:
  1910  0213                     i1l1036:
  1911  0213  0875               	movf	setPin@iPin+1,w
  1912  0214  3A80               	xorlw	128
  1913  0215  00FF               	movwf	btemp+1
  1914  0216  3080               	movlw	128
  1915  0217  027F               	subwf	btemp+1,w
  1916  0218  1D03               	skipz
  1917  0219  2A1C               	goto	u50_25
  1918  021A  3008               	movlw	8
  1919  021B  0274               	subwf	setPin@iPin,w
  1920  021C                     u50_25:
  1921  021C  1803               	skipnc
  1922  021D  2A1F               	goto	u50_21
  1923  021E  2A20               	goto	u50_20
  1924  021F                     u50_21:
  1925  021F  2A40               	goto	i1l77
  1926  0220                     u50_20:
  1927  0220                     i1l1038:
  1928                           
  1929                           ;utils.c: 34:                 PORTC |= (1<<iPin);
  1930  0220  3001               	movlw	1
  1931  0221  00F8               	movwf	??_setPin
  1932  0222  0A74               	incf	setPin@iPin,w
  1933  0223  2A26               	goto	u51_24
  1934  0224                     u51_25:
  1935  0224  1003               	clrc
  1936  0225  0DF8               	rlf	??_setPin,f
  1937  0226                     u51_24:
  1938  0226  3EFF               	addlw	-1
  1939  0227  1D03               	skipz
  1940  0228  2A24               	goto	u51_25
  1941  0229  0878               	movf	??_setPin,w
  1942  022A  00F9               	movwf	??_setPin+1
  1943  022B  0879               	movf	??_setPin+1,w
  1944  022C  1283               	bcf	3,5	;RP0=0, select bank0
  1945  022D  1303               	bcf	3,6	;RP1=0, select bank0
  1946  022E  0487               	iorwf	7,f	;volatile
  1947                           
  1948                           ;utils.c: 35:             }else{
  1949  022F  2A40               	goto	i1l77
  1950  0230                     i1l1044:
  1951                           
  1952                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1953                           ; Switch size 1, requested type "simple"
  1954                           ; Number of cases is 1, Range of values is 0 to 0
  1955                           ; switch strategies available:
  1956                           ; Name         Instructions Cycles
  1957                           ; simple_byte            4     3 (average)
  1958                           ; direct_byte            7     6 (fixed)
  1959                           ; jumptable            260     6 (fixed)
  1960                           ;	Chosen strategy is simple_byte
  1961  0230  0877               	movf	setPin@iPort+1,w
  1962  0231  3A00               	xorlw	0	; case 0
  1963  0232  1903               	skipnz
  1964  0233  2A35               	goto	i1l1290
  1965  0234  2A40               	goto	i1l77
  1966  0235                     i1l1290:
  1967                           
  1968                           ; Switch size 1, requested type "simple"
  1969                           ; Number of cases is 3, Range of values is 0 to 2
  1970                           ; switch strategies available:
  1971                           ; Name         Instructions Cycles
  1972                           ; direct_byte            9     6 (fixed)
  1973                           ; simple_byte           10     6 (average)
  1974                           ; jumptable            260     6 (fixed)
  1975                           ;	Chosen strategy is simple_byte
  1976  0235  0876               	movf	setPin@iPort,w
  1977  0236  3A00               	xorlw	0	; case 0
  1978  0237  1903               	skipnz
  1979  0238  29C4               	goto	i1l74
  1980  0239  3A01               	xorlw	1	; case 1
  1981  023A  1903               	skipnz
  1982  023B  29E5               	goto	i1l1030
  1983  023C  3A03               	xorlw	3	; case 2
  1984  023D  1903               	skipnz
  1985  023E  2A0F               	goto	i1l82
  1986  023F  2A40               	goto	i1l77
  1987  0240                     i1l77:
  1988  0240  0008               	return
  1989  0241                     __end_of_setPin:
  1990                           
  1991                           	psect	text9
  1992  0142                     __ptext9:	
  1993 ;; *************** function _clearPin *****************
  1994 ;; Defined at:
  1995 ;;		line 46 in file "utils.c"
  1996 ;; Parameters:    Size  Location     Type
  1997 ;;  iPin            2    4[COMMON] int 
  1998 ;;  iPort           2    6[COMMON] int 
  1999 ;; Auto vars:     Size  Location     Type
  2000 ;;		None
  2001 ;; Return value:  Size  Location     Type
  2002 ;;                  1    wreg      void 
  2003 ;; Registers used:
  2004 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  2005 ;; Tracked objects:
  2006 ;;		On entry : 0/0
  2007 ;;		On exit  : 0/0
  2008 ;;		Unchanged: 0/0
  2009 ;; Data sizes:     COMMON   BANK0   BANK1
  2010 ;;      Params:         4       0       0
  2011 ;;      Locals:         0       0       0
  2012 ;;      Temps:          2       0       0
  2013 ;;      Totals:         6       0       0
  2014 ;;Total ram usage:        6 bytes
  2015 ;; Hardware stack levels used: 1
  2016 ;; This function calls:
  2017 ;;		Nothing
  2018 ;; This function is called by:
  2019 ;;		_shiftDisplays
  2020 ;; This function uses a non-reentrant model
  2021 ;;
  2022                           
  2023                           
  2024                           ;psect for function _clearPin
  2025  0142                     _clearPin:
  2026  0142                     i1l1050:	
  2027                           ;incstack = 0
  2028                           ; Regs used in _clearPin: [wreg-fsr0h+status,2+status,0+btemp+1]
  2029                           
  2030                           
  2031                           ;utils.c: 49:     switch(iPort){
  2032  0142  29B2               	goto	i1l1070
  2033  0143                     i1l89:	
  2034                           ;utils.c: 50:         case 0:
  2035                           
  2036                           
  2037                           ;utils.c: 51:             if(iPin >= 0 && iPin <= 5){
  2038  0143  1BF5               	btfsc	clearPin@iPin+1,7
  2039  0144  2946               	goto	u52_21
  2040  0145  2947               	goto	u52_20
  2041  0146                     u52_21:
  2042  0146  29C2               	goto	i1l92
  2043  0147                     u52_20:
  2044  0147                     i1l1052:
  2045  0147  0875               	movf	clearPin@iPin+1,w
  2046  0148  3A80               	xorlw	128
  2047  0149  00FF               	movwf	btemp+1
  2048  014A  3080               	movlw	128
  2049  014B  027F               	subwf	btemp+1,w
  2050  014C  1D03               	skipz
  2051  014D  2950               	goto	u53_25
  2052  014E  3006               	movlw	6
  2053  014F  0274               	subwf	clearPin@iPin,w
  2054  0150                     u53_25:
  2055  0150  1803               	skipnc
  2056  0151  2953               	goto	u53_21
  2057  0152  2954               	goto	u53_20
  2058  0153                     u53_21:
  2059  0153  29C2               	goto	i1l92
  2060  0154                     u53_20:
  2061  0154                     i1l1054:
  2062                           
  2063                           ;utils.c: 52:                 PORTA &= ~(1<<iPin);
  2064  0154  3001               	movlw	1
  2065  0155  00F8               	movwf	??_clearPin
  2066  0156  0A74               	incf	clearPin@iPin,w
  2067  0157  295A               	goto	u54_24
  2068  0158                     u54_25:
  2069  0158  1003               	clrc
  2070  0159  0DF8               	rlf	??_clearPin,f
  2071  015A                     u54_24:
  2072  015A  3EFF               	addlw	-1
  2073  015B  1D03               	skipz
  2074  015C  2958               	goto	u54_25
  2075  015D  0878               	movf	??_clearPin,w
  2076  015E  3AFF               	xorlw	255
  2077  015F  00F9               	movwf	??_clearPin+1
  2078  0160  0879               	movf	??_clearPin+1,w
  2079  0161  1283               	bcf	3,5	;RP0=0, select bank0
  2080  0162  1303               	bcf	3,6	;RP1=0, select bank0
  2081  0163  0585               	andwf	5,f	;volatile
  2082                           
  2083                           ;utils.c: 53:             }else{
  2084  0164  29C2               	goto	i1l92
  2085  0165                     i1l1056:
  2086                           
  2087                           ;utils.c: 58:              if(iPin >= 4 && iPin <= 7){
  2088  0165  0875               	movf	clearPin@iPin+1,w
  2089  0166  3A80               	xorlw	128
  2090  0167  00FF               	movwf	btemp+1
  2091  0168  3080               	movlw	128
  2092  0169  027F               	subwf	btemp+1,w
  2093  016A  1D03               	skipz
  2094  016B  296E               	goto	u55_25
  2095  016C  3004               	movlw	4
  2096  016D  0274               	subwf	clearPin@iPin,w
  2097  016E                     u55_25:
  2098  016E  1C03               	skipc
  2099  016F  2971               	goto	u55_21
  2100  0170  2972               	goto	u55_20
  2101  0171                     u55_21:
  2102  0171  29C2               	goto	i1l92
  2103  0172                     u55_20:
  2104  0172                     i1l1058:
  2105  0172  0875               	movf	clearPin@iPin+1,w
  2106  0173  3A80               	xorlw	128
  2107  0174  00FF               	movwf	btemp+1
  2108  0175  3080               	movlw	128
  2109  0176  027F               	subwf	btemp+1,w
  2110  0177  1D03               	skipz
  2111  0178  297B               	goto	u56_25
  2112  0179  3008               	movlw	8
  2113  017A  0274               	subwf	clearPin@iPin,w
  2114  017B                     u56_25:
  2115  017B  1803               	skipnc
  2116  017C  297E               	goto	u56_21
  2117  017D  297F               	goto	u56_20
  2118  017E                     u56_21:
  2119  017E  29C2               	goto	i1l92
  2120  017F                     u56_20:
  2121  017F                     i1l1060:
  2122                           
  2123                           ;utils.c: 59:                 PORTB &= ~(1<<iPin);
  2124  017F  3001               	movlw	1
  2125  0180  00F8               	movwf	??_clearPin
  2126  0181  0A74               	incf	clearPin@iPin,w
  2127  0182  2985               	goto	u57_24
  2128  0183                     u57_25:
  2129  0183  1003               	clrc
  2130  0184  0DF8               	rlf	??_clearPin,f
  2131  0185                     u57_24:
  2132  0185  3EFF               	addlw	-1
  2133  0186  1D03               	skipz
  2134  0187  2983               	goto	u57_25
  2135  0188  0878               	movf	??_clearPin,w
  2136  0189  3AFF               	xorlw	255
  2137  018A  00F9               	movwf	??_clearPin+1
  2138  018B  0879               	movf	??_clearPin+1,w
  2139  018C  1283               	bcf	3,5	;RP0=0, select bank0
  2140  018D  1303               	bcf	3,6	;RP1=0, select bank0
  2141  018E  0586               	andwf	6,f	;volatile
  2142                           
  2143                           ;utils.c: 60:             }else{
  2144  018F  29C2               	goto	i1l92
  2145  0190                     i1l97:	
  2146                           ;utils.c: 64:         case 2:
  2147                           
  2148                           
  2149                           ;utils.c: 65:              if(iPin >= 0 && iPin <= 7){
  2150  0190  1BF5               	btfsc	clearPin@iPin+1,7
  2151  0191  2993               	goto	u58_21
  2152  0192  2994               	goto	u58_20
  2153  0193                     u58_21:
  2154  0193  29C2               	goto	i1l92
  2155  0194                     u58_20:
  2156  0194                     i1l1062:
  2157  0194  0875               	movf	clearPin@iPin+1,w
  2158  0195  3A80               	xorlw	128
  2159  0196  00FF               	movwf	btemp+1
  2160  0197  3080               	movlw	128
  2161  0198  027F               	subwf	btemp+1,w
  2162  0199  1D03               	skipz
  2163  019A  299D               	goto	u59_25
  2164  019B  3008               	movlw	8
  2165  019C  0274               	subwf	clearPin@iPin,w
  2166  019D                     u59_25:
  2167  019D  1803               	skipnc
  2168  019E  29A0               	goto	u59_21
  2169  019F  29A1               	goto	u59_20
  2170  01A0                     u59_21:
  2171  01A0  29C2               	goto	i1l92
  2172  01A1                     u59_20:
  2173  01A1                     i1l1064:
  2174                           
  2175                           ;utils.c: 66:                 PORTC &= ~(1<<iPin);
  2176  01A1  3001               	movlw	1
  2177  01A2  00F8               	movwf	??_clearPin
  2178  01A3  0A74               	incf	clearPin@iPin,w
  2179  01A4  29A7               	goto	u60_24
  2180  01A5                     u60_25:
  2181  01A5  1003               	clrc
  2182  01A6  0DF8               	rlf	??_clearPin,f
  2183  01A7                     u60_24:
  2184  01A7  3EFF               	addlw	-1
  2185  01A8  1D03               	skipz
  2186  01A9  29A5               	goto	u60_25
  2187  01AA  0878               	movf	??_clearPin,w
  2188  01AB  3AFF               	xorlw	255
  2189  01AC  00F9               	movwf	??_clearPin+1
  2190  01AD  0879               	movf	??_clearPin+1,w
  2191  01AE  1283               	bcf	3,5	;RP0=0, select bank0
  2192  01AF  1303               	bcf	3,6	;RP1=0, select bank0
  2193  01B0  0587               	andwf	7,f	;volatile
  2194                           
  2195                           ;utils.c: 67:             }else{
  2196  01B1  29C2               	goto	i1l92
  2197  01B2                     i1l1070:
  2198                           
  2199                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2200                           ; Switch size 1, requested type "simple"
  2201                           ; Number of cases is 1, Range of values is 0 to 0
  2202                           ; switch strategies available:
  2203                           ; Name         Instructions Cycles
  2204                           ; simple_byte            4     3 (average)
  2205                           ; direct_byte            7     6 (fixed)
  2206                           ; jumptable            260     6 (fixed)
  2207                           ;	Chosen strategy is simple_byte
  2208  01B2  0877               	movf	clearPin@iPort+1,w
  2209  01B3  3A00               	xorlw	0	; case 0
  2210  01B4  1903               	skipnz
  2211  01B5  29B7               	goto	i1l1292
  2212  01B6  29C2               	goto	i1l92
  2213  01B7                     i1l1292:
  2214                           
  2215                           ; Switch size 1, requested type "simple"
  2216                           ; Number of cases is 3, Range of values is 0 to 2
  2217                           ; switch strategies available:
  2218                           ; Name         Instructions Cycles
  2219                           ; direct_byte            9     6 (fixed)
  2220                           ; simple_byte           10     6 (average)
  2221                           ; jumptable            260     6 (fixed)
  2222                           ;	Chosen strategy is simple_byte
  2223  01B7  0876               	movf	clearPin@iPort,w
  2224  01B8  3A00               	xorlw	0	; case 0
  2225  01B9  1903               	skipnz
  2226  01BA  2943               	goto	i1l89
  2227  01BB  3A01               	xorlw	1	; case 1
  2228  01BC  1903               	skipnz
  2229  01BD  2965               	goto	i1l1056
  2230  01BE  3A03               	xorlw	3	; case 2
  2231  01BF  1903               	skipnz
  2232  01C0  2990               	goto	i1l97
  2233  01C1  29C2               	goto	i1l92
  2234  01C2                     i1l92:
  2235  01C2  0008               	return
  2236  01C3                     __end_of_clearPin:
  2237                           
  2238                           	psect	text10
  2239  0318                     __ptext10:	
  2240 ;; *************** function ___llmod *****************
  2241 ;; Defined at:
  2242 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\llmod.c"
  2243 ;; Parameters:    Size  Location     Type
  2244 ;;  divisor         4    0[COMMON] unsigned long 
  2245 ;;  dividend        4    4[COMMON] unsigned long 
  2246 ;; Auto vars:     Size  Location     Type
  2247 ;;  counter         1    9[COMMON] unsigned char 
  2248 ;; Return value:  Size  Location     Type
  2249 ;;                  4    0[COMMON] unsigned long 
  2250 ;; Registers used:
  2251 ;;		wreg, status,2, status,0
  2252 ;; Tracked objects:
  2253 ;;		On entry : 0/0
  2254 ;;		On exit  : 0/0
  2255 ;;		Unchanged: 0/0
  2256 ;; Data sizes:     COMMON   BANK0   BANK1
  2257 ;;      Params:         8       0       0
  2258 ;;      Locals:         1       0       0
  2259 ;;      Temps:          1       0       0
  2260 ;;      Totals:        10       0       0
  2261 ;;Total ram usage:       10 bytes
  2262 ;; Hardware stack levels used: 1
  2263 ;; This function calls:
  2264 ;;		Nothing
  2265 ;; This function is called by:
  2266 ;;		_my_isr_routine
  2267 ;; This function uses a non-reentrant model
  2268 ;;
  2269                           
  2270                           
  2271                           ;psect for function ___llmod
  2272  0318                     ___llmod:
  2273  0318                     i1l1178:	
  2274                           ;incstack = 0
  2275                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  2276                           
  2277  0318  0873               	movf	___llmod@divisor+3,w
  2278  0319  0472               	iorwf	___llmod@divisor+2,w
  2279  031A  0471               	iorwf	___llmod@divisor+1,w
  2280  031B  0470               	iorwf	___llmod@divisor,w
  2281  031C  1903               	skipnz
  2282  031D  2B1F               	goto	u68_21
  2283  031E  2B20               	goto	u68_20
  2284  031F                     u68_21:
  2285  031F  2B63               	goto	i1l1194
  2286  0320                     u68_20:
  2287  0320                     i1l1180:
  2288  0320  01F9               	clrf	___llmod@counter
  2289  0321  0AF9               	incf	___llmod@counter,f
  2290  0322  2B30               	goto	i1l1184
  2291  0323                     i1l1182:
  2292  0323  3001               	movlw	1
  2293  0324  00F8               	movwf	??___llmod
  2294  0325                     u69_25:
  2295  0325  1003               	clrc
  2296  0326  0DF0               	rlf	___llmod@divisor,f
  2297  0327  0DF1               	rlf	___llmod@divisor+1,f
  2298  0328  0DF2               	rlf	___llmod@divisor+2,f
  2299  0329  0DF3               	rlf	___llmod@divisor+3,f
  2300  032A  0BF8               	decfsz	??___llmod,f
  2301  032B  2B25               	goto	u69_25
  2302  032C  3001               	movlw	1
  2303  032D  00F8               	movwf	??___llmod
  2304  032E  0878               	movf	??___llmod,w
  2305  032F  07F9               	addwf	___llmod@counter,f
  2306  0330                     i1l1184:
  2307  0330  1FF3               	btfss	___llmod@divisor+3,7
  2308  0331  2B33               	goto	u70_21
  2309  0332  2B34               	goto	u70_20
  2310  0333                     u70_21:
  2311  0333  2B23               	goto	i1l1182
  2312  0334                     u70_20:
  2313  0334                     i1l1186:
  2314  0334  0873               	movf	___llmod@divisor+3,w
  2315  0335  0277               	subwf	___llmod@dividend+3,w
  2316  0336  1D03               	skipz
  2317  0337  2B42               	goto	u71_25
  2318  0338  0872               	movf	___llmod@divisor+2,w
  2319  0339  0276               	subwf	___llmod@dividend+2,w
  2320  033A  1D03               	skipz
  2321  033B  2B42               	goto	u71_25
  2322  033C  0871               	movf	___llmod@divisor+1,w
  2323  033D  0275               	subwf	___llmod@dividend+1,w
  2324  033E  1D03               	skipz
  2325  033F  2B42               	goto	u71_25
  2326  0340  0870               	movf	___llmod@divisor,w
  2327  0341  0274               	subwf	___llmod@dividend,w
  2328  0342                     u71_25:
  2329  0342  1C03               	skipc
  2330  0343  2B45               	goto	u71_21
  2331  0344  2B46               	goto	u71_20
  2332  0345                     u71_21:
  2333  0345  2B54               	goto	i1l1190
  2334  0346                     u71_20:
  2335  0346                     i1l1188:
  2336  0346  0870               	movf	___llmod@divisor,w
  2337  0347  02F4               	subwf	___llmod@dividend,f
  2338  0348  0871               	movf	___llmod@divisor+1,w
  2339  0349  1C03               	skipc
  2340  034A  0F71               	incfsz	___llmod@divisor+1,w
  2341  034B  02F5               	subwf	___llmod@dividend+1,f
  2342  034C  0872               	movf	___llmod@divisor+2,w
  2343  034D  1C03               	skipc
  2344  034E  0F72               	incfsz	___llmod@divisor+2,w
  2345  034F  02F6               	subwf	___llmod@dividend+2,f
  2346  0350  0873               	movf	___llmod@divisor+3,w
  2347  0351  1C03               	skipc
  2348  0352  0F73               	incfsz	___llmod@divisor+3,w
  2349  0353  02F7               	subwf	___llmod@dividend+3,f
  2350  0354                     i1l1190:
  2351  0354  3001               	movlw	1
  2352  0355                     u72_25:
  2353  0355  1003               	clrc
  2354  0356  0CF3               	rrf	___llmod@divisor+3,f
  2355  0357  0CF2               	rrf	___llmod@divisor+2,f
  2356  0358  0CF1               	rrf	___llmod@divisor+1,f
  2357  0359  0CF0               	rrf	___llmod@divisor,f
  2358  035A  3EFF               	addlw	-1
  2359  035B  1D03               	skipz
  2360  035C  2B55               	goto	u72_25
  2361  035D                     i1l1192:
  2362  035D  3001               	movlw	1
  2363  035E  02F9               	subwf	___llmod@counter,f
  2364  035F  1D03               	btfss	3,2
  2365  0360  2B62               	goto	u73_21
  2366  0361  2B63               	goto	u73_20
  2367  0362                     u73_21:
  2368  0362  2B34               	goto	i1l1186
  2369  0363                     u73_20:
  2370  0363                     i1l1194:
  2371  0363  0877               	movf	___llmod@dividend+3,w
  2372  0364  00F3               	movwf	?___llmod+3
  2373  0365  0876               	movf	___llmod@dividend+2,w
  2374  0366  00F2               	movwf	?___llmod+2
  2375  0367  0875               	movf	___llmod@dividend+1,w
  2376  0368  00F1               	movwf	?___llmod+1
  2377  0369  0874               	movf	___llmod@dividend,w
  2378  036A  00F0               	movwf	?___llmod
  2379  036B                     i1l450:
  2380  036B  0008               	return
  2381  036C                     __end_of___llmod:
  2382  007E                     btemp	set	126	;btemp
  2383  007E                     wtemp0	set	126
  2384                           
  2385                           	psect	config
  2386                           
  2387                           ;Config register CONFIG @ 0x2007
  2388                           ;	Oscillator Selection bits
  2389                           ;	FOSC = INTRCIO, INTOSCIO oscillator: I/O function on RA4/OSC2/CLKOUT pin, I/O function
      +                           on RA5/OSC1/CLKIN
  2390                           ;	Watchdog Timer Enable bit
  2391                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2392                           ;	Power-up Timer Enable bit
  2393                           ;	PWRTE = OFF, PWRT disabled
  2394                           ;	MCLR Pin Function Select bit
  2395                           ;	MCLRE = OFF, MCLR pin function is digital input, MCLR internally tied to VDD
  2396                           ;	Code Protection bit
  2397                           ;	CP = OFF, Program memory code protection is disabled
  2398                           ;	Data Code Protection bit
  2399                           ;	CPD = OFF, Data memory code protection is disabled
  2400                           ;	Brown-out Reset Selection bits
  2401                           ;	BOREN = OFF, BOR disabled
  2402                           ;	Internal External Switchover bit
  2403                           ;	IESO = OFF, Internal External Switchover mode is disabled
  2404                           ;	Fail-Safe Clock Monitor Enabled bit
  2405                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2406  2007                     	org	8199
  2407  2007  30D4               	dw	12500

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         6
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     35      42
    BANK1            32      0       0

Pointer List with Targets:

    Display7seg4digitsVetor	PTR struct Display size(1) Largest target is 20
		 -> NULL(NULL[0]), main@display7seg(BANK0[20]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _my_isr_routine in COMMON

    _my_isr_routine->_shiftDisplays
    _shiftDisplays->_clearPin
    _shiftDisplays->_setPin
    _setPin->i1___bmul
    _clearPin->i1___bmul

Critical Paths under _main in BANK0

    _main->_writeCharOnDisplay
    _writeCharOnDisplay->___bmul

Critical Paths under _my_isr_routine in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _my_isr_routine in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                21    21      0    1572
                                             14 BANK0     21    21      0
                        _configBoard
                        _initDisplay
                 _writeCharOnDisplay
 ---------------------------------------------------------------------------------
 (1) _writeCharOnDisplay                                   6     4      2    1497
                                              8 BANK0      6     4      2
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     863
                                              4 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _initDisplay                                          1     1      0       0
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _configBoard                                          1     1      0       0
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _my_isr_routine                                       4     4      0    1277
                                              0 BANK0      4     4      0
                            ___llmod
                      _shiftDisplays
 ---------------------------------------------------------------------------------
 (4) _shiftDisplays                                        4     4      0     966
                                             10 COMMON     4     4      0
                           _clearPin
                             _setPin
                           i1___bmul
 ---------------------------------------------------------------------------------
 (5) i1___bmul                                             4     3      1     222
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (5) _setPin                                               6     2      4     372
                                              4 COMMON     6     2      4
                           i1___bmul (ARG)
 ---------------------------------------------------------------------------------
 (5) _clearPin                                             6     2      4     372
                                              4 COMMON     6     2      4
                           i1___bmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___llmod                                             10     2      8     311
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _configBoard
   _initDisplay
   _writeCharOnDisplay
     ___bmul

 _my_isr_routine (ROOT)
   ___llmod
   _shiftDisplays
     _clearPin
       i1___bmul (ARG)
     _setPin
       i1___bmul (ARG)
     i1___bmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            50      0       0       3        0.0%
BANK0               50     23      2A       4       52.5%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BITBANK1            20      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BANK1               20      0       0       6        0.0%
ABS                  0      0      38       7        0.0%
DATA                 0      0      38       8        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Nov 18 10:46:17 2021

               ___bmul@product 0026                             l60 03D6                             l54 0403  
                           l55 0403                            l122 0317                            l128 0141  
                          l254 041B                            _GIE 005F                            u610 040D  
                          u611 040C                            u620 041A                            u621 0419  
                          u660 0022                            u661 0021                            u670 002F  
                          u671 002E                            u675 002B                            fsr0 0004  
                          indf 0000                           l1120 03C4                           l1130 03CD  
                         l1122 03C6                           l1114 03A8                           l1210 03D8  
                         l1132 03CE                           l1124 03CA                           l1116 03AB  
                         l1140 02BB                           l1220 03E4                           l1212 03DC  
                         l1134 03CF                           l1126 03CB                           l1118 03B3  
                         l1150 0056                           l1142 001E                           l1222 03EB  
                         l1214 03DE                           l1136 03D3                           l1128 03CC  
                         l1080 040D                           l1160 00B5                           l1152 0069  
                         l1144 0022                           l1224 03F3                           l1216 03DF  
                         l1208 03D7                           l1138 03D5                           l1082 0411  
                         l1162 00C8                           l1154 007C                           l1146 0030  
                         l1226 03FB                           l1218 03E3                           l1084 0413  
                         l1076 0408                           l1164 00DB                           l1156 008F  
                         l1148 0043                           l1172 0114                           l1086 041A  
                         l1078 0409                           l1166 00EE                           l1158 00A2  
                         l1168 0101                           l1288 011E                           _T0IE 005D  
                         _T0IF 005A                           _PEIE 005E                           _INTE 005C  
                         i1l49 039B                           i1l82 020F                           i1l74 01C4  
                         i1l92 01C2                           i1l77 0240                           i1l97 0190  
                         i1l89 0143                           _TMR0 0001                           _main 03D7  
                         btemp 007E                           start 0010              ___bmul@multiplier 0027  
                 ?_initDisplay 0070                          ?_main 0070                __end_of___llmod 036C  
                        i1l119 02BA                          i1l254 0430                          i1l450 036B  
                        u50_20 0220                          u50_21 021F                          u50_25 021C  
                        u43_20 01C8                          u43_21 01C7                          _PORTA 0005  
                        _PORTB 0006                          _PORTC 0007                          u51_24 0226  
                        u51_25 0224                          u52_20 0147                          u44_20 01D5  
                        u52_21 0146                          u44_21 01D4                          u60_24 01A7  
                        u60_25 01A5                          u44_25 01D1                          u53_20 0154  
                        u53_21 0153                          u45_24 01DB                          u53_25 0150  
                        u45_25 01D9                          u70_20 0334                          u46_20 01F2  
                        u70_21 0333                          u46_21 01F1                          u54_24 015A  
                        u54_25 0158                          u46_25 01EE                          u71_20 0346  
                        u55_20 0172                          u47_20 01FF                          u63_20 0422  
                        u71_21 0345                          u55_21 0171                          u47_21 01FE  
                        u63_21 0421                          u71_25 0342                          u55_25 016E  
                        u47_25 01FB                          u56_20 017F                          u64_20 042F  
                        u56_21 017E                          u64_21 042E                          u48_24 0205  
                        u72_25 0355                          u56_25 017B                          u48_25 0203  
                        u73_20 0363                          u49_20 0213                          u65_20 027E  
                        u73_21 0362                          u49_21 0212                          u65_21 027D  
                        _TRISA 0085                          u57_24 0185                          _TRISB 0086  
                        u57_25 0183                          u65_25 027A                          _TRISC 0087  
                        u58_20 0194                          u74_20 0370                          u58_21 0193  
                        u74_21 036F                          u59_20 01A1                          u75_20 039A  
                        u59_21 01A0                          u75_21 0399                          u59_25 019D  
                        u68_20 0320                          u68_21 031F                          u69_25 0325  
                _indiceDisplay 0047               __end_ofi1___bmul 0431                          pclath 000A  
                        status 0003     __end_of_writeCharOnDisplay 0142                          wtemp0 007E  
              __initialization 0011                   __end_of_main 0405                         ??_main 002E  
             ___llmod@dividend 0074                         i1l1100 042F                         i1l1030 01E5  
                       i1l1110 0282                         i1l1032 01F2                         i1l1024 01C3  
                       i1l1112 0294                         i1l1104 0241                         i1l1200 0370  
                       i1l1050 0142                         i1l1034 01FF                         i1l1026 01C8  
                       i1l1106 0269                         i1l1202 0371                         i1l1060 017F  
                       i1l1052 0147                         i1l1036 0213                         i1l1028 01D5  
                       i1l1044 0230                         i1l1108 027E                         i1l1204 0381  
                       i1l1062 0194                         i1l1054 0154                         i1l1070 01B2  
                       i1l1038 0220                         i1l1206 039A                         i1l1064 01A1  
                       i1l1056 0165                         i1l1058 0172                         i1l1090 041D  
                       i1l1180 0320                         i1l1092 041E                         i1l1190 0354  
                       i1l1182 0323                         i1l1094 0422                         i1l1192 035D  
                       i1l1184 0330                         i1l1096 0426                         i1l1186 0334  
                       i1l1194 0363                         i1l1178 0318                         i1l1290 0235  
                       i1l1098 0428                         i1l1188 0346                         i1l1292 01B7  
                       i1l1198 036C                         _OSCCON 008F               __end_of_clearPin 01C3  
         __size_of_configBoard 002F                         ___bmul 0405          __end_of_shiftDisplays 02BB  
                    ??___llmod 0078                         _setPin 01C3  writeCharOnDisplay@chCharacter 002D  
                       saved_w 007E        __end_of__initialization 0019            ___bmul@multiplicand 0024  
               __pcstackCOMMON 0070           __size_of_initDisplay 005D                      ?i1___bmul 0070  
             i1___bmul@product 0072                     __pbssBANK0 0043                     __pmaintext 03D7  
                      ?___bmul 0024                     __pintentry 0004                    setPin@iPort 0076  
                      ?_setPin 0074                     ??i1___bmul 0071                      ?_clearPin 0074  
      __size_of_my_isr_routine 003C                __size_of___bmul 0017                        ___llmod 0318  
           _writeCharOnDisplay 001B                __size_of_setPin 007E                        __ptext1 001B  
                      __ptext2 0405                        __ptext3 02BB                        __ptext4 03A8  
                      __ptext5 036C                        __ptext6 0241                        __ptext7 041C  
                      __ptext8 01C3                        __ptext9 0142            ?_writeCharOnDisplay 0028  
                   ??_clearPin 0078            i1___bmul@multiplier 0073           end_of_initialization 0019  
         ??_writeCharOnDisplay 002A                  clearPin@iPort 0076                  ??_configBoard 0024  
               __end_of___bmul 041C                 __end_of_setPin 0241              __size_ofi1___bmul 0015  
          start_initialization 0011                 _my_isr_routine 036C         __size_of_shiftDisplays 007A  
              ___llmod@divisor 0070                ___llmod@counter 0079                  ??_initDisplay 0024  
                     ??___bmul 0025            __end_of_configBoard 03D7     writeCharOnDisplay@iDisplay 0028  
                     ??_setPin 0078                      ___latbits 0000                  __pcstackBANK0 0020  
       __end_of_my_isr_routine 03A8              __size_of_clearPin 0081                      __pnvBANK0 0049  
              main@display7seg 002F                     setPin@iPin 0074                       ?___llmod 0070  
                _shiftDisplays 0241            __end_of_initDisplay 0318                ?_my_isr_routine 0070  
            interrupt_function 0004                    _configBoard 03A8          i1___bmul@multiplicand 0070  
               ?_shiftDisplays 0070                       i1___bmul 041C                   clearPin@iPin 0074  
  __size_of_writeCharOnDisplay 0127                    _initDisplay 02BB               __size_of___llmod 0054  
      _Display7seg4digitsVetor 0049                       _clearPin 0142                       __ptext10 0318  
                  _uiCounterms 0043                  __size_of_main 002E                ??_shiftDisplays 007A  
                     intlevel1 0000               ??_my_isr_routine 0020                     _OPTION_REG 0081  
                 ?_configBoard 0070  

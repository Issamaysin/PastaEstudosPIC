

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Nov 17 13:11:23 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F687
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.20
    15                           ; Generated 12/02/2020 GMT
    16                           ; 
    17                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F687 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  000A                     	;# 
    57  000B                     	;# 
    58  000C                     	;# 
    59  000D                     	;# 
    60  000E                     	;# 
    61  000E                     	;# 
    62  000F                     	;# 
    63  0010                     	;# 
    64  0013                     	;# 
    65  0014                     	;# 
    66  0018                     	;# 
    67  0019                     	;# 
    68  001A                     	;# 
    69  001E                     	;# 
    70  001F                     	;# 
    71  0081                     	;# 
    72  0085                     	;# 
    73  0086                     	;# 
    74  0087                     	;# 
    75  008C                     	;# 
    76  008D                     	;# 
    77  008E                     	;# 
    78  008F                     	;# 
    79  0090                     	;# 
    80  0093                     	;# 
    81  0093                     	;# 
    82  0093                     	;# 
    83  0094                     	;# 
    84  0095                     	;# 
    85  0095                     	;# 
    86  0096                     	;# 
    87  0096                     	;# 
    88  0097                     	;# 
    89  0098                     	;# 
    90  0099                     	;# 
    91  009A                     	;# 
    92  009B                     	;# 
    93  009E                     	;# 
    94  009F                     	;# 
    95  010C                     	;# 
    96  010C                     	;# 
    97  010D                     	;# 
    98  0115                     	;# 
    99  0116                     	;# 
   100  0118                     	;# 
   101  0119                     	;# 
   102  011A                     	;# 
   103  011B                     	;# 
   104  011E                     	;# 
   105  011F                     	;# 
   106  018C                     	;# 
   107  018D                     	;# 
   108  019E                     	;# 
   109  0000                     	;# 
   110  0001                     	;# 
   111  0002                     	;# 
   112  0003                     	;# 
   113  0004                     	;# 
   114  0005                     	;# 
   115  0006                     	;# 
   116  0007                     	;# 
   117  000A                     	;# 
   118  000B                     	;# 
   119  000C                     	;# 
   120  000D                     	;# 
   121  000E                     	;# 
   122  000E                     	;# 
   123  000F                     	;# 
   124  0010                     	;# 
   125  0013                     	;# 
   126  0014                     	;# 
   127  0018                     	;# 
   128  0019                     	;# 
   129  001A                     	;# 
   130  001E                     	;# 
   131  001F                     	;# 
   132  0081                     	;# 
   133  0085                     	;# 
   134  0086                     	;# 
   135  0087                     	;# 
   136  008C                     	;# 
   137  008D                     	;# 
   138  008E                     	;# 
   139  008F                     	;# 
   140  0090                     	;# 
   141  0093                     	;# 
   142  0093                     	;# 
   143  0093                     	;# 
   144  0094                     	;# 
   145  0095                     	;# 
   146  0095                     	;# 
   147  0096                     	;# 
   148  0096                     	;# 
   149  0097                     	;# 
   150  0098                     	;# 
   151  0099                     	;# 
   152  009A                     	;# 
   153  009B                     	;# 
   154  009E                     	;# 
   155  009F                     	;# 
   156  010C                     	;# 
   157  010C                     	;# 
   158  010D                     	;# 
   159  0115                     	;# 
   160  0116                     	;# 
   161  0118                     	;# 
   162  0119                     	;# 
   163  011A                     	;# 
   164  011B                     	;# 
   165  011E                     	;# 
   166  011F                     	;# 
   167  018C                     	;# 
   168  018D                     	;# 
   169  019E                     	;# 
   170  0000                     	;# 
   171  0001                     	;# 
   172  0002                     	;# 
   173  0003                     	;# 
   174  0004                     	;# 
   175  0005                     	;# 
   176  0006                     	;# 
   177  0007                     	;# 
   178  000A                     	;# 
   179  000B                     	;# 
   180  000C                     	;# 
   181  000D                     	;# 
   182  000E                     	;# 
   183  000E                     	;# 
   184  000F                     	;# 
   185  0010                     	;# 
   186  0013                     	;# 
   187  0014                     	;# 
   188  0018                     	;# 
   189  0019                     	;# 
   190  001A                     	;# 
   191  001E                     	;# 
   192  001F                     	;# 
   193  0081                     	;# 
   194  0085                     	;# 
   195  0086                     	;# 
   196  0087                     	;# 
   197  008C                     	;# 
   198  008D                     	;# 
   199  008E                     	;# 
   200  008F                     	;# 
   201  0090                     	;# 
   202  0093                     	;# 
   203  0093                     	;# 
   204  0093                     	;# 
   205  0094                     	;# 
   206  0095                     	;# 
   207  0095                     	;# 
   208  0096                     	;# 
   209  0096                     	;# 
   210  0097                     	;# 
   211  0098                     	;# 
   212  0099                     	;# 
   213  009A                     	;# 
   214  009B                     	;# 
   215  009E                     	;# 
   216  009F                     	;# 
   217  010C                     	;# 
   218  010C                     	;# 
   219  010D                     	;# 
   220  0115                     	;# 
   221  0116                     	;# 
   222  0118                     	;# 
   223  0119                     	;# 
   224  011A                     	;# 
   225  011B                     	;# 
   226  011E                     	;# 
   227  011F                     	;# 
   228  018C                     	;# 
   229  018D                     	;# 
   230  019E                     	;# 
   231  0007                     _PORTC	set	7
   232  0006                     _PORTB	set	6
   233  0001                     _TMR0	set	1
   234  005C                     _INTE	set	92
   235  005D                     _T0IE	set	93
   236  005E                     _PEIE	set	94
   237  005F                     _GIE	set	95
   238  005A                     _T0IF	set	90
   239  0087                     _TRISC	set	135
   240  0086                     _TRISB	set	134
   241  0081                     _OPTION_REG	set	129
   242  008F                     _OSCCON	set	143
   243                           
   244                           	psect	cinit
   245  000B                     start_initialization:	
   246                           ; #config settings
   247                           
   248  000B                     __initialization:
   249                           
   250                           ; Clear objects allocated to BANK0
   251  000B  1283               	bcf	3,5	;RP0=0, select bank0
   252  000C  1303               	bcf	3,6	;RP1=0, select bank0
   253  000D  01AC               	clrf	__pbssBANK0& (0+127)
   254  000E  01AD               	clrf	(__pbssBANK0+1)& (0+127)
   255  000F  01AE               	clrf	(__pbssBANK0+2)& (0+127)
   256  0010  01AF               	clrf	(__pbssBANK0+3)& (0+127)
   257  0011                     end_of_initialization:	
   258                           ;End of C runtime variable initialization code
   259                           
   260  0011                     __end_of__initialization:
   261  0011  0183               	clrf	3
   262  0012  2813               	ljmp	_main	;jump to C main() function
   263                           
   264                           	psect	bssBANK0
   265  002C                     __pbssBANK0:
   266  002C                     _uiCounterms:
   267  002C                     	ds	4
   268                           
   269                           	psect	cstackCOMMON
   270  0070                     __pcstackCOMMON:
   271  0070                     ?_my_isr_routine:
   272  0070                     ??_my_isr_routine:	
   273                           ; 1 bytes @ 0x0
   274                           
   275  0070                     ?_main:	
   276                           ; 1 bytes @ 0x0
   277                           
   278                           
   279                           ; 1 bytes @ 0x0
   280  0070                     	ds	2
   281  0072                     ??_main:
   282                           
   283                           ; 1 bytes @ 0x2
   284  0072                     	ds	4
   285                           
   286                           	psect	cstackBANK0
   287  0020                     __pcstackBANK0:
   288  0020                     main@uiContadorTempo:
   289                           
   290                           ; 4 bytes @ 0x0
   291  0020                     	ds	4
   292  0024                     main@text:
   293                           
   294                           ; 6 bytes @ 0x4
   295  0024                     	ds	6
   296  002A                     main@indice:
   297                           
   298                           ; 2 bytes @ 0xA
   299  002A                     	ds	2
   300                           
   301                           	psect	maintext
   302  0013                     __pmaintext:	
   303 ;;
   304 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   305 ;;
   306 ;; *************** function _main *****************
   307 ;; Defined at:
   308 ;;		line 50 in file "main.c"
   309 ;; Parameters:    Size  Location     Type
   310 ;;		None
   311 ;; Auto vars:     Size  Location     Type
   312 ;;  text            6    4[BANK0 ] unsigned char [6]
   313 ;;  uiContadorTe    4    0[BANK0 ] unsigned long 
   314 ;;  indice          2   10[BANK0 ] int 
   315 ;; Return value:  Size  Location     Type
   316 ;;                  1    wreg      void 
   317 ;; Registers used:
   318 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
   319 ;; Tracked objects:
   320 ;;		On entry : B00/0
   321 ;;		On exit  : 0/0
   322 ;;		Unchanged: 0/0
   323 ;; Data sizes:     COMMON   BANK0   BANK1
   324 ;;      Params:         0       0       0
   325 ;;      Locals:         0      12       0
   326 ;;      Temps:          4       0       0
   327 ;;      Totals:         4      12       0
   328 ;;Total ram usage:       16 bytes
   329 ;; Hardware stack levels required when called: 1
   330 ;; This function calls:
   331 ;;		Nothing
   332 ;; This function is called by:
   333 ;;		Startup code after reset
   334 ;; This function uses a non-reentrant model
   335 ;;
   336                           
   337                           
   338                           ;psect for function _main
   339  0013                     _main:
   340  0013                     l715:	
   341                           ;incstack = 0
   342                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1]
   343                           
   344                           
   345                           ;main.c: 60:     OSCCON |= (1<<0);
   346  0013  1683               	bsf	3,5	;RP0=1, select bank1
   347  0014  1303               	bcf	3,6	;RP1=0, select bank1
   348  0015  140F               	bsf	15,0	;volatile
   349  0016                     l717:
   350                           
   351                           ;main.c: 61:     OSCCON &= ~(1<<1);
   352  0016  30FD               	movlw	253
   353  0017  00F2               	movwf	??_main
   354  0018  0872               	movf	??_main,w
   355  0019  058F               	andwf	15,f	;volatile
   356  001A                     l719:
   357                           
   358                           ;main.c: 62:     OSCCON |= (1<<2);
   359  001A  150F               	bsf	15,2	;volatile
   360                           
   361                           ;main.c: 63:     OSCCON &= ~(1<<3);
   362  001B  30F7               	movlw	247
   363  001C  00F2               	movwf	??_main
   364  001D  0872               	movf	??_main,w
   365  001E  058F               	andwf	15,f	;volatile
   366                           
   367                           ;main.c: 64:     OSCCON |= (0b01110000);
   368  001F  3070               	movlw	112
   369  0020  00F2               	movwf	??_main
   370  0021  0872               	movf	??_main,w
   371  0022  048F               	iorwf	15,f	;volatile
   372  0023                     l721:
   373                           
   374                           ;main.c: 73:     OPTION_REG = 0b00000011;
   375  0023  3003               	movlw	3
   376  0024  0081               	movwf	1	;volatile
   377  0025                     l723:
   378                           
   379                           ;main.c: 74:     TMR0= 133;
   380  0025  3085               	movlw	133
   381  0026  1283               	bcf	3,5	;RP0=0, select bank0
   382  0027  1303               	bcf	3,6	;RP1=0, select bank0
   383  0028  0081               	movwf	1	;volatile
   384  0029                     l725:
   385                           
   386                           ;main.c: 76:     GIE=1;
   387  0029  178B               	bsf	11,7	;volatile
   388  002A                     l727:
   389                           
   390                           ;main.c: 77:     PEIE=1;
   391  002A  170B               	bsf	11,6	;volatile
   392  002B                     l729:
   393                           
   394                           ;main.c: 78:     T0IE=1;
   395  002B  168B               	bsf	11,5	;volatile
   396  002C                     l731:
   397                           
   398                           ;main.c: 79:     INTE = 0;
   399  002C  120B               	bcf	11,4	;volatile
   400  002D                     l733:
   401                           
   402                           ;main.c: 80:     T0IF = 0;
   403  002D  110B               	bcf	11,2	;volatile
   404  002E                     l735:
   405                           
   406                           ;main.c: 84:     TRISB = 0x00;
   407  002E  1683               	bsf	3,5	;RP0=1, select bank1
   408  002F  1303               	bcf	3,6	;RP1=0, select bank1
   409  0030  0186               	clrf	6	;volatile
   410  0031                     l737:
   411                           
   412                           ;main.c: 85:     TRISC = 0x00;
   413  0031  0187               	clrf	7	;volatile
   414  0032                     l739:
   415                           
   416                           ;main.c: 86:     PORTB = 0b11100000;
   417  0032  30E0               	movlw	224
   418  0033  1283               	bcf	3,5	;RP0=0, select bank0
   419  0034  1303               	bcf	3,6	;RP1=0, select bank0
   420  0035  0086               	movwf	6	;volatile
   421  0036                     l741:
   422                           
   423                           ;main.c: 87:     PORTC = 0b11111111;
   424  0036  30FF               	movlw	255
   425  0037  0087               	movwf	7	;volatile
   426  0038                     l743:
   427                           
   428                           ;main.c: 90:     unsigned long uiContadorTempo = 0;
   429  0038  3000               	movlw	0
   430  0039  00A3               	movwf	main@uiContadorTempo+3
   431  003A  3000               	movlw	0
   432  003B  00A2               	movwf	main@uiContadorTempo+2
   433  003C  3000               	movlw	0
   434  003D  00A1               	movwf	main@uiContadorTempo+1
   435  003E  3000               	movlw	0
   436  003F  00A0               	movwf	main@uiContadorTempo
   437  0040                     l745:
   438                           
   439                           ;main.c: 93:     char text[6];;main.c: 94:     text[0] = 0b01110111;
   440  0040  3077               	movlw	119
   441  0041  00F2               	movwf	??_main
   442  0042  0872               	movf	??_main,w
   443  0043  00A4               	movwf	main@text
   444  0044                     l747:
   445                           
   446                           ;main.c: 95:     text[1] = 0b01111100;
   447  0044  307C               	movlw	124
   448  0045  00F2               	movwf	??_main
   449  0046  0872               	movf	??_main,w
   450  0047  00A5               	movwf	main@text+1
   451  0048                     l749:
   452                           
   453                           ;main.c: 96:     text[2] = 0b00111001;
   454  0048  3039               	movlw	57
   455  0049  00F2               	movwf	??_main
   456  004A  0872               	movf	??_main,w
   457  004B  00A6               	movwf	main@text+2
   458  004C                     l751:
   459                           
   460                           ;main.c: 97:     text[3] = 0b01011110;
   461  004C  305E               	movlw	94
   462  004D  00F2               	movwf	??_main
   463  004E  0872               	movf	??_main,w
   464  004F  00A7               	movwf	main@text+3
   465  0050                     l753:
   466                           
   467                           ;main.c: 98:     text[4] = 0b01111001;
   468  0050  3079               	movlw	121
   469  0051  00F2               	movwf	??_main
   470  0052  0872               	movf	??_main,w
   471  0053  00A8               	movwf	main@text+4
   472  0054                     l755:
   473                           
   474                           ;main.c: 99:     text[5] = 0b01110001;
   475  0054  3071               	movlw	113
   476  0055  00F2               	movwf	??_main
   477  0056  0872               	movf	??_main,w
   478  0057  00A9               	movwf	main@text+5
   479  0058                     l757:
   480                           
   481                           ;main.c: 104:     int indice = 0;
   482  0058  01AA               	clrf	main@indice
   483  0059  01AB               	clrf	main@indice+1
   484  005A                     l759:
   485                           
   486                           ;main.c: 105:     PORTC = text[indice];
   487  005A  0824               	movf	main@text,w
   488  005B  0087               	movwf	7	;volatile
   489  005C                     l761:
   490                           
   491                           ;main.c: 106:     indice++;
   492  005C  3001               	movlw	1
   493  005D  07AA               	addwf	main@indice,f
   494  005E  1803               	skipnc
   495  005F  0AAB               	incf	main@indice+1,f
   496  0060  3000               	movlw	0
   497  0061  07AB               	addwf	main@indice+1,f
   498  0062                     l763:
   499                           
   500                           ;main.c: 111:         if((uiCounterms - uiContadorTempo) > 1000 ){
   501  0062  1283               	bcf	3,5	;RP0=0, select bank0
   502  0063  1303               	bcf	3,6	;RP1=0, select bank0
   503  0064  082C               	movf	_uiCounterms,w
   504  0065  00F2               	movwf	??_main
   505  0066  082D               	movf	_uiCounterms+1,w
   506  0067  00F3               	movwf	??_main+1
   507  0068  082E               	movf	_uiCounterms+2,w
   508  0069  00F4               	movwf	??_main+2
   509  006A  082F               	movf	_uiCounterms+3,w
   510  006B  00F5               	movwf	??_main+3
   511  006C  0820               	movf	main@uiContadorTempo,w
   512  006D  02F2               	subwf	??_main,f
   513  006E  0821               	movf	main@uiContadorTempo+1,w
   514  006F  1C03               	skipc
   515  0070  0F21               	incfsz	main@uiContadorTempo+1,w
   516  0071  2873               	goto	u61
   517  0072  2874               	goto	u62
   518  0073                     u61:
   519  0073  02F3               	subwf	??_main+1,f
   520  0074                     u62:
   521  0074  0822               	movf	main@uiContadorTempo+2,w
   522  0075  1C03               	skipc
   523  0076  0F22               	incfsz	main@uiContadorTempo+2,w
   524  0077  2879               	goto	u63
   525  0078  287A               	goto	u64
   526  0079                     u63:
   527  0079  02F4               	subwf	??_main+2,f
   528  007A                     u64:
   529  007A  0823               	movf	main@uiContadorTempo+3,w
   530  007B  1C03               	skipc
   531  007C  0F23               	incfsz	main@uiContadorTempo+3,w
   532  007D  287F               	goto	u65
   533  007E  2880               	goto	u66
   534  007F                     u65:
   535  007F  02F5               	subwf	??_main+3,f
   536  0080                     u66:
   537  0080  0875               	movf	??_main+3,w
   538  0081  1D03               	btfss	3,2
   539  0082  2892               	goto	u70
   540  0083  0874               	movf	??_main+2,w
   541  0084  1D03               	btfss	3,2
   542  0085  2892               	goto	u70
   543  0086  3003               	movlw	3
   544  0087  0273               	subwf	??_main+1,w
   545  0088  1D03               	skipz
   546  0089  288E               	goto	u73
   547  008A  30E9               	movlw	233
   548  008B  0272               	subwf	??_main,w
   549  008C  1D03               	skipz
   550  008D  288E               	goto	u73
   551  008E                     u73:
   552  008E  1C03               	btfss	3,0
   553  008F  2891               	goto	u71
   554  0090  2892               	goto	u70
   555  0091                     u71:
   556  0091  2862               	goto	l763
   557  0092                     u70:
   558  0092                     l765:
   559                           
   560                           ;main.c: 113:             PORTC = text[indice];
   561  0092  1283               	bcf	3,5	;RP0=0, select bank0
   562  0093  1303               	bcf	3,6	;RP1=0, select bank0
   563  0094  082A               	movf	main@indice,w
   564  0095  3E24               	addlw	(low (main@text| 0))& (0+255)
   565  0096  0084               	movwf	4
   566  0097  1383               	bcf	3,7	;select IRP bank0
   567  0098  0800               	movf	0,w
   568  0099  0087               	movwf	7	;volatile
   569  009A                     l767:
   570                           
   571                           ;main.c: 114:             indice++;
   572  009A  3001               	movlw	1
   573  009B  07AA               	addwf	main@indice,f
   574  009C  1803               	skipnc
   575  009D  0AAB               	incf	main@indice+1,f
   576  009E  3000               	movlw	0
   577  009F  07AB               	addwf	main@indice+1,f
   578  00A0                     l769:
   579                           
   580                           ;main.c: 115:             if(indice > 5){
   581  00A0  082B               	movf	main@indice+1,w
   582  00A1  3A80               	xorlw	128
   583  00A2  00FF               	movwf	btemp+1
   584  00A3  3080               	movlw	128
   585  00A4  027F               	subwf	btemp+1,w
   586  00A5  1D03               	skipz
   587  00A6  28A9               	goto	u85
   588  00A7  3006               	movlw	6
   589  00A8  022A               	subwf	main@indice,w
   590  00A9                     u85:
   591  00A9  1C03               	skipc
   592  00AA  28AC               	goto	u81
   593  00AB  28AD               	goto	u80
   594  00AC                     u81:
   595  00AC  28B1               	goto	l773
   596  00AD                     u80:
   597  00AD                     l771:
   598                           
   599                           ;main.c: 116:                 indice = 0;
   600  00AD  1283               	bcf	3,5	;RP0=0, select bank0
   601  00AE  1303               	bcf	3,6	;RP1=0, select bank0
   602  00AF  01AA               	clrf	main@indice
   603  00B0  01AB               	clrf	main@indice+1
   604  00B1                     l773:
   605                           
   606                           ;main.c: 118:             uiContadorTempo = uiCounterms;
   607  00B1  1283               	bcf	3,5	;RP0=0, select bank0
   608  00B2  1303               	bcf	3,6	;RP1=0, select bank0
   609  00B3  082F               	movf	_uiCounterms+3,w
   610  00B4  00A3               	movwf	main@uiContadorTempo+3
   611  00B5  082E               	movf	_uiCounterms+2,w
   612  00B6  00A2               	movwf	main@uiContadorTempo+2
   613  00B7  082D               	movf	_uiCounterms+1,w
   614  00B8  00A1               	movwf	main@uiContadorTempo+1
   615  00B9  082C               	movf	_uiCounterms,w
   616  00BA  00A0               	movwf	main@uiContadorTempo
   617  00BB  2862               	goto	l763
   618  00BC  280A               	ljmp	start
   619  00BD                     __end_of_main:
   620                           
   621                           	psect	text1
   622  00BD                     __ptext1:	
   623 ;; *************** function _my_isr_routine *****************
   624 ;; Defined at:
   625 ;;		line 31 in file "main.c"
   626 ;; Parameters:    Size  Location     Type
   627 ;;		None
   628 ;; Auto vars:     Size  Location     Type
   629 ;;		None
   630 ;; Return value:  Size  Location     Type
   631 ;;                  1    wreg      void 
   632 ;; Registers used:
   633 ;;		wreg
   634 ;; Tracked objects:
   635 ;;		On entry : 0/0
   636 ;;		On exit  : 0/0
   637 ;;		Unchanged: 0/0
   638 ;; Data sizes:     COMMON   BANK0   BANK1
   639 ;;      Params:         0       0       0
   640 ;;      Locals:         0       0       0
   641 ;;      Temps:          2       0       0
   642 ;;      Totals:         2       0       0
   643 ;;Total ram usage:        2 bytes
   644 ;; Hardware stack levels used: 1
   645 ;; This function calls:
   646 ;;		Nothing
   647 ;; This function is called by:
   648 ;;		Interrupt level 1
   649 ;; This function uses a non-reentrant model
   650 ;;
   651                           
   652                           
   653                           ;psect for function _my_isr_routine
   654  00BD                     _my_isr_routine:
   655  00BD                     i1l709:
   656                           
   657                           ;main.c: 34:     if(T0IF)
   658  00BD  1D0B               	btfss	11,2	;volatile
   659  00BE  28C0               	goto	u5_21
   660  00BF  28C1               	goto	u5_20
   661  00C0                     u5_21:
   662  00C0  28D4               	goto	i1l32
   663  00C1                     u5_20:
   664  00C1                     i1l711:
   665                           
   666                           ;main.c: 35:     {;main.c: 36:         T0IF = 0;
   667  00C1  110B               	bcf	11,2	;volatile
   668  00C2                     i1l713:
   669                           
   670                           ;main.c: 37:         TMR0 = 133;
   671  00C2  3085               	movlw	133
   672  00C3  1283               	bcf	3,5	;RP0=0, select bank0
   673  00C4  1303               	bcf	3,6	;RP1=0, select bank0
   674  00C5  0081               	movwf	1	;volatile
   675                           
   676                           ;main.c: 39:         uiCounterms++;
   677  00C6  3001               	movlw	1
   678  00C7  07AC               	addwf	_uiCounterms,f
   679  00C8  3000               	movlw	0
   680  00C9  1803               	skipnc
   681  00CA  3001               	movlw	1
   682  00CB  07AD               	addwf	_uiCounterms+1,f
   683  00CC  3000               	movlw	0
   684  00CD  1803               	skipnc
   685  00CE  3001               	movlw	1
   686  00CF  07AE               	addwf	_uiCounterms+2,f
   687  00D0  3000               	movlw	0
   688  00D1  1803               	skipnc
   689  00D2  3001               	movlw	1
   690  00D3  07AF               	addwf	_uiCounterms+3,f
   691  00D4                     i1l32:
   692  00D4  0871               	movf	??_my_isr_routine+1,w
   693  00D5  008A               	movwf	10
   694  00D6  0E70               	swapf	??_my_isr_routine,w
   695  00D7  0083               	movwf	3
   696  00D8  0EFE               	swapf	btemp,f
   697  00D9  0E7E               	swapf	btemp,w
   698  00DA  0009               	retfie
   699  00DB                     __end_of_my_isr_routine:
   700  007E                     btemp	set	126	;btemp
   701  007E                     wtemp0	set	126
   702                           
   703                           	psect	intentry
   704  0004                     __pintentry:	
   705                           ;incstack = 0
   706                           ; Regs used in _my_isr_routine: [wreg]
   707                           
   708  0004                     interrupt_function:
   709  007E                     saved_w	set	btemp
   710  0004  00FE               	movwf	btemp
   711  0005  0E03               	swapf	3,w
   712  0006  00F0               	movwf	??_my_isr_routine
   713  0007  080A               	movf	10,w
   714  0008  00F1               	movwf	??_my_isr_routine+1
   715  0009  28BD               	ljmp	_my_isr_routine
   716                           
   717                           	psect	config
   718                           
   719                           ;Config register CONFIG @ 0x2007
   720                           ;	Oscillator Selection bits
   721                           ;	FOSC = INTRCIO, INTOSCIO oscillator: I/O function on RA4/OSC2/CLKOUT pin, I/O function
      +                           on RA5/OSC1/CLKIN
   722                           ;	Watchdog Timer Enable bit
   723                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   724                           ;	Power-up Timer Enable bit
   725                           ;	PWRTE = OFF, PWRT disabled
   726                           ;	MCLR Pin Function Select bit
   727                           ;	MCLRE = OFF, MCLR pin function is digital input, MCLR internally tied to VDD
   728                           ;	Code Protection bit
   729                           ;	CP = OFF, Program memory code protection is disabled
   730                           ;	Data Code Protection bit
   731                           ;	CPD = OFF, Data memory code protection is disabled
   732                           ;	Brown-out Reset Selection bits
   733                           ;	BOREN = OFF, BOR disabled
   734                           ;	Internal External Switchover bit
   735                           ;	IESO = OFF, Internal External Switchover mode is disabled
   736                           ;	Fail-Safe Clock Monitor Enabled bit
   737                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   738  2007                     	org	8199
   739  2007  30D4               	dw	12500

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       6
    BANK0            80     12      16
    BANK1            32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _my_isr_routine in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _my_isr_routine in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _my_isr_routine in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                16    16      0     261
                                              2 COMMON     4     4      0
                                              0 BANK0     12    12      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _my_isr_routine                                       2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _my_isr_routine (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       6       1       42.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            50      0       0       3        0.0%
BANK0               50      C      10       4       20.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BITBANK1            20      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BANK1               20      0       0       6        0.0%
ABS                  0      0      16       7        0.0%
DATA                 0      0      16       8        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Nov 17 13:11:23 2021

                     u61 0073                       u70 0092                       u62 0074  
                     u71 0091                       u63 0079                       u80 00AD  
                     u64 007A                       u81 00AC                       u73 008E  
                     u65 007F                       u66 0080                       u85 00A9  
                    l721 0023                      l731 002C                      l723 0025  
                    l715 0013                      l741 0036                      l733 002D  
                    l725 0029                      l717 0016                      l751 004C  
                    l743 0038                      l735 002E                      l727 002A  
                    l719 001A                      l761 005C                      l753 0050  
                    l745 0040                      l737 0031                      l729 002B  
                    l771 00AD                      l763 0062                      l755 0054  
                    l747 0044                      l739 0032                      l773 00B1  
                    l765 0092                      l757 0058                      l749 0048  
                    l767 009A                      l759 005A                      l769 00A0  
                    _GIE 005F                      fsr0 0004                      indf 0000  
                   _T0IE 005D                     _T0IF 005A                     _PEIE 005E  
                   _INTE 005C                     i1l32 00D4                     _TMR0 0001  
                   u5_20 00C1                     u5_21 00C0                     _main 0013  
                   btemp 007E                     start 000A                    ?_main 0070  
                  i1l711 00C1                    i1l713 00C2                    i1l709 00BD  
                  _PORTB 0006                    _PORTC 0007                    _TRISB 0086  
                  _TRISC 0087                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 000B             __end_of_main 00BD  
                 ??_main 0072                   _OSCCON 008F                   saved_w 007E  
__end_of__initialization 0011           __pcstackCOMMON 0070      main@uiContadorTempo 0020  
             __pbssBANK0 002C               __pmaintext 0013               __pintentry 0004  
__size_of_my_isr_routine 001E                  __ptext1 00BD     end_of_initialization 0011  
             main@indice 002A      start_initialization 000B           _my_isr_routine 00BD  
              ___latbits 0000            __pcstackBANK0 0020   __end_of_my_isr_routine 00DB  
        ?_my_isr_routine 0070        interrupt_function 0004              _uiCounterms 002C  
          __size_of_main 00AA                 main@text 0024                 intlevel1 0000  
       ??_my_isr_routine 0070               _OPTION_REG 0081  
